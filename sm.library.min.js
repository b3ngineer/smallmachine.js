var smallmachine=function(e){"function"!==typeof Object.getPrototypeOf&&(Object.getPrototypeOf="object"===typeof"test".__proto__?function(b){return b.__proto__}:function(b){return b.constructor.prototype});e=function(b,g){if("undefined"===typeof b)throw Error("Missing required parameter for smallmachine constructor: one or more instances of type [object Ontology]");var c=[].concat(b);if(1===c.length)return c[0].getModel(g);for(var l=new e.Ontology(c[0].title),a=0;a<c.length;a++){for(var d in c[a])c[a].hasOwnProperty(d)&&
"function"===typeof c[a][d].ofType&&c[a][d].ofType("Proxy")&&l.addTerm(c[a][d]._term._value);for(var f=0;f<c[a]._inferencer._rules.length;f++)l._inferencer._rules.push(c[a]._inferencer._rules[f]);for(f=0;f<c[a]._activators.length;f++)l.registerActivator(c[a]._activators[f])}return l.getModel(g)};e.alsoBehavesLike=function(b,g){for(var c in g)if(g.hasOwnProperty(c)&&0!=c.indexOf("_"))if("undefined"!==typeof b[c]){var a="undefined"!==typeof b[c].prototype?b[c].prototype.virtual:!1,d="undefined"!==typeof g[c].prototype?
g[c].prototype.virtual:!1;if(!a||!d)a&&(b[c]=g[c])}else b[c]=g[c];"undefined"!==typeof g.prototype&&("undefined"===typeof b.prototype&&(b.prototype={}),e.alsoBehavesLike(b.prototype,g.prototype))};e.CONCEPT="concept";e.RELATIONSHIP="relationship";var a=function(b,g){this._term=b;this._rules=g._rules;return this};a.prototype.getType=function(){return"[object Proxy]"};a.prototype.ofType=function(b){return"Proxy"===b||"function"===typeof b.getType&&b.getType()===this.getType()};var k=function(){return this};
k.prototype.relate=function(b){"undefined"===typeof this._relatesTo&&(this._relatesTo=[]);for(var g=!1,c=0;c<this._relatesTo.length;c++)if(this._relatesTo[c]._id==b._id){g=!0;break}g||this._relatesTo.push(b)};k.prototype.getType=function(){return"[object Term]"};k.prototype.ofType=function(b){return"Term"===b||"function"===typeof b.getType&&b.getType()===this.getType()};e.Behavior=function(b){this.title=b;return this};e.Ontology=function(b){this.title=b;this._inferencer=new h;this._activators=[];
this._term=function(b){this._id=function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(b){var a=16*Math.random()|0;return("x"==b?a:a&3|8).toString(16)})}();"undefined"!==typeof b._value&&"undefined"!==typeof b._type?(this._value=b._value,this._type=b._type):(this._value=b,this._type=null);return this};return this};e.Ontology.prototype.getType=function(){return"[object Ontology]"};e.Ontology.prototype.addTerm=function(b){if("undefined"!==typeof this[b])return this;var g=this._term;
g.prototype.relate=k.prototype.relate;g.prototype.getType=k.prototype.getType;g.prototype.ofType=k.prototype.ofType;g=new g(b);this[b]=new a(g,this._inferencer);return this};e.Ontology.prototype.registerActivator=function(b){this._activators.push(b)};e.Ontology.prototype.getModel=function(b){var a=new function(b){return this},c;for(c in this)if(this.hasOwnProperty(c)&&!("undefined"===typeof this[c]||"undefined"===this[c]._term)&&0!==c.indexOf("_"))"undefined"!==typeof this[c]._term?(a[c]=this[c]._term,
"undefined"!==typeof b&&e.alsoBehavesLike(Object.getPrototypeOf(a[c]),b.prototype)):a[c]=this[c];this._inferencer._rules.sort(function(b,c){return b._priority-c._priority});for(b=0;b<this._inferencer._rules.length;b++)c=this._inferencer._rules[b],c._fn.apply(a,c._args);for(b=0;b<this._activators.length;b++)this._activators[b](a);return a};var h=function(){this._term={_value:null};this._rules=[];return this},d=function(b,a,c){this._fn=a;this._args=c;this._priority=b;return this};h.prototype.isA=function(b){this._rules.push(new d(1,
n,[this._term._value,b._term._value]));return this};h.prototype.relatesTo=function(b,a){this._rules.push(new d(10,f,[this._term._value,b._term._value,a._term._value]));return this};h.prototype.hasDomain=function(b){this._rules.push(new d(3,m,[this._term._value,b._term._value]));return this};h.prototype.hasRange=function(b){this._rules.push(new d(2,p,[this._term._value,b._term._value]));return this};e.alsoBehavesLike(a,h);var f=function(b,a,c){b=this[b];var l=this[a],d=this[c];if(l._type===e.CONCEPT)throw Error("Cannot define a relationship with a concept type: "+
l._value);null===l._type&&(l._type=e.RELATIONSHIP);if(d._type===e.RELATIONSHIP)throw Error("Cannot create a relationship with a relationship type: "+d._value);null===d._type&&(d._type=e.CONCEPT);if(b._type===e.RELATIONSHIP)throw Error("Cannot create a relationship from a relationship type: "+b._value);null===b._type&&(b._type=e.CONCEPT);"undefined"===typeof b[a]&&(b[a]=new b.constructor(l));"undefined"===typeof b[a][c]&&(b[a][c]=d);"undefined"===typeof b[c]&&(b[c]=d);d.relate(b[a]);for(var f in d)d.hasOwnProperty(f)&&
(d[f].getType&&"[object Term]"===d[f].getType())&&("undefined"===typeof b[a][f]&&(b[a][f]=d[f]),"undefined"===typeof b[f]&&(b[f]=d[f]),d[f].relate(b[a]))},n=function(b,a){var c=this[b],d=this[a];if(d._type===e.RELATIONSHIP)throw Error("Cannot apply isA to a relationship type: "+d._value);null===d._type&&(d._type=e.CONCEPT);if(c._type===e.RELATIONSHIP)throw Error("Cannot apply isA to a relationship type: "+c._value);null===c._type&&(c._type=e.CONCEPT);"undefined"===typeof d[b]&&(d[b]=c)},p=function(b,
a){var c=this[b],d=this[a];if(d._type===e.RELATIONSHIP)throw Error("Cannot apply hasRange to a relationship type: "+d._value);null===d._type&&(d._type=e.CONCEPT);if(c._type===e.CONCEPT)throw Error("Cannot assign hasRange from a concept type: "+c._value);null===c._type&&(c._type=e.RELATIONSHIP);"undefined"===typeof c[a]&&(c[a]=d);d.relate(c);for(var f in d)if(d.hasOwnProperty(f)&&d[f].getType&&"[object Term]"===d[f].getType()){var h=d[f]._value;"undefined"===typeof c[h]&&(c[h]=d[f]);d[f].relate(c)}},
m=function(b,a){var c=this[b],d=this[a];if(d._type===e.RELATIONSIP)throw Error("Cannot apply hasRange to a relationship type: "+d._value);null===d._type&&(d._type=e.CONCEPT);if(c._type===e.CONCEPT)throw Error("Cannot assign hasRange from a concept type: "+c._value);null===c._type&&(c._type=e.RELATIONSHIP);"undefined"===typeof d[b]&&(d[b]=c)};return e}(smallmachine||{});(function(e){var a=new e.Ontology("sm.properties");a.addTerm("property");a.addTerm("type");a.addTerm("ontology");a.addTerm("behavior");a.addTerm("hasMemberType");a.addTerm("hasMember");a.addTerm("Ontology");a.addTerm("Behavior");a.addTerm("Constructor");a.addTerm("Null");a.ontology.isA(a.property);a.behavior.isA(a.property);a.Ontology.isA(a.type);a.Behavior.isA(a.type);a.Constructor.isA(a.type);a.Null.isA(a.type);a.ontology.relatesTo(a.hasMemberType,a.Ontology);a.behavior.relatesTo(a.hasMemberType,
a.Behavior);a.ontology.relatesTo(a.hasMember,a.Null);a.behavior.relatesTo(a.hasMember,a.Null);var k=function(){return this};k.prototype.extendedBy=function(a,f){if("undefined"!==typeof f&&"function"===typeof a)"undefined"!==typeof this[f]?e.alsoBehavesLike(this[f],a):this[f]=a,"function"!==typeof this[f].prototype.getType&&(this[f].prototype.getType=function(){return"[object "+f+"]"}),"function"!==typeof this[f].prototype.ofType&&(this[f].prototype.ofType=function(b){return"function"===typeof b.getType?
this.getType()===b.getType():this.getType()==="[object "+b+"]"});else{if("undefined"===typeof a.title)throw Error("Cannot extendedBy the core ontology with model that is missing the 'title' property");if("undefined"!==typeof this[a.title])e.alsoBehavesLike(this[a.title],a);else{var h=this.hasMemberType;if("undefined"===typeof h||"undefined"===typeof h.getType)throw Error("The specified concept does not have a valid 'hasMemberType' relationship with another concept");var k=e[this._value][h._value];
if("undefined"===typeof k)throw Error("The specified type does not exist in the core object model: "+h._value);if("function"!==typeof a.getType)throw Error("The specified model is missing the getType function: "+a.title);var h=a.getType(),m=!1,b;for(b in k)if(k.hasOwnProperty(b)&&"undefined"!==typeof this[b].getType&&"[object "+b+"]"===h){this.hasMember[a.title]=a;this[a.title]=a;m=!0;break}if(!m)throw Error("Did not find an allowed model type for: "+h);}}};var h=function(){this.title="Null";return this};
h.prototype.getType=function(){return"[object Null]"};h.prototype.ofType=function(a){return null===a||"null"===a||"Null"===a?!0:!1};e.alsoBehavesLike(e,a.getModel(k));e.ontology.extendedBy(new h);e.behavior.extendedBy(new h);a=function(a){this._channel=a;return this};a.prototype.publish=function(a,e){this._channel.publish(a,e);return this};e.type.extendedBy(a,"AsyncResult")})(smallmachine);
