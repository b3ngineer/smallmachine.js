var smallmachine=function(b){"function"!==typeof Object.getPrototypeOf&&(Object.getPrototypeOf="object"===typeof"test".__proto__?function(a){return a.__proto__}:function(a){return a.constructor.prototype});b=function(a,c){if("undefined"===typeof a)throw Error("Missing required parameter for smallmachine constructor: one or more instances of type [object Ontology]");var e=[].concat(a);if(1===e.length)return e[0].getModel(c);for(var f=new b.Ontology(e[0].title),d=0;d<e.length;d++){for(var g in e[d])e[d].hasOwnProperty(g)&&
"function"===typeof e[d][g].ofType&&e[d][g].ofType("Proxy")&&f.addTerm(e[d][g]._term._value);for(var k=0;k<e[d]._inferencer._rules.length;k++)f._inferencer._rules.push(e[d]._inferencer._rules[k]);for(k=0;k<e[d]._activators.length;k++)f.registerActivator(e[d]._activators[k])}return f.getModel(c)};b.alsoBehavesLike=function(a,c){for(var e in c)if(c.hasOwnProperty(e)&&0!=e.indexOf("_"))if("undefined"!==typeof a[e]){var f="undefined"!==typeof a[e].prototype?a[e].prototype.virtual:!1,d="undefined"!==typeof c[e].prototype?
c[e].prototype.virtual:!1;if(!f||!d)f&&(a[e]=c[e])}else a[e]=c[e];"undefined"!==typeof c.prototype&&("undefined"===typeof a.prototype&&(a.prototype={}),b.alsoBehavesLike(a.prototype,c.prototype))};b.CONCEPT="concept";b.RELATIONSHIP="relationship";var a=function(a,c){this._term=a;this._rules=c._rules;return this};a.prototype.getType=function(){return"[object Proxy]"};a.prototype.ofType=function(a){return"Proxy"===a||"function"===typeof a.getType&&a.getType()===this.getType()};var f=function(){return this};
f.prototype.relate=function(a){"undefined"===typeof this._relatesTo&&(this._relatesTo=[]);for(var c=!1,e=0;e<this._relatesTo.length;e++)if(this._relatesTo[e]._id==a._id){c=!0;break}c||this._relatesTo.push(a)};f.prototype.getType=function(){return"[object Term]"};f.prototype.ofType=function(a){return"Term"===a||"function"===typeof a.getType&&a.getType()===this.getType()};b.Behavior=function(a){this.title=a;return this};b.Ontology=function(a){this.title=a;this._inferencer=new g;this._activators=[];
this._term=function(a){this._id=function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(a){var c=16*Math.random()|0;return("x"==a?c:c&3|8).toString(16)})}();"undefined"!==typeof a._value&&"undefined"!==typeof a._type?(this._value=a._value,this._type=a._type):(this._value=a,this._type=null);return this};return this};b.Ontology.prototype.getType=function(){return"[object Ontology]"};b.Ontology.prototype.addTerm=function(c){if("undefined"!==typeof this[c])return this;var b=this._term;
b.prototype.relate=f.prototype.relate;b.prototype.getType=f.prototype.getType;b.prototype.ofType=f.prototype.ofType;b=new b(c);this[c]=new a(b,this._inferencer);return this};b.Ontology.prototype.registerActivator=function(a){this._activators.push(a)};b.Ontology.prototype.getModel=function(a){var c=new function(a){return this},e;for(e in this)if(this.hasOwnProperty(e)&&!("undefined"===typeof this[e]||"undefined"===this[e]._term)&&0!==e.indexOf("_"))"undefined"!==typeof this[e]._term?(c[e]=this[e]._term,
"undefined"!==typeof a&&b.alsoBehavesLike(Object.getPrototypeOf(c[e]),a.prototype)):c[e]=this[e];this._inferencer._rules.sort(function(a,c){return a._priority-c._priority});for(a=0;a<this._inferencer._rules.length;a++)e=this._inferencer._rules[a],e._fn.apply(c,e._args);for(a=0;a<this._activators.length;a++)this._activators[a](c);return c};var g=function(){this._term={_value:null};this._rules=[];return this},c=function(a,c,e){this._fn=c;this._args=e;this._priority=a;return this};g.prototype.isA=function(a){this._rules.push(new c(1,
k,[this._term._value,a._term._value]));return this};g.prototype.relatesTo=function(a,b){this._rules.push(new c(10,d,[this._term._value,a._term._value,b._term._value]));return this};g.prototype.hasDomain=function(a){this._rules.push(new c(3,h,[this._term._value,a._term._value]));return this};g.prototype.hasRange=function(a){this._rules.push(new c(2,m,[this._term._value,a._term._value]));return this};b.alsoBehavesLike(a,g);var d=function(a,c,e){a=this[a];var f=this[c],d=this[e];if(f._type===b.CONCEPT)throw Error("Cannot define a relationship with a concept type: "+
f._value);null===f._type&&(f._type=b.RELATIONSHIP);if(d._type===b.RELATIONSHIP)throw Error("Cannot create a relationship with a relationship type: "+d._value);null===d._type&&(d._type=b.CONCEPT);if(a._type===b.RELATIONSHIP)throw Error("Cannot create a relationship from a relationship type: "+a._value);null===a._type&&(a._type=b.CONCEPT);"undefined"===typeof a[c]&&(a[c]=new a.constructor(f));"undefined"===typeof a[c][e]&&(a[c][e]=d);"undefined"===typeof a[e]&&(a[e]=d);d.relate(a[c]);for(var g in d)d.hasOwnProperty(g)&&
(d[g].getType&&"[object Term]"===d[g].getType())&&("undefined"===typeof a[c][g]&&(a[c][g]=d[g]),"undefined"===typeof a[g]&&(a[g]=d[g]),d[g].relate(a[c]))},k=function(a,c){var e=this[a],d=this[c];if(d._type===b.RELATIONSHIP)throw Error("Cannot apply isA to a relationship type: "+d._value);null===d._type&&(d._type=b.CONCEPT);if(e._type===b.RELATIONSHIP)throw Error("Cannot apply isA to a relationship type: "+e._value);null===e._type&&(e._type=b.CONCEPT);"undefined"===typeof d[a]&&(d[a]=e)},m=function(a,
c){var e=this[a],d=this[c];if(d._type===b.RELATIONSHIP)throw Error("Cannot apply hasRange to a relationship type: "+d._value);null===d._type&&(d._type=b.CONCEPT);if(e._type===b.CONCEPT)throw Error("Cannot assign hasRange from a concept type: "+e._value);null===e._type&&(e._type=b.RELATIONSHIP);"undefined"===typeof e[c]&&(e[c]=d);d.relate(e);for(var f in d)if(d.hasOwnProperty(f)&&d[f].getType&&"[object Term]"===d[f].getType()){var g=d[f]._value;"undefined"===typeof e[g]&&(e[g]=d[f]);d[f].relate(e)}},
h=function(a,c){var d=this[a],f=this[c];if(f._type===b.RELATIONSIP)throw Error("Cannot apply hasRange to a relationship type: "+f._value);null===f._type&&(f._type=b.CONCEPT);if(d._type===b.CONCEPT)throw Error("Cannot assign hasRange from a concept type: "+d._value);null===d._type&&(d._type=b.RELATIONSHIP);"undefined"===typeof f[a]&&(f[a]=d)};return b}(smallmachine||{});(function(b){var a=new b.Ontology("sm.properties");a.addTerm("property");a.addTerm("type");a.addTerm("ontology");a.addTerm("behavior");a.addTerm("hasMemberType");a.addTerm("hasMember");a.addTerm("Ontology");a.addTerm("Behavior");a.addTerm("Constructor");a.addTerm("Null");a.ontology.isA(a.property);a.behavior.isA(a.property);a.Ontology.isA(a.type);a.Behavior.isA(a.type);a.Constructor.isA(a.type);a.Null.isA(a.type);a.ontology.relatesTo(a.hasMemberType,a.Ontology);a.behavior.relatesTo(a.hasMemberType,
a.Behavior);a.ontology.relatesTo(a.hasMember,a.Null);a.behavior.relatesTo(a.hasMember,a.Null);var f=function(){return this};f.prototype.extendedBy=function(a,d){if("undefined"!==typeof d&&"function"===typeof a)"undefined"!==typeof this[d]?b.alsoBehavesLike(this[d],a):this[d]=a,"function"!==typeof this[d].prototype.getType&&(this[d].prototype.getType=function(){return"[object "+d+"]"}),"function"!==typeof this[d].prototype.ofType&&(this[d].prototype.ofType=function(a){return"function"===typeof a.getType?
this.getType()===a.getType():this.getType()==="[object "+a+"]"});else{if("undefined"===typeof a.title)throw Error("Cannot extendedBy the core ontology with model that is missing the 'title' property");if("undefined"!==typeof this[a.title])b.alsoBehavesLike(this[a.title],a);else{var f=this.hasMemberType;if("undefined"===typeof f||"undefined"===typeof f.getType)throw Error("The specified concept does not have a valid 'hasMemberType' relationship with another concept");var g=b[this._value][f._value];
if("undefined"===typeof g)throw Error("The specified type does not exist in the core object model: "+f._value);if("function"!==typeof a.getType)throw Error("The specified model is missing the getType function: "+a.title);var f=a.getType(),h=!1,l;for(l in g)if(g.hasOwnProperty(l)&&"undefined"!==typeof this[l].getType&&"[object "+l+"]"===f){this.hasMember[a.title]=a;this[a.title]=a;h=!0;break}if(!h)throw Error("Did not find an allowed model type for: "+f);}}};var g=function(){this.title="Null";return this};
g.prototype.getType=function(){return"[object Null]"};g.prototype.ofType=function(a){return null===a||"null"===a||"Null"===a?!0:!1};b.alsoBehavesLike(b,a.getModel(f));b.ontology.extendedBy(new g);b.behavior.extendedBy(new g);a=function(a){this._channel=a;return this};a.prototype.publish=function(a,d){this._channel.publish(a,d);return this};b.type.extendedBy(a,"AsyncResult")})(smallmachine);(function(b){var a=new b.Ontology("sm.channels");a.addTerm("thing");a.addTerm("user");a.addTerm("system");a.addTerm("action");a.addTerm("click");a.addTerm("doubleClick");a.addTerm("keyPress");a.addTerm("task");a.addTerm("initialize");a.addTerm("insert");a.addTerm("remove");a.addTerm("get");a.addTerm("set");a.addTerm("messenger");a.addTerm("success");a.addTerm("error");a.addTerm("performs");a.addTerm("reactsTo");a.user.isA(a.thing);a.user.relatesTo(a.performs,a.action);a.system.isA(a.thing);a.system.relatesTo(a.performs,
a.task);a.action.isA(a.thing);a.task.isA(a.thing);a.messenger.isA(a.thing);a.click.isA(a.action);a.doubleClick.isA(a.action);a.keyPress.isA(a.action);a.get.isA(a.task);a.set.isA(a.task);a.success.isA(a.messenger);a.error.isA(a.messenger);a.initialize.isA(a.task);a.insert.isA(a.task);a.remove.isA(a.task);a.performs.hasRange(a.action).hasRange(a.task);a.reactsTo.hasRange(a.action).hasDomain(a.system);a.registerActivator(function(a){var c=function(c,f){if("undefined"!==typeof jQuery)try{jQuery.ajax({dataType:"json",
url:c,type:"GET",success:function(c,d,e){a.messenger.success.publish(d);f.publish(c)},error:function(c,d,f){a.messenger.error.publish(f)}})}catch(b){a.messenger.error.publish(b)}else{var h=window.XMLHttpRequest?new XMLHttpRequest:new ActiveXObject("MSXML2.XMLHTTP.3.0");h.onprogress=function(){};h.onerror={};h.onreadystatechange=function(){4>h.readyState||(200==h.status?(a.messenger.success.publish(h.statusText),f.publish(JSON.parse(h.responseText))):a.messenger.error.publish(h.statusText))};h.open("GET",
c,!0);h.setRequestHeader("X-Requested-With","XMLHttpRequest");h.setRequestHeader("Content-type","application/json");h.send(null)}return f};"undefined"!==typeof a.initialize&&"undefined"!==typeof a.initialize.addHelper&&a.initialize.addHelper("json",c);b.type.extendedBy(function(a,c){this.target=a;this.context=c;return this},"Hook");c=function(a,c,f){return new b.type.Hook(a,c)};"undefined"!==typeof a.insert&&"undefined"!==typeof a.insert.addHelper&&a.insert.addHelper("hook",c)});try{b.ontology.extendedBy(a)}catch(f){throw Error("Could not extend the smallmachine.ontology property with the 'sm.channels' ontology: "+
f.message+"\n"+f.stack);}})(smallmachine);(function(b){var a=function(a,b){this._value=a;this._type=b;return this};a.prototype.forward=function(a,b){null!=this._value&&(b[this._value]=!0);for(var c in this)if(this.hasOwnProperty(c)&&!("function"===typeof this[c]||0===c.indexOf("_"))&&!0!==b[c]&&"function"===typeof this[c].publish)b[c]=!0,this[c].publish(a,b);if("undefined"!==typeof this._relatesTo)for(c=0;c<this._relatesTo.length;c++)"undefined"!==typeof this._relatesTo[c]._subscribers&&this.notify(a,this._relatesTo[c]._subscribers)};a.prototype.subscribe=
function(a){"undefined"===typeof this._subscribers&&(this._subscribers=[]);if("function"===typeof a)return this._subscribers.push({update:a}),this;this._subscribers.push(a);return this};a.prototype.notify=function(a,b){for(var c=!1,d=[],k=[],m=0;m<b.length;m++){var h=b[m].update(a);!0===h?c=!0:"function"===typeof h?(k.push(h),c=!0):"object"===typeof h&&"function"===typeof h.update&&d.push(h)}if(c)for(m=0;m<k.length;m++)k[m](a);else 0<d.length&&this.notify(a,d)};a.prototype.publish=function(a,g){g=
g||{};if("function"===typeof a&&(a=a(new b.type.AsyncResult(this)),"undefined"!==typeof a&&"function"===typeof a.getType&&"[object AsyncResult]"===a.getType()))return this;if("undefined"===typeof this._subscribers)return this.forward(a,g),this;this.notify(a,this._subscribers);this.forward(a,g);return this};a.prototype.addHelper=function(b,g){var c=a.prototype.publish,d=this;this[b]=function(){for(var a=[],b=0;b<arguments.length;b++)a.push(arguments[b]);return c.apply(d,[function(c){a.push(c);return g.apply(d,
a)}])};return this};a.prototype.getType=function(){return"[object Channel]"};a.prototype.ofType=function(a){return"Channel"===a||"function"===typeof a.getType&&a.getType()===this.getType()};b.behavior.extendedBy(a,"Channel")})(smallmachine);(function(b){var a=function(){return this};a.prototype.getType=function(){return"[object Security]"};a.prototype.ofType=function(a){return"Security"===a||"function"===typeof a.getType&&a.getType()===this.getType()};b.behavior.extendedBy(a,"Security")})(smallmachine);(function(b){var a=new b.Ontology("sm.nodes");try{b.ontology.extendedBy(a)}catch(f){throw Error("Could not extend the smallmachine.ontology property with the 'sm.nodes' ontology: "+f.message+"\n"+f.stack);}})(smallmachine);(function(b,a,f){var g=function(a){this.id=a.id||function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(a){var c=16*Math.random()|0;return("x"==a?c:c&3|8).toString(16)})}();this.width=parseFloat(a.width)||50;this.height=parseFloat(a.height)||50;this.y=parseFloat(a.y);this.x=parseFloat(a.x);this.edges=a.edges||[];this.label=a.label||this.id;return this};g.prototype.update=function(a){var b=a.context.circle(this.x,this.y,this.width/2,this.height/2);b.id=this.id;b.attr({fill:"#ffffff"});
a.context.text(this.x,this.y,this.label);return!0};b.type.extendedBy(g,"Node");g=function(a,b,f){this.id1=a.id;this.id2=b.id;this.x1=parseFloat(a.x);this.y1=parseFloat(a.y);this.x2=parseFloat(b.x);this.y2=parseFloat(b.y);this.label=a.edges[f].label||"";return this};g.prototype.update=function(a){a.context.path(["M",this.x1,this.y1,"L",this.x2,this.y2]);var b=parseFloat(this.x1),f=parseFloat(this.y1),g=parseFloat(this.x2),h=parseFloat(this.y2);a=a.context.text((b+g)/2,(f+h)/2-6,this.label);b=180*Math.atan2(h-
f,g-b)/Math.PI;a.transform("r"+b)};b.type.extendedBy(g,"Edge");b.type.extendedBy(function(c){if("sm.channels"!==c.title)throw Error("The sm.Bones functionality requires a model from the sm.channels ontology");c.system.insert.subscribe({update:function(a){if("function"!==typeof a.ofType||!a.ofType("Hook"))return!1;if("function"===typeof a.target.update)return a.target}});c.system.initialize.subscribe({update:function(d){return function(d){for(var g=a(window).width(),h=a(window).height(),g=f("paper",
g,h),h=0;h<d.length;h++){for(var l=new b.type.Node(d[h]),n=0;n<l.edges.length;n++){var e;a:{if("undefined"===typeof d.length)throw Error("Cannot determine the message type; expecting an array of node objects but received "+d);for(e=0;e<d.length;e++)if(d[e].id===l.edges[n].id){e=d[e];break a}e=null}null!==e&&(e=new b.type.Edge(l,e,n),c.system.insert.publish(new b.type.Hook(e,g)))}c.system.insert.publish(new b.type.Hook(l,g))}}}});return this},"Nodes")})(smallmachine,jQuery,Raphael);(function(b){var a=new b.Ontology("sm.raphaeljs");try{b.ontology.extendedBy(a)}catch(f){throw Error("Could not extend the smallmachine.ontology property with the 'sm.raphaeljs' ontology: "+f.message+"\n"+f.stack);}})(smallmachine,Raphael);(function(b){var a=new b.Ontology("sm.sammyjs");try{b.ontology.extendedBy(a)}catch(f){throw Error("Could not extend the smallmachine.ontology property with the 'sm.sammyjs' ontology: "+f.message+"\n"+f.stack);}})(smallmachine);
