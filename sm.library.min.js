var smallmachine=function(c){function s(d,k){for(var b=0;b<k.dependencies.length;b++){for(var g=!1,c=0;c<d.length;c++)if(k.dependencies[b]==d[c].namespace){g=!0;break}if(!g)return k.dependencies[b]}return null}function n(d,k){this._term=d;this._rules=k._rules;return this}function m(){return this}function p(){return this}function l(d){this._id=function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(d){var b=16*Math.random()|0;return("x"==d?b:b&3|8).toString(16)})}();"undefined"!==
typeof d._value&&"undefined"!==typeof d._type?(this._value=d._value,this._type=d._type):(this._value=d,this._type=null);return this}function e(d){this.namespace=d;this._inferencer=new a;this._activators=[];this._term=l;return this}function a(){this._term={_value:null};this._rules=[];return this}function f(d,k){var b=this[d];"function"===typeof k?c.alsoBehavesLike(b,k.prototype):c.alsoBehavesLike(b,k);for(var g in b)b.hasOwnProperty(g)&&0!==g.indexOf("_")&&"undefined"!==typeof b[g]._type&&b[g]._type===
c.CONCEPT&&("function"===typeof k?c.alsoBehavesLike(b[g],k.prototype):c.alsoBehavesLike(b[g],k))}function q(d,k,b){d=this[d];var g=this[k],a=this[b];g._type===c.CONCEPT?c.error(Error("Cannot define a relationship with a concept type: "+g._value)):null===g._type&&(g._type=c.RELATIONSHIP);a._type===c.RELATIONSHIP?c.error(Error("Cannot create a relationship with a relationship type: "+a._value)):null===a._type&&(a._type=c.CONCEPT);d._type===c.RELATIONSHIP?c.error(Error("Cannot create a relationship from a relationship type: "+
d._value)):null===d._type&&(d._type=c.CONCEPT);"undefined"===typeof d[k]&&(d[k]=new d.constructor(g));"undefined"===typeof d[k][b]&&(d[k][b]=a);"undefined"===typeof d[b]&&(d[b]=a);a.relate(d[k]);for(var e in a)a.hasOwnProperty(e)&&"function"===typeof a[e].relate&&("undefined"===typeof d[k][e]&&(d[k][e]=a[e]),"undefined"===typeof d[e]&&(d[e]=a[e]),a[e].relate(d[k]))}function h(d,k){var b=this[d],g=this[k];g._type===c.RELATIONSHIP?c.error(Error("Cannot apply isA to a relationship type: "+g._value)):
null===g._type&&(g._type=c.CONCEPT);b._type===c.RELATIONSHIP?c.error(Error("Cannot apply isA to a relationship type: "+b._value)):null===b._type&&(b._type=c.CONCEPT);"undefined"===typeof g[d]&&(g[d]=b)}function t(d,k){var b=this[d],g=this[k];g._type===c.RELATIONSHIP?c.error(Error("Cannot apply hasRange to a relationship type: "+g._value)):null===g._type&&(g._type=c.CONCEPT);b._type===c.CONCEPT?c.error(Error("Cannot assign hasRange from a concept type: "+b._value)):null===b._type&&(b._type=c.RELATIONSHIP);
"undefined"===typeof b[k]&&(b[k]=g);g.relate(b);for(var a in g)if(g.hasOwnProperty(a)&&"function"===typeof g[a].relate){var e=g[a]._value||null;null!==e&&("undefined"===typeof b[e]&&(b[e]=g[a]),g[a].relate(b))}}function u(d,k){var b=this[d],a=this[k];a._type===c.RELATIONSIP?c.error(Error("Cannot apply hasRange to a relationship type: "+a._value)):null===a._type&&(a._type=c.CONCEPT);b._type===c.CONCEPT?c.error(Error("Cannot assign hasRange from a concept type: "+b._value)):null===b._type&&(b._type=
c.RELATIONSHIP);"undefined"===typeof a[d]&&(a[d]=b)}"function"!==typeof Object.getPrototypeOf&&(Object.getPrototypeOf="object"===typeof"test".__proto__?function(d){return d.__proto__}:function(d){return d.constructor.prototype});c=function(d,a){"undefined"===typeof d&&c.error(Error("Missing required parameter for smallmachine constructor: one or more instances of type 'Ontology'"));for(var b=[].concat(d),g="",f=0;f<b.length;f++)"undefined"===typeof b[f]&&c.error(Error("Element "+f+" of the ontologies argument passed to the smallmachine constructor is undefined")),
"undefined"===typeof b[f].namespace?"undefined"!==typeof c.ontology[b[f]]&&(g=g+b[f]+",",b[f]=c.ontology[b[f]]):g=g+b[f].namespace+",";g=new e(g.substring(0,g.length-1));for(f=0;f<b.length;f++){for(var q in b[f])b[f].hasOwnProperty(q)&&"undefined"!==typeof b[f][q]._name&&"Proxy"==b[f][q]._name&&g.addTerm(b[f][q]._term._value);for(var h=0;h<b[f]._inferencer._rules.length;h++)g._inferencer._rules.push(b[f]._inferencer._rules[h]);for(h=0;h<b[f]._activators.length;h++){var l=s(b,b[f]._activators[h]);
null!==l&&c.error(Error("Cannot wire-in ontology with missing activator dependency on '"+l+"'"));g.registerActivator(b[f]._activators[h]);g._activators.sort(function(d,b){if(d.namespace==b.namespace)return 0;for(var a=0;a<d.dependencies.length;a++)if(b.namespace==d.dependencies[a])return 1;for(a=0;a<b.dependencies.length;a++)if(d.namespace==b.dependencies[a])return-1;return 0})}}return g.getModel(a)};c.alsoBehavesLike=function(d,a){("undefined"===typeof d||"undefined"===typeof a)&&c.error(Error("Cannot mixin with an undefined object"));
for(var b in a)if(a.hasOwnProperty(b)&&!(0==b.indexOf("_")||"initializer"===b))if("undefined"!==typeof d[b]){if("undefined"!==typeof a[b].prototype){if("undefined"!==typeof a[b].prototype.initializer&&!0==a[b].prototype.initializer)continue;var g="undefined"!==typeof a[b].prototype.virtual?a[b].prototype.virtual:!1}var f="undefined"!==typeof d[b].prototype?d[b].prototype.virtual:!1;if(!f||!g)f&&(d[b]=a[b])}else d[b]=a[b];"undefined"!==typeof a.prototype&&"undefined"!==typeof d.prototype&&c.alsoBehavesLike(d.prototype,
a.prototype)};c.error=function(d,a){if("undefined"!==typeof a&&"function"===typeof a.handleError)a.handleError(d);else if("function"===typeof c.handleError)c.handleError(d);else throw d;};var v=function(d){var a=16*Math.random()|0;return("x"==d?a:a&3|8).toString(16)};c.getGuid=function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,v)};c.CONCEPT="concept";c.RELATIONSHIP="relationship";n.prototype._name="Proxy";m.prototype.relate=function(d){"undefined"===typeof this._relatesTo&&(this._relatesTo=
[]);for(var a=!1,b=0;b<this._relatesTo.length;b++)if(this._relatesTo[b]._id==d._id){a=!0;break}a||this._relatesTo.push(d)};p.prototype._name="Behavior";c.Behavior=p;e.prototype._name="Ontology";e.prototype.addTerm=function(d){if("undefined"!==typeof this[d])return this;this._term.prototype.relate=m.prototype.relate;var a=new this._term(d);this[d]=new n(a,this._inferencer);return this};e.prototype.addTerms=function(d){for(var a=0;a<d.length;a++)this.addTerm(d[a])};e.prototype.registerActivator=function(d,
a){"undefined"===typeof a&&(a=[]);null===c.typeMask(d,{fn:"function",namespace:!0,dependencies:!0})?this._activators.push(d):this._activators.push({fn:d,namespace:this.namespace,dependencies:a})};e.prototype.getModel=function(a){var f=new function(){return this},b=[];if("undefined"!==typeof a){b=b.concat(a);for(a=0;a<b.length;a++)if("undefined"===typeof b[a]&&c.error("One or more [behaviors] arguments were supplied to the smallmachine constructor that are 'undefined'; error creating object model"),
"undefined"!==typeof b[a].prototype&&!0===b[a].prototype.initializer)b[a](f)}for(var g in this)if(this.hasOwnProperty(g)&&!("undefined"===typeof this[g]||"undefined"===this[g]._term)&&0!==g.indexOf("_"))if("undefined"!==typeof this[g]._term){f[g]=this[g]._term;for(a=0;a<b.length;a++)c.alsoBehavesLike(Object.getPrototypeOf(f[g]),b[a].prototype)}else f[g]=this[g];this._inferencer._rules.sort(function(a,b){return a._priority-b._priority});for(a=0;a<this._inferencer._rules.length;a++)b=this._inferencer._rules[a],
b._fn.apply(f,b._args);for(a=0;a<this._activators.length;a++)this._activators[a].fn(f);return f};c.Ontology=e;var r=function(a,c,b){this._fn=c;this._args=b;this._priority=a;return this};a.prototype.isA=function(a){this._rules.push(new r(1,h,[this._term._value,a._term._value]));return this};a.prototype.relatesTo=function(a,c){this._rules.push(new r(10,q,[this._term._value,a._term._value,c._term._value]));return this};a.prototype.hasDomain=function(a){this._rules.push(new r(3,u,[this._term._value,a._term._value]));
return this};a.prototype.hasRange=function(a){this._rules.push(new r(2,t,[this._term._value,a._term._value]));return this};a.prototype.alsoBehavesLike=function(a){this._rules.push(new r(20,f,[this._term._value,a]));return this};c.alsoBehavesLike(n,a);c.typeMask=function(a,c){var b=[],f;for(f in c)c.hasOwnProperty(f)&&("undefined"===typeof a||"undefined"===typeof a[f]?b.push(f):"undefined"!==typeof a[f]&&typeof a[f]!==c[f]&&!0!==c[f]&&b.push(f));return 0===b.length?null:b};return c}(smallmachine||
{});(function(c){function s(){return this}function n(){return this}function m(a){this._channel=a;return this}function p(a,f,e){"undefined"===typeof f&&c.error(Error("Parameter 'key' is required when instantiating the sm.NamedValue type"));this.namespace=a;this.key=f;this.value=e;return this}function l(){this._collection={};return this}var e=new c.Ontology("sm.properties");e.addTerm("property");e.addTerm("type");e.addTerm("ontology");e.addTerm("behavior");e.addTerm("hasMemberType");e.addTerm("hasMember");
e.addTerm("Ontology");e.addTerm("Behavior");e.addTerm("Constructor");e.addTerm("Null");e.ontology.isA(e.property);e.behavior.isA(e.property);e.Ontology.isA(e.type);e.Behavior.isA(e.type);e.Constructor.isA(e.type);e.Null.isA(e.type);e.ontology.relatesTo(e.hasMemberType,e.Ontology);e.behavior.relatesTo(e.hasMemberType,e.Behavior);e.ontology.relatesTo(e.hasMember,e.Null);e.behavior.relatesTo(e.hasMember,e.Null);s.prototype.extendedBy=function(a,f){var e=this.hasMemberType;"undefined"===typeof f&&("undefined"===
e?f=a._name:"undefined"!==typeof a.prototype&&(f=a.prototype._name));if("undefined"!==typeof f&&"function"===typeof a)"undefined"!==typeof this[f]?c.alsoBehavesLike(this[f],a):this[f]=a,"undefined"===typeof this[f]._name&&(this[f]._name=f);else{var h=f||a.namespace||a._name;"undefined"===typeof h&&c.error(Error("Cannot call extendedBy on the core ontology with an object that is missing the 'namepsace' and '_name' properties without specifying a 'typeName'"));if("undefined"!==typeof this[h])c.alsoBehavesLike(this[h],
a);else{var l=c[this._value][e._value];"undefined"===typeof l&&c.error(Error("The specified type does not exist in the core object model: "+e._value));var e=a._name||a.constructor.name,n=!1,m;for(m in l)if(l.hasOwnProperty(m)&&0!==m.indexOf("_")&&m===e){this.hasMember[h]=a;this[h]=a;n=!0;break}n||c.error(Error("Did not find an allowed model type for: "+e))}}};n.prototype._name="Null";c.alsoBehavesLike(c,e.getModel(s));c.ontology.extendedBy(new n);c.behavior.extendedBy(new n);m.prototype._name="AsyncResult";
m.prototype.publish=function(a,c){this._channel.publish(a,c);return this};c.type.extendedBy(m);p.prototype.adapt=function(a,f){this.namespace=a;if("undefined"!==typeof f)for(var e=[].concat(f),h=0;h<e.length;h++)c.alsoBehavesLike(this,e[h]);return this};p.prototype._name="NamedValue";c.type.extendedBy(p);l.prototype._name="NamedValueCollection";l.prototype.exists=function(a,f){var e=a;null===c.typeMask(a,{namespace:!0,key:!0})&&(e=a.namespace,f=a.key);return"undefined"!==typeof this._collection[e]&&
"undefined"!==typeof this._collection[e][f]};l.prototype.add=function(a,f,e){var h=a.namespace||a,l=a.key||f;"undefined"!==typeof this._collection[h]&&"undefined"!==this._collection[h][l]&&c.error(Error("Cannot add a new entry to the collection (already exists): ["+h+"]"+l));this.modify(a,f,e);return this};l.prototype.modify=function(a,f,e){var h=a.namespace||a;f=a.key||f;a=a.value||e;"undefined"===typeof f&&c.error(Error("Must supply a valid key"));"undefined"===typeof a&&c.error(Error("Must supply a valid value"));
"undefined"===typeof this._collection[h]&&(this._collection[h]={});this._collection[h][f]=a;return this};l.prototype.remove=function(a,c){if(!("undefined"===typeof this._collection[a]||"undefined"===typeof this._collection[a][c]))return delete this._collection[a][c],this};l.prototype.getValue=function(a,c){var e=a.namespace||a,h=a.key||c;if(!("undefined"===typeof this._collection[e]||"undefined"===this._collection[e][h]))return e=this._collection[e][h],"undefined"!==typeof e&&("function"===typeof a.setValue?
a.setValue(e):"undefined"!==typeof a.value&&(a.value=e)),e};c.type.extendedBy(l)})(smallmachine);
