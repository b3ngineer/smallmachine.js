var smallmachine=function(d){function s(c,k){for(var b=0;b<k.dependencies.length;b++){for(var f=!1,d=0;d<c.length;d++)if(k.dependencies[b]==c[d].namespace){f=!0;break}if(!f)return k.dependencies[b]}return null}function p(c,d){this._term=c;this._rules=d._rules;return this}function n(){return this}function q(){return this}function l(c){this._id=function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(c){var b=16*Math.random()|0;return("x"==c?b:b&3|8).toString(16)})}();"undefined"!==
typeof c._value&&"undefined"!==typeof c._type?(this._value=c._value,this._type=c._type):(this._value=c,this._type=null);return this}function e(c){this.namespace=c;this._inferencer=new a;this._activators=[];this._term=l;return this}function a(){this._term={_value:null};this._rules=[];return this}function g(c,k){var b=this[c];"function"===typeof k?d.alsoBehavesLike(b,k.prototype):d.alsoBehavesLike(b,k);for(var f in b)b.hasOwnProperty(f)&&0!==f.indexOf("_")&&"undefined"!==typeof b[f]._type&&b[f]._type===
d.CONCEPT&&("function"===typeof k?d.alsoBehavesLike(b[f],k.prototype):d.alsoBehavesLike(b[f],k))}function m(c,k,b){c=this[c];var f=this[k],a=this[b];f._type===d.CONCEPT?d.error(Error("Cannot define a relationship with a concept type: "+f._value)):null===f._type&&(f._type=d.RELATIONSHIP);a._type===d.RELATIONSHIP?d.error(Error("Cannot create a relationship with a relationship type: "+a._value)):null===a._type&&(a._type=d.CONCEPT);c._type===d.RELATIONSHIP?d.error(Error("Cannot create a relationship from a relationship type: "+
c._value)):null===c._type&&(c._type=d.CONCEPT);"undefined"===typeof c[k]&&(c[k]=new c.constructor(f));"undefined"===typeof c[k][b]&&(c[k][b]=a);"undefined"===typeof c[b]&&(c[b]=a);a.relate(c[k]);for(var e in a)a.hasOwnProperty(e)&&"function"===typeof a[e].relate&&("undefined"===typeof c[k][e]&&(c[k][e]=a[e]),"undefined"===typeof c[e]&&(c[e]=a[e]),a[e].relate(c[k]))}function h(c,k){var b=this[c],f=this[k];f._type===d.RELATIONSHIP?d.error(Error("Cannot apply isA to a relationship type: "+f._value)):
null===f._type&&(f._type=d.CONCEPT);b._type===d.RELATIONSHIP?d.error(Error("Cannot apply isA to a relationship type: "+b._value)):null===b._type&&(b._type=d.CONCEPT);"undefined"===typeof f[c]&&(f[c]=b)}function t(c,k){var b=this[c],f=this[k];f._type===d.RELATIONSHIP?d.error(Error("Cannot apply hasRange to a relationship type: "+f._value)):null===f._type&&(f._type=d.CONCEPT);b._type===d.CONCEPT?d.error(Error("Cannot assign hasRange from a concept type: "+b._value)):null===b._type&&(b._type=d.RELATIONSHIP);
"undefined"===typeof b[k]&&(b[k]=f);f.relate(b);for(var a in f)if(f.hasOwnProperty(a)&&"function"===typeof f[a].relate){var e=f[a]._value||null;null!==e&&("undefined"===typeof b[e]&&(b[e]=f[a]),f[a].relate(b))}}function u(c,a){var b=this[c],f=this[a];f._type===d.RELATIONSIP?d.error(Error("Cannot apply hasRange to a relationship type: "+f._value)):null===f._type&&(f._type=d.CONCEPT);b._type===d.CONCEPT?d.error(Error("Cannot assign hasRange from a concept type: "+b._value)):null===b._type&&(b._type=
d.RELATIONSHIP);"undefined"===typeof f[c]&&(f[c]=b)}"function"!==typeof Object.getPrototypeOf&&(Object.getPrototypeOf="object"===typeof"test".__proto__?function(c){return c.__proto__}:function(c){return c.constructor.prototype});d=function(c,a){"undefined"===typeof c&&d.error(Error("Missing required parameter for smallmachine constructor: one or more instances of type 'Ontology'"));for(var b=[].concat(c),f="",g=0;g<b.length;g++)"undefined"===typeof b[g]&&d.error(Error("Element "+g+" of the ontologies argument passed to the smallmachine constructor is undefined")),
"undefined"===typeof b[g].namespace?"undefined"!==typeof d.ontology[b[g]]&&(f=f+b[g]+",",b[g]=d.ontology[b[g]]):f=f+b[g].namespace+",";f=new e(f.substring(0,f.length-1));for(g=0;g<b.length;g++){for(var m in b[g])b[g].hasOwnProperty(m)&&"undefined"!==typeof b[g][m]._name&&"Proxy"==b[g][m]._name&&f.addTerm(b[g][m]._term._value);for(var h=0;h<b[g]._inferencer._rules.length;h++)f._inferencer._rules.push(b[g]._inferencer._rules[h]);for(h=0;h<b[g]._activators.length;h++){var l=s(b,b[g]._activators[h]);
null!==l&&d.error(Error("Cannot wire-in ontology with missing activator dependency on '"+l+"'"));f.registerActivator(b[g]._activators[h]);f._activators.sort(function(c,b){if(c.namespace==b.namespace)return 0;for(var a=0;a<c.dependencies.length;a++)if(b.namespace==c.dependencies[a])return 1;for(a=0;a<b.dependencies.length;a++)if(c.namespace==b.dependencies[a])return-1;return 0})}}return f.getModel(a)};d.alsoBehavesLike=function(c,a){("undefined"===typeof c||"undefined"===typeof a)&&d.error(Error("Cannot mixin with an undefined object"));
for(var b in a)if(a.hasOwnProperty(b)&&!(0==b.indexOf("_")||"initializer"===b))if("undefined"!==typeof c[b]){if("undefined"!==typeof a[b].prototype){if("undefined"!==typeof a[b].prototype.initializer&&!0==a[b].prototype.initializer)continue;var f="undefined"!==typeof a[b].prototype.virtual?a[b].prototype.virtual:!1}var g="undefined"!==typeof c[b].prototype?c[b].prototype.virtual:!1;if(!g||!f)g&&(c[b]=a[b])}else c[b]=a[b];"undefined"!==typeof a.prototype&&"undefined"!==typeof c.prototype&&d.alsoBehavesLike(c.prototype,
a.prototype)};d.error=function(c,a){if("undefined"!==typeof a&&"function"===typeof a.handleError)a.handleError(c);else if("function"===typeof d.handleError)d.handleError(c);else throw c;};var v=function(c){var a=16*Math.random()|0;return("x"==c?a:a&3|8).toString(16)};d.getGuid=function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,v)};d.CONCEPT="concept";d.RELATIONSHIP="relationship";p.prototype._name="Proxy";n.prototype.relate=function(c){"undefined"===typeof this._relatesTo&&(this._relatesTo=
[]);for(var a=!1,b=0;b<this._relatesTo.length;b++)if(this._relatesTo[b]._id==c._id){a=!0;break}a||this._relatesTo.push(c)};q.prototype._name="Behavior";d.Behavior=q;e.prototype._name="Ontology";e.prototype.addTerm=function(c){if("undefined"!==typeof this[c])return this;this._term.prototype.relate=n.prototype.relate;var a=new this._term(c);this[c]=new p(a,this._inferencer);return this};e.prototype.registerActivator=function(c,a){"undefined"===typeof a&&(a=[]);null===d.typeMask(c,{fn:"function",namespace:!0,
dependencies:!0})?this._activators.push(c):this._activators.push({fn:c,namespace:this.namespace,dependencies:a})};e.prototype.getModel=function(c){var a=new function(){return this},b=[];if("undefined"!==typeof c){b=b.concat(c);for(c=0;c<b.length;c++)if("undefined"===typeof b[c]&&d.error("One or more [behaviors] arguments were supplied to the smallmachine constructor that are 'undefined'; error creating object model"),"undefined"!==typeof b[c].prototype&&!0===b[c].prototype.initializer)b[c](a)}for(var f in this)if(this.hasOwnProperty(f)&&
!("undefined"===typeof this[f]||"undefined"===this[f]._term)&&0!==f.indexOf("_"))if("undefined"!==typeof this[f]._term){a[f]=this[f]._term;for(c=0;c<b.length;c++)d.alsoBehavesLike(Object.getPrototypeOf(a[f]),b[c].prototype)}else a[f]=this[f];this._inferencer._rules.sort(function(a,c){return a._priority-c._priority});for(c=0;c<this._inferencer._rules.length;c++)b=this._inferencer._rules[c],b._fn.apply(a,b._args);for(c=0;c<this._activators.length;c++)this._activators[c].fn(a);return a};d.Ontology=e;
var r=function(a,d,b){this._fn=d;this._args=b;this._priority=a;return this};a.prototype.isA=function(a){this._rules.push(new r(1,h,[this._term._value,a._term._value]));return this};a.prototype.relatesTo=function(a,d){this._rules.push(new r(10,m,[this._term._value,a._term._value,d._term._value]));return this};a.prototype.hasDomain=function(a){this._rules.push(new r(3,u,[this._term._value,a._term._value]));return this};a.prototype.hasRange=function(a){this._rules.push(new r(2,t,[this._term._value,a._term._value]));
return this};a.prototype.alsoBehavesLike=function(a){this._rules.push(new r(20,g,[this._term._value,a]));return this};d.alsoBehavesLike(p,a);d.typeMask=function(a,d){var b=[],f;for(f in d)d.hasOwnProperty(f)&&("undefined"===typeof a||"undefined"===typeof a[f]?b.push(f):"undefined"!==typeof a[f]&&typeof a[f]!==d[f]&&!0!==d[f]&&b.push(f));return 0===b.length?null:b};return d}(smallmachine||{});(function(d){function s(){return this}function p(){return this}function n(a){this._channel=a;return this}function q(a,g,e){"undefined"===typeof g&&d.error(Error("Parameter 'key' is required when instantiating the sm.NamedValue type"));this.namespace=a;this.key=g;this.value=e;return this}function l(){this._collection={};return this}var e=new d.Ontology("sm.properties");e.addTerm("property");e.addTerm("type");e.addTerm("ontology");e.addTerm("behavior");e.addTerm("hasMemberType");e.addTerm("hasMember");
e.addTerm("Ontology");e.addTerm("Behavior");e.addTerm("Constructor");e.addTerm("Null");e.ontology.isA(e.property);e.behavior.isA(e.property);e.Ontology.isA(e.type);e.Behavior.isA(e.type);e.Constructor.isA(e.type);e.Null.isA(e.type);e.ontology.relatesTo(e.hasMemberType,e.Ontology);e.behavior.relatesTo(e.hasMemberType,e.Behavior);e.ontology.relatesTo(e.hasMember,e.Null);e.behavior.relatesTo(e.hasMember,e.Null);s.prototype.extendedBy=function(a,g){var e=this.hasMemberType;"undefined"===typeof g&&("undefined"===
e?g=a._name:"undefined"!==typeof a.prototype&&(g=a.prototype._name));if("undefined"!==typeof g&&"function"===typeof a)"undefined"!==typeof this[g]?d.alsoBehavesLike(this[g],a):this[g]=a,"undefined"===typeof this[g]._name&&(this[g]._name=g);else{var h=g||a.namespace||a._name;"undefined"===typeof h&&d.error(Error("Cannot call extendedBy on the core ontology with an object that is missing the 'namepsace' and '_name' properties without specifying a 'typeName'"));if("undefined"!==typeof this[h])d.alsoBehavesLike(this[h],
a);else{var l=d[this._value][e._value];"undefined"===typeof l&&d.error(Error("The specified type does not exist in the core object model: "+e._value));var e=a._name||a.constructor.name,p=!1,n;for(n in l)if(l.hasOwnProperty(n)&&0!==n.indexOf("_")&&n===e){this.hasMember[h]=a;this[h]=a;p=!0;break}p||d.error(Error("Did not find an allowed model type for: "+e))}}};p.prototype._name="Null";d.alsoBehavesLike(d,e.getModel(s));d.ontology.extendedBy(new p);d.behavior.extendedBy(new p);n.prototype._name="AsyncResult";
n.prototype.publish=function(a,d){this._channel.publish(a,d);return this};d.type.extendedBy(n);q.prototype.adapt=function(a,e){this.namespace=a;if("undefined"!==typeof e)for(var m=[].concat(e),h=0;h<m.length;h++)d.alsoBehavesLike(this,m[h]);return this};q.prototype._name="NamedValue";d.type.extendedBy(q);l.prototype._name="NamedValueCollection";l.prototype.exists=function(a,e){var m=a;null===d.typeMask(a,{namespace:!0,key:!0})&&(m=a.namespace,e=a.key);return"undefined"!==typeof this._collection[m]&&
"undefined"!==typeof this._collection[m][e]};l.prototype.add=function(a,e,m){var h=a.namespace||a,l=a.key||e;"undefined"!==typeof this._collection[h]&&"undefined"!==this._collection[h][l]&&d.error(Error("Cannot add a new entry to the collection (already exists): ["+h+"]"+l));this.modify(a,e,m);return this};l.prototype.modify=function(a,e,m){var h=a.namespace||a;e=a.key||e;a=a.value||m;"undefined"===typeof e&&d.error(Error("Must supply a valid key"));"undefined"===typeof a&&d.error(Error("Must supply a valid value"));
"undefined"===typeof this._collection[h]&&(this._collection[h]={});this._collection[h][e]=a;return this};l.prototype.remove=function(a,d){if(!("undefined"===typeof this._collection[a]||"undefined"===typeof this._collection[a][d]))return delete this._collection[a][d],this};l.prototype.getValue=function(a,d){var e=a.namespace||a,h=a.key||d;if(!("undefined"===typeof this._collection[e]||"undefined"===this._collection[e][h]))return e=this._collection[e][h],"undefined"!==typeof e&&("function"===typeof a.setValue?
a.setValue(e):"undefined"!==typeof a.value&&(a.value=e)),e};d.type.extendedBy(l)})(smallmachine);
