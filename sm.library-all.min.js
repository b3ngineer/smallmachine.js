var smallmachine=function(d){function b(h,a){for(var d=0;d<a.dependencies.length;d++){for(var f=!1,c=0;c<h.length;c++)if(a.dependencies[d]==h[c].namespace){f=!0;break}if(!f)return a.dependencies[d]}return null}function n(h,a){this._term=h;this._rules=a._rules;return this}function l(){return this}function k(){return this}function m(h){this.namespace=h;this._inferencer=new g;this._activators=[];this.Term=function(h){this._id=function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(h){var a=
16*Math.random()|0;return("x"==h?a:a&3|8).toString(16)})}();"undefined"!==typeof h._value&&"undefined"!==typeof h._type?(this._value=h._value,this._type=h._type):(this._value=h,this._type=null);return this};return this}function g(){this._term={_value:null};this._rules=[];return this}function a(h,a,f){h=this[h];var c=this[a],e=this[f];c._type===d.CONCEPT?d.error(Error("Cannot define a relationship with a concept type: "+c._value)):null===c._type&&(c._type=d.RELATIONSHIP);e._type===d.RELATIONSHIP?d.error(Error("Cannot create a relationship with a relationship type: "+
e._value)):null===e._type&&(e._type=d.CONCEPT);h._type===d.RELATIONSHIP?d.error(Error("Cannot create a relationship from a relationship type: "+h._value)):null===h._type&&(h._type=d.CONCEPT);"undefined"===typeof h[a]&&(h[a]=new h.constructor(c));"undefined"===typeof h[a][f]&&(h[a][f]=e);"undefined"===typeof h[f]&&(h[f]=e);e.relate(h[a]);for(var b in e)e.hasOwnProperty(b)&&"function"===typeof e[b].relate&&("undefined"===typeof h[a][b]&&(h[a][b]=e[b]),"undefined"===typeof h[b]&&(h[b]=e[b]),e[b].relate(h[a]))}
function f(h,a){var e=this[h],f=this[a];f._type===d.RELATIONSHIP?d.error(Error("Cannot apply isA to a relationship type: "+f._value)):null===f._type&&(f._type=d.CONCEPT);e._type===d.RELATIONSHIP?d.error(Error("Cannot apply isA to a relationship type: "+e._value)):null===e._type&&(e._type=d.CONCEPT);"undefined"===typeof f[h]&&(f[h]=e)}function c(h,a){var f=this[h],e=this[a];e._type===d.RELATIONSHIP?d.error(Error("Cannot apply hasRange to a relationship type: "+e._value)):null===e._type&&(e._type=d.CONCEPT);
f._type===d.CONCEPT?d.error(Error("Cannot assign hasRange from a concept type: "+f._value)):null===f._type&&(f._type=d.RELATIONSHIP);"undefined"===typeof f[a]&&(f[a]=e);e.relate(f);for(var c in e)if(e.hasOwnProperty(c)&&"function"===typeof e[c].relate){var b=e[c]._value||null;null!==b&&("undefined"===typeof f[b]&&(f[b]=e[c]),e[c].relate(f))}}function p(h,a){var e=this[h],f=this[a];f._type===d.RELATIONSIP?d.error(Error("Cannot apply hasRange to a relationship type: "+f._value)):null===f._type&&(f._type=
d.CONCEPT);e._type===d.CONCEPT?d.error(Error("Cannot assign hasRange from a concept type: "+e._value)):null===e._type&&(e._type=d.RELATIONSHIP);"undefined"===typeof f[h]&&(f[h]=e)}"function"!==typeof Object.getPrototypeOf&&(Object.getPrototypeOf="object"===typeof"test".__proto__?function(h){return h.__proto__}:function(h){return h.constructor.prototype});d=function(h,a){"undefined"===typeof h&&d.error(Error("Missing required parameter for smallmachine constructor: one or more instances of type 'Ontology'"));
for(var e=[].concat(h),f="",c=0;c<e.length;c++)"undefined"===typeof e[c]&&d.error(Error("Element "+c+" of the ontologies argument passed to the smallmachine constructor is undefined")),"undefined"===typeof e[c].namespace?"undefined"!==typeof d.ontology[e[c]]&&(f=f+e[c]+",",e[c]=d.ontology[e[c]]):f=f+e[c].namespace+",";f=new m(f.substring(0,f.length-1));for(c=0;c<e.length;c++){for(var p in e[c])e[c].hasOwnProperty(p)&&"undefined"!==typeof e[c][p]._name&&"Proxy"==e[c][p]._name&&f.addTerm(e[c][p]._term._value);
for(var g=0;g<e[c]._inferencer._rules.length;g++)f._inferencer._rules.push(e[c]._inferencer._rules[g]);for(g=0;g<e[c]._activators.length;g++){var l=b(e,e[c]._activators[g]);null!==l&&d.error(Error("Cannot wire-in ontology with missing activator dependency on '"+l+"'"));f.registerActivator(e[c]._activators[g]);f._activators.sort(function(h,e){if(h.namespace==e.namespace)return 0;for(var a=0;a<h.dependencies.length;a++)if(e.namespace==h.dependencies[a])return 1;for(a=0;a<e.dependencies.length;a++)if(h.namespace==
e.dependencies[a])return-1;return 0})}}return f.getModel(a)};d.alsoBehavesLike=function(h,e){("undefined"===typeof h||"undefined"===typeof e)&&d.error(Error("Cannot mixin with an undefined object"));for(var a in e)if(e.hasOwnProperty(a)&&!(0==a.indexOf("_")||"initializer"===a))if("undefined"!==typeof h[a]){if("undefined"!==typeof e[a].prototype){if("undefined"!==typeof e[a].prototype.initializer&&!0==e[a].prototype.initializer)continue;var f="undefined"!==typeof e[a].prototype.virtual?e[a].prototype.virtual:
!1}var c="undefined"!==typeof h[a].prototype?h[a].prototype.virtual:!1;if(!c||!f)c&&(h[a]=e[a])}else h[a]=e[a];"undefined"!==typeof e.prototype&&("undefined"===typeof h.prototype&&(h.prototype={}),d.alsoBehavesLike(h.prototype,e.prototype))};d.error=function(h,e){if("undefined"!==typeof e&&"function"===typeof e.handleError)e.handleError(h);else if("function"===typeof d.handleError)d.handleError(h);else throw h;};var q=function(e){var a=16*Math.random()|0;return("x"==e?a:a&3|8).toString(16)};d.getGuid=
function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,q)};d.CONCEPT="concept";d.RELATIONSHIP="relationship";n.prototype._name="Proxy";l.prototype.relate=function(e){"undefined"===typeof this._relatesTo&&(this._relatesTo=[]);for(var a=!1,f=0;f<this._relatesTo.length;f++)if(this._relatesTo[f]._id==e._id){a=!0;break}a||this._relatesTo.push(e)};k.prototype._name="Behavior";d.Behavior=k;m.prototype._name="Ontology";m.prototype.addTerm=function(e){if("undefined"!==typeof this[e])return this;
var a=this.Term;a.prototype.relate=l.prototype.relate;a=new a(e);this[e]=new n(a,this._inferencer);return this};m.prototype.registerActivator=function(e,a){"undefined"===typeof a&&(a=[]);null===d.typeMask(e,{fn:"function",namespace:!0,dependencies:!0})?this._activators.push(e):this._activators.push({fn:e,namespace:this.namespace,dependencies:a})};m.prototype.getModel=function(e){var a=new function(){return this},f=[];if("undefined"!==typeof e){f=f.concat(e);for(e=0;e<f.length;e++)if("undefined"===
typeof f[e]&&d.error("One or more [behaviors] arguments were supplied to the smallmachine constructor that are 'undefined'; error creating object model"),"undefined"!==typeof f[e].prototype&&!0===f[e].prototype.initializer)f[e](a)}for(var c in this)if(this.hasOwnProperty(c)&&!("undefined"===typeof this[c]||"undefined"===this[c]._term)&&0!==c.indexOf("_"))if("undefined"!==typeof this[c]._term){a[c]=this[c]._term;for(e=0;e<f.length;e++)d.alsoBehavesLike(Object.getPrototypeOf(a[c]),f[e].prototype)}else a[c]=
this[c];this._inferencer._rules.sort(function(e,a){return e._priority-a._priority});for(e=0;e<this._inferencer._rules.length;e++)f=this._inferencer._rules[e],f._fn.apply(a,f._args);for(e=0;e<this._activators.length;e++)this._activators[e].fn(a);return a};d.Ontology=m;var e=function(e,a,f){this._fn=a;this._args=f;this._priority=e;return this};g.prototype.isA=function(a){this._rules.push(new e(1,f,[this._term._value,a._term._value]));return this};g.prototype.relatesTo=function(f,c){this._rules.push(new e(10,
a,[this._term._value,f._term._value,c._term._value]));return this};g.prototype.hasDomain=function(a){this._rules.push(new e(3,p,[this._term._value,a._term._value]));return this};g.prototype.hasRange=function(a){this._rules.push(new e(2,c,[this._term._value,a._term._value]));return this};d.alsoBehavesLike(n,g);d.typeMask=function(e,a){var f=[],c;for(c in a)a.hasOwnProperty(c)&&("undefined"===typeof e||"undefined"===typeof e[c]?f.push(c):"undefined"!==typeof e[c]&&typeof e[c]!==a[c]&&!0!==a[c]&&f.push(c));
return 0===f.length?null:f};return d}(smallmachine||{});(function(d){function b(){return this}function n(){return this}function l(a){this._channel=a;return this}function k(a,f,c){"undefined"===typeof f&&d.error(Error("Parameter 'key' is required when instantiating the sm.NamedValue type"));this.namespace=a;this.key=f;this.value=c;return this}function m(){this._collection={};return this}var g=new d.Ontology("sm.properties");g.addTerm("property");g.addTerm("type");g.addTerm("ontology");g.addTerm("behavior");g.addTerm("hasMemberType");g.addTerm("hasMember");
g.addTerm("Ontology");g.addTerm("Behavior");g.addTerm("Constructor");g.addTerm("Null");g.ontology.isA(g.property);g.behavior.isA(g.property);g.Ontology.isA(g.type);g.Behavior.isA(g.type);g.Constructor.isA(g.type);g.Null.isA(g.type);g.ontology.relatesTo(g.hasMemberType,g.Ontology);g.behavior.relatesTo(g.hasMemberType,g.Behavior);g.ontology.relatesTo(g.hasMember,g.Null);g.behavior.relatesTo(g.hasMember,g.Null);b.prototype.extendedBy=function(a,f){var c=this.hasMemberType;"undefined"===typeof f&&("undefined"===
c?f=a._name:"undefined"!==typeof a.prototype&&(f=a.prototype._name));if("undefined"!==typeof f&&"function"===typeof a)"undefined"!==typeof this[f]?d.alsoBehavesLike(this[f],a):this[f]=a,"undefined"===typeof this[f]._name&&(this[f]._name=f);else{var b=f||a.namespace||a._name;"undefined"===typeof b&&d.error(Error("Cannot call extendedBy on the core ontology with an object that is missing the 'namepsace' and '_name' properties without specifying a 'typeName'"));if("undefined"!==typeof this[b])d.alsoBehavesLike(this[b],
a);else{var g=d[this._value][c._value];"undefined"===typeof g&&d.error(Error("The specified type does not exist in the core object model: "+c._value));var c=a._name||a.constructor.name,e=!1,h;for(h in g)if(g.hasOwnProperty(h)&&0!==h.indexOf("_")&&h===c){this.hasMember[b]=a;this[b]=a;e=!0;break}e||d.error(Error("Did not find an allowed model type for: "+c))}}};n.prototype._name="Null";d.alsoBehavesLike(d,g.getModel(b));d.ontology.extendedBy(new n);d.behavior.extendedBy(new n);l.prototype._name="AsyncResult";
l.prototype.publish=function(a,f){this._channel.publish(a,f);return this};d.type.extendedBy(l);k.prototype.adapt=function(a,f){this.namespace=a;if("undefined"!==typeof f)for(var c=[].concat(f),b=0;b<c.length;b++)d.alsoBehavesLike(this,c[b]);return this};k.prototype._name="NamedValue";d.type.extendedBy(k);m.prototype._name="NamedValueCollection";m.prototype.exists=function(a,f){var c=a;null===d.typeMask(a,{namespace:!0,key:!0})&&(c=a.namespace,f=a.key);return"undefined"!==typeof this._collection[c]&&
"undefined"!==typeof this._collection[c][f]};m.prototype.add=function(a,f,c){var b=a.namespace||a,g=a.key||f;"undefined"!==typeof this._collection[b]&&"undefined"!==this._collection[b][g]&&d.error(Error("Cannot add a new entry to the collection (already exists): ["+b+"]"+g));this.modify(a,f,c);return this};m.prototype.modify=function(a,f,c){var b=a.namespace||a;f=a.key||f;a=a.value||c;"undefined"===typeof f&&d.error(Error("Must supply a valid key"));"undefined"===typeof a&&d.error(Error("Must supply a valid value"));
"undefined"===typeof this._collection[b]&&(this._collection[b]={});this._collection[b][f]=a;return this};m.prototype.remove=function(a,f){if(!("undefined"===typeof this._collection[a]||"undefined"===typeof this._collection[a][f]))return delete this._collection[a][f],this};m.prototype.getValue=function(a,f){var c=a.namespace||a,b=a.key||f;if(!("undefined"===typeof this._collection[c]||"undefined"===this._collection[c][b]))return c=this._collection[c][b],"undefined"!==typeof c&&("function"===typeof a.setValue?
a.setValue(c):"undefined"!==typeof a.value&&(a.value=c)),c};d.type.extendedBy(m)})(smallmachine);(function(d){var b=new d.Ontology("sm.channels");b.addTerm("thing");b.addTerm("user");b.addTerm("system");b.addTerm("action");b.addTerm("click");b.addTerm("doubleClick");b.addTerm("keyPress");b.addTerm("task");b.addTerm("initialize");b.addTerm("insert");b.addTerm("remove");b.addTerm("get");b.addTerm("set");b.addTerm("messenger");b.addTerm("success");b.addTerm("error");b.addTerm("performs");b.addTerm("reactsTo");b.user.isA(b.thing);b.user.relatesTo(b.performs,b.action);b.system.isA(b.thing);b.system.relatesTo(b.performs,
b.task);b.action.isA(b.thing);b.task.isA(b.thing);b.messenger.isA(b.thing);b.click.isA(b.action);b.doubleClick.isA(b.action);b.keyPress.isA(b.action);b.get.isA(b.task);b.set.isA(b.task);b.success.isA(b.messenger);b.error.isA(b.messenger);b.initialize.isA(b.task);b.insert.isA(b.task);b.remove.isA(b.task);b.performs.hasRange(b.action).hasRange(b.task);b.reactsTo.hasRange(b.action).hasDomain(b.system);b.registerActivator(function(b){function n(a,c){if("undefined"!==typeof jQuery)try{jQuery.ajax({dataType:"json",
url:a,type:"GET",success:function(e,h,g){b.messenger.success.publish(h);c.publish(new d.type.NamedValue("sm.channels",a,e))},error:function(e,a,f){d.error(Error(f))}})}catch(g){d.error(Error(g))}else{var k=window.XMLHttpRequest?new XMLHttpRequest:new ActiveXObject("MSXML2.XMLHTTP.3.0");k.onprogress=function(){};k.onerror={};k.onreadystatechange=function(){4>k.readyState||(200==k.status?(b.messenger.success.publish(k.statusText),c.publish(new d.type.NamedValue("sm.channels",a,JSON.parse(k.responseText)))):
d.error(Error(k.statusText)))};k.open("GET",a,!0);k.setRequestHeader("X-Requested-With","XMLHttpRequest");k.setRequestHeader("Content-type","application/json");k.send(null)}return c}var m={update:function(a){return"undefined"!==typeof a.key&&"undefined"!==typeof a.namespace?function(a){b.memory.modify(a)}:!1}};d.alsoBehavesLike(b,{memory:new d.type.NamedValueCollection});b.set.subscribe({update:function(a){return m}});var g={update:function(a){return"undefined"!==typeof a.key&&"undefined"!==typeof a.namespace?
function(a){b.memory.getValue(a)}:!1}};b.get.subscribe({update:function(a){return g}});"function"===typeof b.initialize.addHelper&&b.initialize.addHelper("json",n);"function"===typeof b.set.addHelper&&b.set.addHelper("config",function(a){return new d.type.NamedValue("sm.channels","config",a)});if("function"===typeof b.get.addHelper){b.get.addHelper("json",n);var a=function(){this.namespace="sm.channels";this.key="config";return this};a.prototype._name="Config";a.prototype.setValue=function(a){d.alsoBehavesLike(this,
a)};d.type.extendedBy(a);b.get.addHelper("config",function(a){return a})}});try{d.ontology.extendedBy(b)}catch(n){d.error(Error("Could not extend the smallmachine.ontology property with the 'sm.channels' ontology: "+n.message+"\n"+n.stack))}})(smallmachine);(function(d){function b(b,d){this._value=b;this._type=d;return this}b.prototype._name="Channel";b.prototype.forward=function(b,d){null!=this._value&&(d[this._value]=!0);for(var k in this)if(this.hasOwnProperty(k)&&!("function"===typeof this[k]||0===k.indexOf("_"))&&!0!==d[k]&&"function"===typeof this[k].publish)d[k]=!0,this[k].publish(b,d);if("undefined"!==typeof this._relatesTo)for(k=0;k<this._relatesTo.length;k++)"undefined"!==typeof this._relatesTo[k]._subscribers&&this.notify(b,this._relatesTo[k]._subscribers)};
b.prototype.unsubscribe=function(b){"undefined"!==typeof this._subscribers&&delete this._subscribers[b]};b.prototype.subscribe=function(b){"undefined"===typeof this._subscribers&&(this._subscribers={});var l=d.getGuid();"function"===typeof b?this._subscribers[l]={update:b,lifetime:1}:("undefined"===typeof b.lifecycle&&(b.lifetime=1),this._subscribers[l]=b);return l};b.prototype.notify=function(b,l){var k=!1,m={},g=0,a=[],f;for(f in l){var c=l[f].update(b);"undefined"!==typeof l[f]&&(0>=l[f].lifetime&&
this.unsubscribe(f),!0===c?k=!0:"function"===typeof c?(a.push(c),k=!0):c&&"function"===typeof c.update&&(m[d.getGuid()]=c,g++))}if(k){f=0===a.length;for(c=0;c<a.length;c++)!1===!a[c](b)&&(f=!0);!1===f&&(k=!1)}!1==k&&0<g&&this.notify(b,m)};b.prototype.publish=function(b,l){l=l||{};if("function"===typeof b&&(b=b(new d.type.AsyncResult(this)),"undefined"!==typeof b&&"undefined"!==typeof b._channel&&"function"===typeof b.publish))return this;if("undefined"===typeof this._subscribers)return this.forward(b,
l),this;this.notify(b,this._subscribers);this.forward(b,l);return this};b.prototype.addHelper=function(d,l){var k=b.prototype.publish,m=this;this[d]=function(){for(var b=[],a=0;a<arguments.length;a++)b.push(arguments[a]);return k.apply(m,[function(a){b.push(a);return l.apply(m,b)}])};return this};d.behavior.extendedBy(b)})(smallmachine);(function(d,b){function n(d){"undefined"!==typeof b.fn&&b.extend({sm:d});return this}n.prototype._name="Extension";n.prototype.initializer=!0;d.behavior.extendedBy(n)})(smallmachine,jQuery||{});(function(d){function b(a,b){b.y=parseFloat(a.y);b.x=parseFloat(a.x);b.width=parseFloat(a.width);b.height=parseFloat(a.height);return this}function n(a){new b(a,this);return this}function l(a){new b(a,this);return this}function k(a){new b(a,this);return this}function m(a){new b(a,this);return this}function g(a,b,c,f){this.shape=new p[a.shape||"ellipse"](a);this.id=a.id||d.getGuid();this.edges=a.edges||[];this.label=a.label||this.id;this.paper=b;this.shapeAttr=c;this.shapeLabelAttr=f;this.data={};
return this}function a(a,b,c,f,d,g){this.id1=a.id;this.id2=b.id;this.r1=a.shape.width/2;this.r2=b.shape.width/2;this.x1=a.shape.x;this.y1=a.shape.y;this.x2=b.shape.x;this.y2=b.shape.y;this.label=a.edges[c].label||"";this.paper=f;this.lineAttr=d;this.edgeLabelAttr=g;this.data={};return this}function f(a){this._model=a;this.handleError=function(b){a.messenger.error.publish(b)};return this}var c=new d.Ontology("sm.nodes");c.addTerm("task");c.addTerm("insert");c.addTerm("connect");c.addTerm("set");c.addTerm("get");
c.addTerm("paint");c.addTerm("paintNodes");c.paint.isA(c.task);c.insert.isA(c.task);c.connect.isA(c.task);c.set.isA(c.task);c.get.isA(c.task);c.paintNodes.isA(c.paint);n.prototype.draw=function(a){return a.ellipse(this.x,this.y,this.width/2,this.height/2)};l.prototype.draw=function(a){return a.rect(this.x-this.width/2,this.y-this.height/2,this.width,this.height)};k.prototype.draw=function(a){var b=this.x-this.width/2,c=this.y;return a.path(["M",b,c,"L",this.x,this.y-this.height/2,"L",this.x+this.width/
2,this.y,"L",this.x,this.y+this.height/2,"L",b,c])};m.prototype.draw=function(a){var b=this.x-this.width/2,c=this.y+this.height/2;return a.path(["M",b,c,"L",this.x,this.y-this.height/2,"L",this.x+this.width/2,this.y+this.height/2,"L",b,c])};var p={ellipse:n,rectangle:l,diamond:k,triangle:m};g.prototype.update=function(a){a=this.shape.draw(this.paper);a.id=this.id;"function"===typeof this.shapeAttr?this.shapeAttr(a,this):a.attr(this.shapeAttr);a=this.paper.text(this.shape.x,this.shape.y,this.label);
"function"===typeof this.shapeLabelAttr?this.shapeLabelAttr(a,this):a.attr(this.shapeLabelAttr);return!0};a.prototype.update=function(a){var b=Math.sqrt(Math.pow(this.x2-this.x1,2)+Math.pow(this.y2-this.y1,2));a=this.r1/b;b=(b-this.r2)/b;a=this.paper.path(["M",a*this.x2+(1-a)*this.x1,a*this.y2+(1-a)*this.y1,"L",b*this.x2+(1-b)*this.x1,b*this.y2+(1-b)*this.y1]);"function"===typeof this.lineAttr?this.lineAttr(a,this):a.attr(this.lineAttr);a=this.paper.text((this.x1+this.x2)/2,(this.y1+this.y2)/2,this.label);
"function"===typeof this.edgeLabelAttr?this.edgeLabelAttr(a,this):a.attr(this.edgeLabelAttr);b=180*Math.atan2(this.y2-this.y1,this.x2-this.x1)/Math.PI;90<b?a.transform("t-6,-6r"+(b+180)):a.transform("t6,-6r"+b);return!0};f.prototype.update=function(b){var c=new d.type.Config;this._model.system.get.config(c);b=b.value;if("undefined"===typeof b)return!1;null!==d.typeMask(b,{length:!0,sort:"function"})&&d.error(Error("Cannot determine the JSON type; expecting an array (or comparable object) of node objects but received "+
b),this);var f=new d.type.NamedValue("sm.raphaeljs","paper",null);this._model.get.publish(f);f.value.clear();for(var k=0;k<b.length;k++){for(var p=new g(b[k],f.value,c.shapeAttr||{},c.shapeLabelAttr||{}),l=0;l<p.edges.length;l++){var m;a:{m=b;for(var n=p.edges[l].id,q=0;q<m.length;q++)if(m[q].id===n){m=new g(m[q]);break a}m=null}null!==m&&("undefined"!=typeof m.shape.x&&"undefined"!==typeof m.shape.y)&&(m=new a(p,m,l,f.value,c.lineAttr||{},c.edgeLabelAttr||{}),this._model.connect.publish(m))}this._model.insert.publish(p)}};
c.registerActivator(function(a){var b=new f(a);a.paintNodes.subscribe(function(a){return b});a.connect.subscribe(function(a){return a});a.insert.subscribe(function(a){return a})},["sm.channels","sm.raphaeljs"]);try{d.ontology.extendedBy(c)}catch(q){d.error(Error("Could not extend the smallmachine.ontology property with the 'sm.nodes' ontology: "+q.message+"\n"+q.stack))}})(smallmachine);(function(d,b,n){b=new d.Ontology("sm.flowchart");b.addTerm("paint");b.addTerm("get");var l=function(a,b,c,d){"undefined"===typeof a?(this.y=50,this.previousSector={y:0,height:0}):(this.previousSector=a,this.y=this.previousSector.y+this.previousSector.height+80);this.height=0;this.x=0.5*b;this.width=0;this.layoutWidth=b;this.lastNodeGroup=null;this.nodeGroups=0;this.nodes=[];return this};l.prototype.add=function(a,b){var c=parseFloat(a.width);null===this.lastNodeGroup?this.lastNodeGroup=b:this.lastNodeGroup!=
b&&(this.nodeGroups++,this.lastNodeGroup=b);this.width=this.width+40+c;var d=parseFloat(a.height);this.height=this.height<d?d:this.height;this.x=this.x-20-0.5*c;for(d=c=0;d<a.edges.length;d++)a.edges[d].label.length>c&&(c=a.edges[d].label.length);6<c&&(c=this.height+10*(c-6),c>this.height&&(this.height=c));this.nodes.push({node:a,nodeGroup:b})};l.prototype.finalize=function(a){if("undefined"===typeof a||0>a)a=0;a*=0.5;for(var b=null,c=0,d=0;d<this.nodes.length;d++)null===b?b=this.nodes[d].nodeGroup:
this.nodes[d].nodeGroup!=b&&(c++,b=this.nodes[d].nodeGroup),this.nodes[d].node.x=this.x+(40*d+40*c)+this.nodes[d].node.width*d+a,this.nodes[d].node.y=this.y};var k=function(a){this.paper=a;this.width=parseFloat(a.width);this.height=parseFloat(a.height);this.finalWidth=this.width;this.finalHeight=this.height;this.sectors=[];return this};k.prototype.addToSector=function(a,b,c){var d=this.sectors[b];"undefined"===typeof d&&(d=new l(this.sectors[b-1],this.width,this.height,c),this.sectors[b]=d);d.add(a,
c)};k.prototype.finalize=function(){for(var a=0;a<this.sectors.length;a++)this.sectors[a].width+=40*this.sectors[a].nodeGroups,this.sectors[a].width>this.finalWidth&&(this.finalWidth=this.sectors[a].width);for(a=0;a<this.sectors.length;a++)this.sectors[a].finalize(this.finalWidth-this.width)};var m=function(a,b,c,d,g,e){d.addToSector(a,g++,e);for(e=0;e<a.edges.length;e++)m(b[c[a.edges[e].id]],b,c,d,g,a.id)};b.registerActivator(function(a){a.paint.subscribe(function(b){if(null===d.typeMask(b.value,
{length:!0,sort:"function"}))return function(c){c=b.value;var g=new d.type.NamedValue("sm.flowchart","root",null);a.get.publish(g);var l=new d.type.NamedValue("sm.raphaeljs","paper",null);a.get.publish(l);for(var e=new k(l.value),g=g.value,h={},n=c[0],r=0;r<c.length;r++)h[c[r].id]=r,c[r].id===g&&(n=c[r]);m(n,c,h,e,0,n.id);e.finalize();l.value.setSize(1.05*e.finalWidth,1.05*e.finalHeight);return!1}})},["sm.channels","sm.nodes","sm.raphaeljs"]);try{d.ontology.extendedBy(b)}catch(g){d.error(Error("Could not extend the smallmachine.ontology property with the 'sm.nodes' ontology: "+
g.message+"\n"+g.stack))}})(smallmachine,jQuery,Raphael);(function(d,b){var n=new d.Ontology("sm.raphaeljs");n.addTerm("set");n.registerActivator(function(k){var l=/^(\d+)%?$/,g=function(a,f,c,g){g=document.getElementById(a+"");if("undefined"===typeof g||!g)throw Error("The specified element ID could not be found: "+a);var k=window,e=document,h=e.documentElement,n=e.getElementsByTagName("body")[0],e=k.innerWidth||h.clientWidth||n.clientWidth,k=k.innerHeight||h.clientHeight||n.clientHeight,h=f;null===f&&(h=g.offsetWidth||e);n=l.exec(h+"");if(!n)throw Error("The specified value for width is invalid (number, percentage or null allowed): "+
f);"function"===typeof h.indexOf&&0<h.indexOf("%")&&(h=100*(g.offsetWidth||e)/parseFloat(n[0]));f=c;null==c&&(f=g.offsetHeight||k);e=l.exec(f+"");if(!e)throw Error("The specified value for height is invalid (number, percentage or null allowed): "+c);"function"===typeof f.indexOf&&0<f.indexOf("%")&&(f=(g.offsetHeight||k)*parseFloat(e[0])/100);a=b(a,h,f);return new d.type.NamedValue("sm.raphaeljs","paper",a)};"function"===typeof k.set.addHelper&&k.set.addHelper("svg",g)},["sm.channels"]);try{d.ontology.extendedBy(n)}catch(l){throw Error("Could not extend the smallmachine.ontology property with the 'sm.raphaeljs' ontology: "+
l.message+"\n"+l.stack);}})(smallmachine,Raphael);(function(d,b){var n=new d.Ontology("sm.sammyjs");n.addTerm("initialize");var l=function(b,a,d){this._id=b;this._callback=a;this._runArg=d||"#/";return this};l.prototype._name="Sammy";d.type.extendedBy(l);var k={update:function(g){return null===d.typeMask(g,{_id:!0,_callback:!0,_runArg:!0})?function(a){b("#"+a._id,a._callback).run(a._runArg)}:!1}};n.registerActivator(function(b){b.initialize.subscribe({update:function(a){return k}})},["sm.channels"]);try{d.ontology.extendedBy(n)}catch(m){throw Error("Could not extend the smallmachine.ontology property with the 'sm.sammyjs' ontology: "+
m.message+"\n"+m.stack);}})(smallmachine,Sammy);
