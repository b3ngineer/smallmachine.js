var smallmachine=function(e){function r(c,k){for(var d=0;d<k.dependencies.length;d++){for(var f=!1,e=0;e<c.length;e++)if(k.dependencies[d]==c[e].namespace){f=!0;break}if(!f)return k.dependencies[d]}return null}function m(c,k){this._term=c;this._rules=k._rules;return this}function p(){return this}function q(){return this}function l(c){this.namespace=c;this._inferencer=new b;this._activators=[];this.Term=function(c){this._id=function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(c){var e=
16*Math.random()|0;return("x"==c?e:e&3|8).toString(16)})}();"undefined"!==typeof c._value&&"undefined"!==typeof c._type?(this._value=c._value,this._type=c._type):(this._value=c,this._type=null);return this};return this}function b(){this._term={_value:null};this._rules=[];return this}function a(c,k,d){c=this[c];var f=this[k],a=this[d];f._type===e.CONCEPT?e.error(Error("Cannot define a relationship with a concept type: "+f._value)):null===f._type&&(f._type=e.RELATIONSHIP);a._type===e.RELATIONSHIP?e.error(Error("Cannot create a relationship with a relationship type: "+
a._value)):null===a._type&&(a._type=e.CONCEPT);c._type===e.RELATIONSHIP?e.error(Error("Cannot create a relationship from a relationship type: "+c._value)):null===c._type&&(c._type=e.CONCEPT);"undefined"===typeof c[k]&&(c[k]=new c.constructor(f));"undefined"===typeof c[k][d]&&(c[k][d]=a);"undefined"===typeof c[d]&&(c[d]=a);a.relate(c[k]);for(var b in a)a.hasOwnProperty(b)&&"function"===typeof a[b].relate&&("undefined"===typeof c[k][b]&&(c[k][b]=a[b]),"undefined"===typeof c[b]&&(c[b]=a[b]),a[b].relate(c[k]))}
function n(c,k){var d=this[c],f=this[k];f._type===e.RELATIONSHIP?e.error(Error("Cannot apply isA to a relationship type: "+f._value)):null===f._type&&(f._type=e.CONCEPT);d._type===e.RELATIONSHIP?e.error(Error("Cannot apply isA to a relationship type: "+d._value)):null===d._type&&(d._type=e.CONCEPT);"undefined"===typeof f[c]&&(f[c]=d)}function g(c,k){var d=this[c],f=this[k];f._type===e.RELATIONSHIP?e.error(Error("Cannot apply hasRange to a relationship type: "+f._value)):null===f._type&&(f._type=e.CONCEPT);
d._type===e.CONCEPT?e.error(Error("Cannot assign hasRange from a concept type: "+d._value)):null===d._type&&(d._type=e.RELATIONSHIP);"undefined"===typeof d[k]&&(d[k]=f);f.relate(d);for(var a in f)if(f.hasOwnProperty(a)&&"function"===typeof f[a].relate){var b=f[a]._value||null;null!==b&&("undefined"===typeof d[b]&&(d[b]=f[a]),f[a].relate(d))}}function h(c,k){var d=this[c],a=this[k];a._type===e.RELATIONSIP?e.error(Error("Cannot apply hasRange to a relationship type: "+a._value)):null===a._type&&(a._type=
e.CONCEPT);d._type===e.CONCEPT?e.error(Error("Cannot assign hasRange from a concept type: "+d._value)):null===d._type&&(d._type=e.RELATIONSHIP);"undefined"===typeof a[c]&&(a[c]=d)}"function"!==typeof Object.getPrototypeOf&&(Object.getPrototypeOf="object"===typeof"test".__proto__?function(c){return c.__proto__}:function(c){return c.constructor.prototype});e=function(c,a){"undefined"===typeof c&&e.error(Error("Missing required parameter for smallmachine constructor: one or more instances of type 'Ontology'"));
for(var d=[].concat(c),f="",b=0;b<d.length;b++)"undefined"===typeof d[b].namespace?"undefined"!==typeof e.ontology[d[b]]&&(f=f+d[b]+",",d[b]=e.ontology[d[b]]):f=f+d[b].namespace+",";f=new l(f.substring(0,f.length-1));for(b=0;b<d.length;b++){for(var n in d[b])d[b].hasOwnProperty(n)&&"undefined"!==typeof d[b][n]._name&&"Proxy"==d[b][n]._name&&f.addTerm(d[b][n]._term._value);for(var g=0;g<d[b]._inferencer._rules.length;g++)f._inferencer._rules.push(d[b]._inferencer._rules[g]);for(g=0;g<d[b]._activators.length;g++){var h=
r(d,d[b]._activators[g]);null!==h&&e.error(Error("Cannot wire-in ontology with missing activator dependency on '"+h+"'"));f.registerActivator(d[b]._activators[g]);f._activators.sort(function(c,d){if(c.namespace==d.namespace)return 0;for(var a=0;a<c.dependencies.length;a++)if(d.namespace==c.dependencies[a])return 1;for(a=0;a<d.dependencies.length;a++)if(c.namespace==d.dependencies[a])return-1;return 0})}}return f.getModel(a)};e.alsoBehavesLike=function(c,a){("undefined"===typeof c||"undefined"===typeof a)&&
e.error(Error("Cannot mixin with an undefined object"));for(var d in a)if(a.hasOwnProperty(d)&&!(0==d.indexOf("_")||"initializer"===d))if("undefined"!==typeof c[d]){if("undefined"!==typeof a[d].prototype){if("undefined"!==typeof a[d].prototype.initializer&&!0==a[d].prototype.initializer)continue;var b="undefined"!==typeof a[d].prototype.virtual?a[d].prototype.virtual:!1}var n="undefined"!==typeof c[d].prototype?c[d].prototype.virtual:!1;if(!n||!b)n&&(c[d]=a[d])}else c[d]=a[d];"undefined"!==typeof a.prototype&&
("undefined"===typeof c.prototype&&(c.prototype={}),e.alsoBehavesLike(c.prototype,a.prototype))};e.error=function(c,a){if("undefined"!==typeof a&&"function"===typeof a.handleError)a.handleError(c);else if("function"===typeof e.handleError)e.handleError(c);else throw c;};var t=function(c){var a=16*Math.random()|0;return("x"==c?a:a&3|8).toString(16)};e.getGuid=function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,t)};e.CONCEPT="concept";e.RELATIONSHIP="relationship";m.prototype._name=
"Proxy";p.prototype.relate=function(c){"undefined"===typeof this._relatesTo&&(this._relatesTo=[]);for(var a=!1,d=0;d<this._relatesTo.length;d++)if(this._relatesTo[d]._id==c._id){a=!0;break}a||this._relatesTo.push(c)};q.prototype._name="Behavior";e.Behavior=q;l.prototype._name="Ontology";l.prototype.addTerm=function(c){if("undefined"!==typeof this[c])return this;var a=this.Term;a.prototype.relate=p.prototype.relate;a=new a(c);this[c]=new m(a,this._inferencer);return this};l.prototype.registerActivator=
function(c,a){"undefined"===typeof a&&(a=[]);null===e.typeMask(c,{fn:"function",namespace:!0,dependencies:!0})?this._activators.push(c):this._activators.push({fn:c,namespace:this.namespace,dependencies:a})};l.prototype.getModel=function(c){var a=new function(){return this},d=[];if("undefined"!==typeof c){d=d.concat(c);for(c=0;c<d.length;c++)if("undefined"===typeof d[c]&&e.error("One or more [behaviors] arguments were supplied to the smallmachine constructor that are 'undefined'; error creating object model"),
"undefined"!==typeof d[c].prototype&&!0===d[c].prototype.initializer)d[c](a)}for(var b in this)if(this.hasOwnProperty(b)&&!("undefined"===typeof this[b]||"undefined"===this[b]._term)&&0!==b.indexOf("_"))if("undefined"!==typeof this[b]._term){a[b]=this[b]._term;for(c=0;c<d.length;c++)e.alsoBehavesLike(Object.getPrototypeOf(a[b]),d[c].prototype)}else a[b]=this[b];this._inferencer._rules.sort(function(a,c){return a._priority-c._priority});for(c=0;c<this._inferencer._rules.length;c++)d=this._inferencer._rules[c],
d._fn.apply(a,d._args);for(c=0;c<this._activators.length;c++)this._activators[c].fn(a);return a};e.Ontology=l;var s=function(a,b,d){this._fn=b;this._args=d;this._priority=a;return this};b.prototype.isA=function(a){this._rules.push(new s(1,n,[this._term._value,a._term._value]));return this};b.prototype.relatesTo=function(c,b){this._rules.push(new s(10,a,[this._term._value,c._term._value,b._term._value]));return this};b.prototype.hasDomain=function(a){this._rules.push(new s(3,h,[this._term._value,a._term._value]));
return this};b.prototype.hasRange=function(a){this._rules.push(new s(2,g,[this._term._value,a._term._value]));return this};e.alsoBehavesLike(m,b);e.typeMask=function(a,b){var d=[],e;for(e in b)b.hasOwnProperty(e)&&("undefined"===typeof a||"undefined"===typeof a[e]?d.push(e):"undefined"!==typeof a[e]&&typeof a[e]!==b[e]&&!0!==b[e]&&d.push(e));return 0===d.length?null:d};return e}(smallmachine||{});(function(e){function r(){return this}function m(){return this}function p(a){this._channel=a;return this}function q(a,b,g){"undefined"===typeof b&&e.error(Error("Parameter 'key' is required when instantiating the sm.NamedValue type"));this.namespace=a;this.key=b;this.value=g;return this}function l(){this._collection={};return this}var b=new e.Ontology("sm.properties");b.addTerm("property");b.addTerm("type");b.addTerm("ontology");b.addTerm("behavior");b.addTerm("hasMemberType");b.addTerm("hasMember");
b.addTerm("Ontology");b.addTerm("Behavior");b.addTerm("Constructor");b.addTerm("Null");b.ontology.isA(b.property);b.behavior.isA(b.property);b.Ontology.isA(b.type);b.Behavior.isA(b.type);b.Constructor.isA(b.type);b.Null.isA(b.type);b.ontology.relatesTo(b.hasMemberType,b.Ontology);b.behavior.relatesTo(b.hasMemberType,b.Behavior);b.ontology.relatesTo(b.hasMember,b.Null);b.behavior.relatesTo(b.hasMember,b.Null);r.prototype.extendedBy=function(a,b){var g=this.hasMemberType;"undefined"===typeof b&&("undefined"===
g?b=a._name:"undefined"!==typeof a.prototype&&(b=a.prototype._name));if("undefined"!==typeof b&&"function"===typeof a)"undefined"!==typeof this[b]?e.alsoBehavesLike(this[b],a):this[b]=a,"undefined"===typeof this[b]._name&&(this[b]._name=b);else{var h=b||a.namespace||a._name;"undefined"===typeof h&&e.error(Error("Cannot call extendedBy on the core ontology with an object that is missing the 'namepsace' and '_name' properties without specifying a 'typeName'"));if("undefined"!==typeof this[h])e.alsoBehavesLike(this[h],
a);else{var l=e[this._value][g._value];"undefined"===typeof l&&e.error(Error("The specified type does not exist in the core object model: "+g._value));var g=a._name||a.constructor.name,m=!1,c;for(c in l)if(l.hasOwnProperty(c)&&0!==c.indexOf("_")&&c===g){this.hasMember[h]=a;this[h]=a;m=!0;break}m||e.error(Error("Did not find an allowed model type for: "+g))}}};m.prototype._name="Null";e.alsoBehavesLike(e,b.getModel(r));e.ontology.extendedBy(new m);e.behavior.extendedBy(new m);p.prototype._name="AsyncResult";
p.prototype.publish=function(a,b){this._channel.publish(a,b);return this};e.type.extendedBy(p);q.prototype.adapt=function(a,b){this.namespace=a;if("undefined"!==typeof b)for(var g=[].concat(b),h=0;h<g.length;h++)e.alsoBehavesLike(this,g[h]);return this};q.prototype._name="NamedValue";e.type.extendedBy(q);l.prototype._name="NamedValueCollection";l.prototype.exists=function(a,b){var g=a;null===e.typeMask(a,{namespace:!0,key:!0})&&(g=a.namespace,b=a.key);return"undefined"!==typeof this._collection[g]&&
"undefined"!==typeof this._collection[g][b]};l.prototype.add=function(a,b,g){var h=a.namespace||a,l=a.key||b;"undefined"!==typeof this._collection[h]&&"undefined"!==this._collection[h][l]&&e.error(Error("Cannot add a new entry to the collection (already exists): ["+h+"]"+l));this.modify(a,b,g);return this};l.prototype.modify=function(a,b,g){var h=a.namespace||a;b=a.key||b;a=a.value||g;"undefined"===typeof b&&e.error(Error("Must supply a valid key"));"undefined"===typeof a&&e.error(Error("Must supply a valid value"));
"undefined"===typeof this._collection[h]&&(this._collection[h]={});this._collection[h][b]=a;return this};l.prototype.remove=function(a,b){if(!("undefined"===typeof this._collection[a]||"undefined"===typeof this._collection[a][b]))return delete this._collection[a][b],this};l.prototype.getValue=function(a,b){var e=a.namespace||a,h=a.key||b;if(!("undefined"===typeof this._collection[e]||"undefined"===this._collection[e][h]))return e=this._collection[e][h],"undefined"!==typeof e&&("function"===typeof a.setValue?
a.setValue(e):"undefined"!==typeof a.value&&(a.value=e)),e};e.type.extendedBy(l)})(smallmachine);
