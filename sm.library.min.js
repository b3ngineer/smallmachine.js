var smallmachine=function(d){"function"!==typeof Object.getPrototypeOf&&(Object.getPrototypeOf="object"===typeof"test".__proto__?function(e){return e.__proto__}:function(e){return e.constructor.prototype});var b=function(e,n){for(var c=0;c<n.dependencies.length;c++){for(var f=!1,d=0;d<e.length;d++)if(n.dependencies[c]==e[d].title){f=!0;break}if(!f)return n.dependencies[c]}return null};d=function(e,n){"undefined"===typeof e&&d.error(Error("Missing required parameter for smallmachine constructor: one or more instances of type [object Ontology]"));
for(var c=[].concat(e),f="",a=0;a<c.length;a++)"function"!==typeof c[a].ofType||!c[a].ofType("Ontology")?"undefined"!==typeof d.ontology[c[a]]&&(f=f+c[a]+",",c[a]=d.ontology[c[a]]):f+=c[a].title;f=new d.Ontology(f.substring(0,f.length-1));for(a=0;a<c.length;a++){for(var h in c[a])c[a].hasOwnProperty(h)&&"function"===typeof c[a][h].ofType&&c[a][h].ofType("Proxy")&&f.addTerm(c[a][h]._term._value);for(var g=0;g<c[a]._inferencer._rules.length;g++)f._inferencer._rules.push(c[a]._inferencer._rules[g]);
for(g=0;g<c[a]._activators.length;g++){var k=b(c,c[a]._activators[g]);null!==k&&d.error(Error("Cannot wire-in ontology with missing activator dependency on '"+k+"'"));f.registerActivator(c[a]._activators[g]);f._activators.sort(function(e,c){if(e.title==c.title)return 0;for(var a=0;a<e.dependencies.length;a++)if(c.title==e.dependencies[a])return 1;for(a=0;a<c.dependencies.length;a++)if(e.title==c.dependencies[a])return-1;return 0})}}return f.getModel(n)};d.alsoBehavesLike=function(e,a){("undefined"===
typeof e||"undefined"===typeof a)&&d.error(Error("Cannot mixin with an undefined object"));for(var c in a)if(a.hasOwnProperty(c)&&!(0==c.indexOf("_")||"initializer"===c))if("undefined"!==typeof e[c]){if("undefined"!==typeof a[c].prototype){if("undefined"!==typeof a[c].prototype.initializer&&!0==a[c].prototype.initializer)continue;var f="undefined"!==typeof a[c].prototype.virtual?a[c].prototype.virtual:!1}var b="undefined"!==typeof e[c].prototype?e[c].prototype.virtual:!1;if(!b||!f)b&&(e[c]=a[c])}else e[c]=
a[c];"undefined"!==typeof a.prototype&&("undefined"===typeof e.prototype&&(e.prototype={}),d.alsoBehavesLike(e.prototype,a.prototype))};d.error=function(e,a){if("undefined"!==typeof a&&"function"===typeof a.handleError)a.handleError(e);else if("function"===typeof d.handleError)d.handleError(e);else throw e;};d.CONCEPT="concept";d.RELATIONSHIP="relationship";var m=function(e,a){this._term=e;this._rules=a._rules;return this};m.prototype.getType=function(){return"[object Proxy]"};m.prototype.ofType=
function(e){return"Proxy"===e||"function"===typeof e.getType&&e.getType()===this.getType()};var l=function(){return this};l.prototype.relate=function(e){"undefined"===typeof this._relatesTo&&(this._relatesTo=[]);for(var a=!1,c=0;c<this._relatesTo.length;c++)if(this._relatesTo[c]._id==e._id){a=!0;break}a||this._relatesTo.push(e)};l.prototype.getType=function(){return"[object Term]"};l.prototype.ofType=function(e){return"Term"===e||"function"===typeof e.getType&&e.getType()===this.getType()};d.Behavior=
function(e){this.title=e;return this};d.Ontology=function(e){this.title=e;this._inferencer=new a;this._activators=[];this._term=function(e){this._id=function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(e){var a=16*Math.random()|0;return("x"==e?a:a&3|8).toString(16)})}();"undefined"!==typeof e._value&&"undefined"!==typeof e._type?(this._value=e._value,this._type=e._type):(this._value=e,this._type=null);return this};return this};d.Ontology.prototype.getType=function(){return"[object Ontology]"};
d.Ontology.prototype.addTerm=function(e){if("undefined"!==typeof this[e])return this;var a=this._term;a.prototype.relate=l.prototype.relate;a.prototype.getType=l.prototype.getType;a.prototype.ofType=l.prototype.ofType;a=new a(e);this[e]=new m(a,this._inferencer);return this};d.Ontology.prototype.registerActivator=function(e,a){"undefined"===typeof a&&(a=[]);"function"!==typeof e&&"function"===typeof e.getType&&"[object Activator]"===e.getType()?this._activators.push(e):this._activators.push({fn:e,
title:this.title,dependencies:a,getType:function(){return"[object Activator]"}})};d.Ontology.prototype.getModel=function(e){var a=new function(a){return this},c=[];if("undefined"!==typeof e){c=c.concat(e);for(e=0;e<c.length;e++)if("undefined"!==typeof c[e].prototype&&!0===c[e].prototype.initializer)c[e](a)}for(var f in this)if(this.hasOwnProperty(f)&&!("undefined"===typeof this[f]||"undefined"===this[f]._term)&&0!==f.indexOf("_"))if("undefined"!==typeof this[f]._term){a[f]=this[f]._term;for(e=0;e<
c.length;e++)d.alsoBehavesLike(Object.getPrototypeOf(a[f]),c[e].prototype)}else a[f]=this[f];this._inferencer._rules.sort(function(a,e){return a._priority-e._priority});for(e=0;e<this._inferencer._rules.length;e++)c=this._inferencer._rules[e],c._fn.apply(a,c._args);for(e=0;e<this._activators.length;e++)this._activators[e].fn(a);return a};var a=function(){this._term={_value:null};this._rules=[];return this},h=function(a,d,c){this._fn=d;this._args=c;this._priority=a;return this};a.prototype.isA=function(a){this._rules.push(new h(1,
k,[this._term._value,a._term._value]));return this};a.prototype.relatesTo=function(a,d){this._rules.push(new h(10,g,[this._term._value,a._term._value,d._term._value]));return this};a.prototype.hasDomain=function(a){this._rules.push(new h(3,p,[this._term._value,a._term._value]));return this};a.prototype.hasRange=function(a){this._rules.push(new h(2,q,[this._term._value,a._term._value]));return this};d.alsoBehavesLike(m,a);var g=function(a,b,c){a=this[a];var f=this[b],h=this[c];f._type===d.CONCEPT?
d.error(Error("Cannot define a relationship with a concept type: "+f._value)):null===f._type&&(f._type=d.RELATIONSHIP);h._type===d.RELATIONSHIP?d.error(Error("Cannot create a relationship with a relationship type: "+h._value)):null===h._type&&(h._type=d.CONCEPT);a._type===d.RELATIONSHIP?d.error(Error("Cannot create a relationship from a relationship type: "+a._value)):null===a._type&&(a._type=d.CONCEPT);"undefined"===typeof a[b]&&(a[b]=new a.constructor(f));"undefined"===typeof a[b][c]&&(a[b][c]=
h);"undefined"===typeof a[c]&&(a[c]=h);h.relate(a[b]);for(var g in h)h.hasOwnProperty(g)&&(h[g].getType&&"[object Term]"===h[g].getType())&&("undefined"===typeof a[b][g]&&(a[b][g]=h[g]),"undefined"===typeof a[g]&&(a[g]=h[g]),h[g].relate(a[b]))},k=function(a,b){var c=this[a],f=this[b];f._type===d.RELATIONSHIP?d.error(Error("Cannot apply isA to a relationship type: "+f._value)):null===f._type&&(f._type=d.CONCEPT);c._type===d.RELATIONSHIP?d.error(Error("Cannot apply isA to a relationship type: "+c._value)):
null===c._type&&(c._type=d.CONCEPT);"undefined"===typeof f[a]&&(f[a]=c)},q=function(a,b){var c=this[a],f=this[b];f._type===d.RELATIONSHIP?d.error(Error("Cannot apply hasRange to a relationship type: "+f._value)):null===f._type&&(f._type=d.CONCEPT);c._type===d.CONCEPT?d.error(Error("Cannot assign hasRange from a concept type: "+c._value)):null===c._type&&(c._type=d.RELATIONSHIP);"undefined"===typeof c[b]&&(c[b]=f);f.relate(c);for(var h in f)if(f.hasOwnProperty(h)&&f[h].getType&&"[object Term]"===f[h].getType()){var g=
f[h]._value;"undefined"===typeof c[g]&&(c[g]=f[h]);f[h].relate(c)}},p=function(a,b){var c=this[a],f=this[b];f._type===d.RELATIONSIP?d.error(Error("Cannot apply hasRange to a relationship type: "+f._value)):null===f._type&&(f._type=d.CONCEPT);c._type===d.CONCEPT?d.error(Error("Cannot assign hasRange from a concept type: "+c._value)):null===c._type&&(c._type=d.RELATIONSHIP);"undefined"===typeof f[a]&&(f[a]=c)};d.typeMask=function(a,d){var c=[],b;for(b in d)d.hasOwnProperty(b)&&("undefined"===typeof a||
"undefined"===typeof a[b]?c.push(b):"undefined"!==typeof a[b]&&typeof a[b]!==d[b]&&!0!==d[b]&&c.push(b));return 0===c.length?null:c};return d}(smallmachine||{});(function(d){var b=new d.Ontology("sm.properties");b.addTerm("property");b.addTerm("type");b.addTerm("ontology");b.addTerm("behavior");b.addTerm("hasMemberType");b.addTerm("hasMember");b.addTerm("Ontology");b.addTerm("Behavior");b.addTerm("Constructor");b.addTerm("Null");b.ontology.isA(b.property);b.behavior.isA(b.property);b.Ontology.isA(b.type);b.Behavior.isA(b.type);b.Constructor.isA(b.type);b.Null.isA(b.type);b.ontology.relatesTo(b.hasMemberType,b.Ontology);b.behavior.relatesTo(b.hasMemberType,
b.Behavior);b.ontology.relatesTo(b.hasMember,b.Null);b.behavior.relatesTo(b.hasMember,b.Null);var m=function(){return this};m.prototype.extendedBy=function(a,b){if("undefined"!==typeof b&&"function"===typeof a)"undefined"!==typeof this[b]?d.alsoBehavesLike(this[b],a):this[b]=a,"function"!==typeof this[b].prototype.getType&&(this[b].prototype.getType=function(){return"[object "+b+"]"}),"function"!==typeof this[b].prototype.ofType&&(this[b].prototype.ofType=function(a){return"function"===typeof a.getType?
this.getType()===a.getType():this.getType()==="[object "+a+"]"});else{var g=b||a.title;"undefined"===typeof g&&d.error(Error("Cannot call extendedBy on the core ontology with an object that is missing the 'title' property without specifying a 'typeName'"));if("undefined"!==typeof this[g])d.alsoBehavesLike(this[g],a);else{var k=this.hasMemberType;("undefined"===typeof k||"undefined"===typeof k.getType)&&d.error(Error("The specified concept does not have a valid 'hasMemberType' relationship with another concept"));
var l=d[this._value][k._value];"undefined"===typeof l&&d.error(Error("The specified type does not exist in the core object model: "+k._value));"function"!==typeof a.getType&&d.error(Error("The specified model is missing the getType function: "+g));var k=a.getType(),m=!1,e;for(e in l)if(l.hasOwnProperty(e)&&"undefined"!==typeof this[e].getType&&"[object "+e+"]"===k){this.hasMember[g]=a;this[g]=a;m=!0;break}m||d.error(Error("Did not find an allowed model type for: "+k))}}};var l=function(){this.title=
"Null";return this};l.prototype.getType=function(){return"[object Null]"};l.prototype.ofType=function(a){return null===a||"null"===a||"Null"===a?!0:!1};d.alsoBehavesLike(d,b.getModel(m));d.ontology.extendedBy(new l);d.behavior.extendedBy(new l);b=function(a){this._channel=a;return this};b.prototype.publish=function(a,b){this._channel.publish(a,b);return this};d.type.extendedBy(b,"AsyncResult");b=function(a,b,g){"undefined"===typeof b&&d.error(Error("Parameter 'key' is required when instantiating the sm.NamedValue type"));
this.namespace=a;this.key=b;this.value=g;return this};b.prototype.adapt=function(a,b){this.namespace=a;if("undefined"!==typeof b)for(var g=[].concat(b),k=0;k<g.length;k++)d.alsoBehavesLike(this,g[k]);return this};d.type.extendedBy(b,"NamedValue");b=function(){this.title="NamedValueCollection";this._collection={};return this};b.prototype.exists=function(a,b){var g=a;null===d.typeMask(a,{namespace:!0,key:!0})&&(g=a.namespace,b=a.key);return"undefined"!==typeof this._collection[g]&&"undefined"!==typeof this._collection[g][b]};
b.prototype.add=function(a,b,g){var k=a.namespace||a,l=a.key||b;"undefined"!==typeof this._collection[k]&&"undefined"!==this._collection[k][l]&&d.error(Error("Cannot add a new entry to the collection (already exists): ["+k+"]"+l));this.modify(a,b,g);return this};b.prototype.modify=function(a,b,g){var k=a.namespace||a;b=a.key||b;a=a.value||g;"undefined"===typeof b&&d.error(Error("Must supply a valid key"));"undefined"===typeof a&&d.error(Error("Must supply a valid value"));"undefined"===typeof this._collection[k]&&
(this._collection[k]={});this._collection[k][b]=a;return this};b.prototype.remove=function(a,b){if(!("undefined"===typeof this._collection[a]||"undefined"===typeof this._collection[a][b]))return delete this._collection[a][b],this};b.prototype.getValue=function(a,b){var d=a.namespace||a,k=a.key||b;if(!("undefined"===typeof this._collection[d]||"undefined"===this._collection[d][k]))return d=this._collection[d][k],"undefined"!==typeof d&&("function"===typeof a.setValue?a.setValue(d):"undefined"!==typeof a.value&&
(a.value=d)),d};b.prototype.ofType=function(a){return"NamedValueCollection"===a||"function"===typeof a.getType&&a.getType()===this.getType()};d.type.extendedBy(b,"NamedValueCollection")})(smallmachine);
