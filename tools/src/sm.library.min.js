var smallmachine=function(core){if(typeof Object.getPrototypeOf!=="function")if(typeof"test".__proto__==="object")Object.getPrototypeOf=function(object){return object.__proto__};else Object.getPrototypeOf=function(object){return object.constructor.prototype};var getMissingDependency=function(ontologies,activator){for(var i=0;i<activator.dependencies.length;i++){var foundDependency=false;for(var j=0;j<ontologies.length;j++)if(activator.dependencies[i]==ontologies[j].title){foundDependency=true;break}if(!foundDependency)return activator.dependencies[i]}return null};
core=function(ontologies,behaviors){if(typeof ontologies==="undefined")core.error(new Error("Missing required parameter for smallmachine constructor: one or more instances of type [object Ontology]"));var allOntologies=[].concat(ontologies);var titleList="";for(var i=0;i<allOntologies.length;i++)if(typeof allOntologies[i].ofType!=="function"||!allOntologies[i].ofType("Ontology")){if(typeof core.ontology[allOntologies[i]]!=="undefined"){titleList=titleList+allOntologies[i]+",";allOntologies[i]=core.ontology[allOntologies[i]]}}else titleList=
titleList+allOntologies[i].title;var ontology=new core.Ontology(titleList.substring(0,titleList.length-1));for(var i=0;i<allOntologies.length;i++){for(var p in allOntologies[i]){if(!allOntologies[i].hasOwnProperty(p))continue;if(typeof allOntologies[i][p].ofType==="function"&&allOntologies[i][p].ofType("Proxy")){var term=allOntologies[i][p]._term;ontology.addTerm(term._value)}}for(var j=0;j<allOntologies[i]._inferencer._rules.length;j++)ontology._inferencer._rules.push(allOntologies[i]._inferencer._rules[j]);
for(var j=0;j<allOntologies[i]._activators.length;j++){var missingDependency=getMissingDependency(allOntologies,allOntologies[i]._activators[j]);if(missingDependency!==null)core.error(new Error("Cannot wire-in ontology with missing activator dependency on '"+missingDependency+"'"));ontology.registerActivator(allOntologies[i]._activators[j]);ontology._activators.sort(function(a,b){if(a.title==b.title)return 0;for(var i=0;i<a.dependencies.length;i++)if(b.title==a.dependencies[i])return 1;for(var i=
0;i<b.dependencies.length;i++)if(a.title==b.dependencies[i])return-1;return 0})}}return ontology.getModel(behaviors)};core.alsoBehavesLike=function(a,b){if(typeof a==="undefined"||typeof b==="undefined")core.error(new Error("Cannot mixin with an undefined object"));for(var p in b){if(!b.hasOwnProperty(p))continue;if(p.indexOf("_")==0||p==="initializer")continue;if(typeof a[p]!=="undefined"){if(typeof b[p].prototype!=="undefined"){if(typeof b[p].prototype.initializer!=="undefined"&&b[p].prototype.initializer==
true)continue;var newBehaviorIsVirtual=typeof b[p].prototype.virtual!=="undefined"?b[p].prototype.virtual:false}var currentBehaviorIsVirtual=typeof a[p].prototype!=="undefined"?a[p].prototype.virtual:false;if(currentBehaviorIsVirtual&&newBehaviorIsVirtual)continue;else if(currentBehaviorIsVirtual){a[p]=b[p];continue}else if(newBehaviorIsVirtual)continue}else a[p]=b[p]}if(typeof b.prototype!=="undefined"){if(typeof a.prototype==="undefined")a.prototype={};core.alsoBehavesLike(a.prototype,b.prototype)}};
core.error=function(Error,handler){if(typeof handler!=="undefined"&&typeof handler.handleError==="function")handler.handleError(Error);else if(typeof core.handleError==="function")core.handleError(Error);else throw Error;};var _getGuid=function(c){var r=Math.random()*16|0,v=c=="x"?r:r&3|8;return v.toString(16)};core.getGuid=function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,_getGuid)};core.CONCEPT="concept";core.RELATIONSHIP="relationship";var Proxy=function(Term,Inferencer){this._term=
Term;this._rules=Inferencer._rules;return this};Proxy.prototype.getType=function(){return"[object Proxy]"};Proxy.prototype.ofType=function(type){return type==="Proxy"||typeof type.getType==="function"&&type.getType()===this.getType()};var _Term=function(){return this};_Term.prototype.relate=function(Term){if(typeof this._relatesTo==="undefined")this._relatesTo=[];var alreadyRelatesTo=false;for(var i=0;i<this._relatesTo.length;i++)if(this._relatesTo[i]._id==Term._id){alreadyRelatesTo=true;break}if(!alreadyRelatesTo)this._relatesTo.push(Term)};
_Term.prototype.getType=function(){return"[object Term]"};_Term.prototype.ofType=function(type){return type==="Term"||typeof type.getType==="function"&&type.getType()===this.getType()};core.Behavior=function(title){this.title=title;return this};core.Ontology=function(title){this.title=title;this._inferencer=new Inferencer;this._activators=[];this._term=function(value){this._id=function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=="x"?r:r&
3|8;return v.toString(16)})}();if(typeof value._value!=="undefined"&&typeof value._type!=="undefined"){this._value=value._value;this._type=value._type}else{this._value=value;this._type=null}return this};return this};core.Ontology.prototype.getType=function(){return"[object Ontology]"};core.Ontology.prototype.addTerm=function(value){if(typeof this[value]!=="undefined")return this;var Term=this._term;Term.prototype.relate=_Term.prototype.relate;Term.prototype.getType=_Term.prototype.getType;Term.prototype.ofType=
_Term.prototype.ofType;var t=new Term(value);this[value]=new Proxy(t,this._inferencer);return this};core.Ontology.prototype.registerActivator=function(activator,dependencies){if(typeof dependencies==="undefined")dependencies=[];if(typeof activator!=="function"&&typeof activator.getType==="function"&&activator.getType()==="[object Activator]"){this._activators.push(activator);return}this._activators.push({fn:activator,title:this.title,dependencies:dependencies,getType:function(){return"[object Activator]"}})};
core.Ontology.prototype.getModel=function(behaviors){var Model=function(title){return this};var model=new Model;var allBehaviors=[];if(typeof behaviors!=="undefined"){allBehaviors=allBehaviors.concat(behaviors);for(var i=0;i<allBehaviors.length;i++)if(typeof allBehaviors[i].prototype!=="undefined"&&allBehaviors[i].prototype.initializer===true)allBehaviors[i](model)}for(var p in this){if(!this.hasOwnProperty(p))continue;if(typeof this[p]==="undefined"||this[p]._term==="undefined")continue;if(p.indexOf("_")===
0)continue;if(typeof this[p]._term!=="undefined"){model[p]=this[p]._term;for(var i=0;i<allBehaviors.length;i++)core.alsoBehavesLike(Object.getPrototypeOf(model[p]),allBehaviors[i].prototype)}else model[p]=this[p]}this._inferencer._rules.sort(function(a,b){return a._priority-b._priority});for(var i=0;i<this._inferencer._rules.length;i++){var rule=this._inferencer._rules[i];rule._fn.apply(model,rule._args)}for(var i=0;i<this._activators.length;i++)this._activators[i].fn(model);return model};var Inferencer=
function(){this._term={_value:null};this._rules=[];return this};var Rule=function(priority,fn,args){this._fn=fn;this._args=args;this._priority=priority;return this};Inferencer.prototype.isA=function(Proxy){this._rules.push(new Rule(1,isA,[this._term._value,Proxy._term._value]));return this};Inferencer.prototype.relatesTo=function(ProxyA,ProxyB){this._rules.push(new Rule(10,relatesTo,[this._term._value,ProxyA._term._value,ProxyB._term._value]));return this};Inferencer.prototype.hasDomain=function(Proxy){this._rules.push(new Rule(3,
hasDomain,[this._term._value,Proxy._term._value]));return this};Inferencer.prototype.hasRange=function(Proxy){this._rules.push(new Rule(2,hasRange,[this._term._value,Proxy._term._value]));return this};core.alsoBehavesLike(Proxy,Inferencer);var relatesTo=function(target,termA,termB){var Term=this[target];var TermA=this[termA];var TermB=this[termB];if(TermA._type===core.CONCEPT)core.error(new Error("Cannot define a relationship with a concept type: "+TermA._value));else if(TermA._type===null)TermA._type=
core.RELATIONSHIP;if(TermB._type===core.RELATIONSHIP)core.error(new Error("Cannot create a relationship with a relationship type: "+TermB._value));else if(TermB._type===null)TermB._type=core.CONCEPT;if(Term._type===core.RELATIONSHIP)core.error(new Error("Cannot create a relationship from a relationship type: "+Term._value));else if(Term._type===null)Term._type=core.CONCEPT;if(typeof Term[termA]==="undefined"){var ctor=Term.constructor;Term[termA]=new ctor(TermA)}if(typeof Term[termA][termB]==="undefined")Term[termA][termB]=
TermB;if(typeof Term[termB]==="undefined")Term[termB]=TermB;TermB.relate(Term[termA]);for(var field in TermB){if(!TermB.hasOwnProperty(field))continue;if(TermB[field].getType&&TermB[field].getType()==="[object Term]"){if(typeof Term[termA][field]==="undefined")Term[termA][field]=TermB[field];if(typeof Term[field]==="undefined")Term[field]=TermB[field];TermB[field].relate(Term[termA])}}};var isA=function(target,termA){var Term=this[target];var TermA=this[termA];if(TermA._type===core.RELATIONSHIP)core.error(new Error("Cannot apply isA to a relationship type: "+
TermA._value));else if(TermA._type===null)TermA._type=core.CONCEPT;if(Term._type===core.RELATIONSHIP)core.error(new Error("Cannot apply isA to a relationship type: "+Term._value));else if(Term._type===null)Term._type=core.CONCEPT;if(typeof TermA[target]==="undefined")TermA[target]=Term};var hasRange=function(target,termA){var Term=this[target];var TermA=this[termA];if(TermA._type===core.RELATIONSHIP)core.error(new Error("Cannot apply hasRange to a relationship type: "+TermA._value));else if(TermA._type===
null)TermA._type=core.CONCEPT;if(Term._type===core.CONCEPT)core.error(new Error("Cannot assign hasRange from a concept type: "+Term._value));else if(Term._type===null)Term._type=core.RELATIONSHIP;if(typeof Term[termA]==="undefined")Term[termA]=TermA;TermA.relate(Term);for(var field in TermA){if(!TermA.hasOwnProperty(field))continue;if(TermA[field].getType&&TermA[field].getType()==="[object Term]"){var term=TermA[field]._value;if(typeof Term[term]==="undefined")Term[term]=TermA[field];TermA[field].relate(Term)}}};
var hasDomain=function(target,termA){var Term=this[target];var TermA=this[termA];if(TermA._type===core.RELATIONSIP)core.error(new Error("Cannot apply hasRange to a relationship type: "+TermA._value));else if(TermA._type===null)TermA._type=core.CONCEPT;if(Term._type===core.CONCEPT)core.error(new Error("Cannot assign hasRange from a concept type: "+Term._value));else if(Term._type===null)Term._type=core.RELATIONSHIP;if(typeof TermA[target]==="undefined")TermA[target]=Term};core.typeMask=function(a,
b){var result=[];for(var p in b){if(!b.hasOwnProperty(p))continue;if(typeof a==="undefined"||typeof a[p]==="undefined")result.push(p);else if(typeof a[p]!=="undefined"&&typeof a[p]!==b[p])if(b[p]!==true)result.push(p)}return result.length===0?null:result};return core}(smallmachine||{});(function(sm){var o=new sm.Ontology("sm.properties");o.addTerm("property");o.addTerm("type");o.addTerm("ontology");o.addTerm("behavior");o.addTerm("hasMemberType");o.addTerm("hasMember");o.addTerm("Ontology");o.addTerm("Behavior");o.addTerm("Constructor");o.addTerm("Null");o.ontology.isA(o.property);o.behavior.isA(o.property);o.Ontology.isA(o.type);o.Behavior.isA(o.type);o.Constructor.isA(o.type);o.Null.isA(o.type);o.ontology.relatesTo(o.hasMemberType,o.Ontology);o.behavior.relatesTo(o.hasMemberType,
o.Behavior);o.ontology.relatesTo(o.hasMember,o.Null);o.behavior.relatesTo(o.hasMember,o.Null);var TypeExtender=function(){return this};TypeExtender.prototype.extendedBy=function(model,typeName){if(typeof typeName!=="undefined"&&typeof model==="function"){if(typeof this[typeName]!=="undefined")sm.alsoBehavesLike(this[typeName],model);else this[typeName]=model;if(typeof this[typeName].prototype.getType!=="function")this[typeName].prototype.getType=function(){return"[object "+typeName+"]"};if(typeof this[typeName].prototype.ofType!==
"function")this[typeName].prototype.ofType=function(type){if(typeof type.getType==="function")return this.getType()===type.getType();return this.getType()==="[object "+type+"]"};return}var propertyName=typeName||model.title;if(typeof propertyName==="undefined")sm.error(new Error("Cannot call extendedBy on the core ontology with an object that is missing the 'title' property without specifying a 'typeName'"));if(typeof this[propertyName]!=="undefined"){sm.alsoBehavesLike(this[propertyName],model);
return}var typeConcept=this.hasMemberType;if(typeof typeConcept==="undefined"||typeof typeConcept.getType==="undefined")sm.error(new Error("The specified concept does not have a valid 'hasMemberType' relationship with another concept"));var hasMemberType=sm[this._value][typeConcept._value];if(typeof hasMemberType==="undefined")sm.error(new Error("The specified type does not exist in the core object model: "+typeConcept._value));if(typeof model.getType!=="function")sm.error(new Error("The specified model is missing the getType function: "+
propertyName));var modelType=model.getType();var validModelType=false;for(var t in hasMemberType){if(!hasMemberType.hasOwnProperty(t))continue;if(typeof this[t].getType==="undefined")continue;var comparison="[object "+t+"]";if(comparison===modelType){this.hasMember[propertyName]=model;this[propertyName]=model;validModelType=true;break}}if(!validModelType)sm.error(new Error("Did not find an allowed model type for: "+modelType))};var Null=function(){this.title="Null";return this};Null.prototype.getType=
function(){return"[object Null]"};Null.prototype.ofType=function(type){if(type===null||type==="null"||type==="Null")return true;return false};sm.alsoBehavesLike(sm,o.getModel(TypeExtender));sm.ontology.extendedBy(new Null);sm.behavior.extendedBy(new Null);var AsyncResult=function(channel){this._channel=channel;return this};AsyncResult.prototype.publish=function(message,recipients){this._channel.publish(message,recipients);return this};sm.type.extendedBy(AsyncResult,"AsyncResult");var NamedValue=function(namespace,
key,value){if(typeof key==="undefined")sm.error(new Error("Parameter 'key' is required when instantiating the sm.NamedValue type"));this.namespace=namespace;this.key=key;this.value=value;return this};NamedValue.prototype.adapt=function(namespace,behaviors){this.namespace=namespace;if(typeof behaviors!=="undefined"){var allBehaviors=[].concat(behaviors);for(var i=0;i<allBehaviors.length;i++)sm.alsoBehavesLike(this,allBehaviors[i])}return this};sm.type.extendedBy(NamedValue,"NamedValue");var NamedValueCollection=
function(){this.title="NamedValueCollection";this._collection={};return this};NamedValueCollection.prototype.exists=function(namespaceOrNamedValue,key){var namespace=namespaceOrNamedValue;if(sm.typeMask(namespaceOrNamedValue,{namespace:true,key:true})===null){namespace=namespaceOrNamedValue.namespace;key=namespaceOrNamedValue.key}return typeof this._collection[namespace]!=="undefined"&&typeof this._collection[namespace][key]!=="undefined"};NamedValueCollection.prototype.add=function(namespaceOrNamedValue,
key,value){var namespace=namespaceOrNamedValue.namespace||namespaceOrNamedValue;var k=namespaceOrNamedValue.key||key;if(typeof this._collection[namespace]!=="undefined"&&this._collection[namespace][k]!=="undefined")sm.error(new Error("Cannot add a new entry to the collection (already exists): ["+namespace+"]"+k));this.modify(namespaceOrNamedValue,key,value);return this};NamedValueCollection.prototype.modify=function(namespaceOrNamedValue,key,value){var namespace=namespaceOrNamedValue.namespace||namespaceOrNamedValue;
var k=namespaceOrNamedValue.key||key;var v=namespaceOrNamedValue.value||value;if(typeof k==="undefined")sm.error(new Error("Must supply a valid key"));if(typeof v==="undefined")sm.error(new Error("Must supply a valid value"));if(typeof this._collection[namespace]==="undefined")this._collection[namespace]={};this._collection[namespace][k]=v;return this};NamedValueCollection.prototype.remove=function(namespace,key){if(typeof this._collection[namespace]==="undefined"||typeof this._collection[namespace][key]===
"undefined")return;delete this._collection[namespace][key];return this};NamedValueCollection.prototype.getValue=function(namespaceOrNamedValue,key){var namespace=namespaceOrNamedValue.namespace||namespaceOrNamedValue;var k=namespaceOrNamedValue.key||key;if(typeof this._collection[namespace]==="undefined"||this._collection[namespace][k]==="undefined")return;var value=this._collection[namespace][k];if(typeof value==="undefined")return value;else if(typeof namespaceOrNamedValue.setValue==="function")namespaceOrNamedValue.setValue(value);
else if(typeof namespaceOrNamedValue.value!=="undefined")namespaceOrNamedValue.value=value;return value};NamedValueCollection.prototype.ofType=function(type){return type==="NamedValueCollection"||typeof type.getType==="function"&&type.getType()===this.getType()};sm.type.extendedBy(NamedValueCollection,"NamedValueCollection")})(smallmachine);(function(sm){var ontology=new sm.Ontology("sm.channels");ontology.addTerm("thing");ontology.addTerm("user");ontology.addTerm("system");ontology.addTerm("action");ontology.addTerm("click");ontology.addTerm("doubleClick");ontology.addTerm("keyPress");ontology.addTerm("task");ontology.addTerm("initialize");ontology.addTerm("insert");ontology.addTerm("remove");ontology.addTerm("get");ontology.addTerm("set");ontology.addTerm("messenger");ontology.addTerm("success");ontology.addTerm("error");ontology.addTerm("performs");
ontology.addTerm("reactsTo");ontology.user.isA(ontology.thing);ontology.user.relatesTo(ontology.performs,ontology.action);ontology.system.isA(ontology.thing);ontology.system.relatesTo(ontology.performs,ontology.task);ontology.action.isA(ontology.thing);ontology.task.isA(ontology.thing);ontology.messenger.isA(ontology.thing);ontology.click.isA(ontology.action);ontology.doubleClick.isA(ontology.action);ontology.keyPress.isA(ontology.action);ontology.get.isA(ontology.task);ontology.set.isA(ontology.task);
ontology.success.isA(ontology.messenger);ontology.error.isA(ontology.messenger);ontology.initialize.isA(ontology.task);ontology.insert.isA(ontology.task);ontology.remove.isA(ontology.task);ontology.performs.hasRange(ontology.action).hasRange(ontology.task);ontology.reactsTo.hasRange(ontology.action).hasDomain(ontology.system);var activator=function(model){var jsonHelper=function(url,asyncResult){if(typeof jQuery!=="undefined")try{jQuery.ajax({dataType:"json",url:url,type:"GET",success:function(data,
textStatus,jqxhr){model.messenger.success.publish(textStatus);asyncResult.publish(new sm.type.NamedValue("sm.channels",url,data))},error:function(jqxhr,textStatus,thrown){sm.error(new Error(thrown))}})}catch(error){sm.error(new Error(error))}else{var xhr=window.XMLHttpRequest?new XMLHttpRequest:new ActiveXObject("MSXML2.XMLHTTP.3.0");xhr.onprogress=function(){};xhr.onerror={};xhr.onreadystatechange=function(){if(xhr.readyState<4)return;if(xhr.status==200){model.messenger.success.publish(xhr.statusText);
asyncResult.publish(new sm.type.NamedValue("sm.channels",url,JSON.parse(xhr.responseText)))}else sm.error(new Error(xhr.statusText))};xhr.open("GET",url,true);xhr.setRequestHeader("X-Requested-With","XMLHttpRequest");xhr.setRequestHeader("Content-type","application/json");xhr.send(null)}return asyncResult};var defaultStorageDelegate={update:function(message){if(typeof message.ofType==="function"&&message.ofType("NamedValue"))return function(message){model.memory.modify(message)};return false}};sm.alsoBehavesLike(model,
{memory:new sm.type.NamedValueCollection});model.set.subscribe({update:function(message){return defaultStorageDelegate}});var defaultValueDelegate={update:function(message){if(typeof message.ofType==="function")return function(message){model.memory.getValue(message)};return false}};model.get.subscribe({update:function(message){return defaultValueDelegate}});if(typeof model.initialize.addHelper==="function")model.initialize.addHelper("json",jsonHelper);if(typeof model.set.addHelper==="function")model.set.addHelper("config",
function(config){return new sm.type.NamedValue("sm.channels","config",config)});if(typeof model.get.addHelper==="function"){model.get.addHelper("json",jsonHelper);var Config=function(){this.namespace="sm.channels";this.key="config";return this};Config.prototype.setValue=function(value){sm.alsoBehavesLike(this,value)};sm.type.extendedBy(Config,"Config");model.get.addHelper("config",function(outVar){return outVar})}};ontology.registerActivator(activator);try{sm.ontology.extendedBy(ontology)}catch(error){sm.error(new Error("Could not extend the smallmachine.ontology property with the 'sm.channels' ontology: "+
error.message+"\n"+error.stack))}})(smallmachine);(function(sm){var Channel=function(value,type){this._value=value;this._type=type;return this};Channel.prototype.forward=function(message,recipients){if(this._value!=null)recipients[this._value]=true;for(var property in this){if(!this.hasOwnProperty(property))continue;if(typeof this[property]==="function"||property.indexOf("_")===0)continue;if(recipients[property]===true)continue;if(typeof this[property].publish==="function"){recipients[property]=true;this[property].publish(message,recipients)}}if(typeof this._relatesTo!==
"undefined")for(var i=0;i<this._relatesTo.length;i++){if(typeof this._relatesTo[i]._subscribers==="undefined")continue;this.notify(message,this._relatesTo[i]._subscribers)}};Channel.prototype.unsubscribe=function(subscriberId){if(typeof this._subscribers!=="undefined")delete this._subscribers[subscriberId]};Channel.prototype.subscribe=function(subscriber){if(typeof this._subscribers==="undefined")this._subscribers={};var subscriberId=sm.getGuid();if(typeof subscriber==="function")this._subscribers[subscriberId]=
{update:subscriber,lifetime:1};else{if(typeof subscriber.lifecycle==="undefined")subscriber.lifetime=1;this._subscribers[subscriberId]=subscriber}return subscriberId};Channel.prototype.notify=function(message,subscribers){var authoritative=false,delegates={},delegateCount=0,deference=[];for(var id in subscribers){var response=subscribers[id].update(message);if(typeof subscribers[id]==="undefined")continue;if(subscribers[id].lifetime<=0)this.unsubscribe(id);if(response===true)authoritative=true;else if(typeof response===
"function"){deference.push(response);authoritative=true}else if(response&&typeof response.update==="function"){delegates[sm.getGuid()]=response;delegateCount++}}if(authoritative){var continuedAuthority=false;for(var i=0;i<deference.length;i++){var deferredResult=deference[i](message);if(!deferredResult===false)continuedAuthority=true}if(continuedAuthority===false)authoritative=false}if(authoritative==false&&delegateCount>0)this.notify(message,delegates)};Channel.prototype.publish=function(message,
recipients){var recipients=recipients||{};if(typeof message==="function"){var newResult=message(new sm.type.AsyncResult(this));message=newResult;if(typeof message!=="undefined"&&typeof message.getType==="function"&&message.getType()==="[object AsyncResult]")return this}if(typeof this._subscribers==="undefined"){this.forward(message,recipients);return this}this.notify(message,this._subscribers);this.forward(message,recipients);return this};Channel.prototype.addHelper=function(name,helper){var method=
Channel.prototype.publish;var context=this;this[name]=function(){var args=[];for(var i=0;i<arguments.length;i++)args.push(arguments[i]);return method.apply(context,[function(asyncResult){args.push(asyncResult);return helper.apply(context,args)}])};return this};Channel.prototype.getType=function(){return"[object Channel]"};Channel.prototype.ofType=function(type){return type==="Channel"||typeof type.getType==="function"&&type.getType()===this.getType()};sm.behavior.extendedBy(Channel,"Channel")})(smallmachine);(function(sm,$){var Extension=function(a){if(typeof $.fn!=="undefined")$.extend({"sm":a});return this};Extension.prototype.initializer=true;sm.behavior.extendedBy(Extension,"Extension")})(smallmachine,jQuery||{});(function(sm){var ontology=new sm.Ontology("sm.nodes");ontology.addTerm("task");ontology.addTerm("insert");ontology.addTerm("connect");ontology.addTerm("set");ontology.addTerm("get");ontology.addTerm("paint");ontology.addTerm("paintNodes");ontology.paint.isA(ontology.task);ontology.insert.isA(ontology.task);ontology.connect.isA(ontology.task);ontology.set.isA(ontology.task);ontology.get.isA(ontology.task);ontology.paintNodes.isA(ontology.paint);var Node=function(item,paper,shapeAttr,shapeLabelAttr){this.id=
item.id||sm.getGuid();this.width=parseFloat(item.width)||50;this.height=parseFloat(item.height)||50;this.y=parseFloat(item.y);this.x=parseFloat(item.x);this.edges=item.edges||[];this.label=item.label||this.id;this.paper=paper;this.shapeAttr=shapeAttr;this.shapeLabelAttr=shapeLabelAttr;this.data={};return this};Node.prototype.update=function(message){var element=this.paper.circle(this.x,this.y,this.width/2,this.height/2);element.id=this.id;if(typeof this.shapeAttr==="function")this.shapeAttr(element,
this);else element.attr(this.shapeAttr);var shapeText=this.paper.text(this.x,this.y,this.label);if(typeof this.shapeLabelAttr==="function")this.shapeLabelAttr(shapeText,this);else shapeText.attr(this.shapeLabelAttr);return true};var Edge=function(a,b,index,paper,lineAttr,edgeLabelAttr){this.id1=a.id;this.id2=b.id;this.r1=a.width/2;this.r2=b.width/2;this.x1=parseFloat(a.x);this.y1=parseFloat(a.y);this.x2=parseFloat(b.x);this.y2=parseFloat(b.y);this.label=a.edges[index].label||"";this.paper=paper;this.lineAttr=
lineAttr;this.edgeLabelAttr=edgeLabelAttr;this.data={};return this};Edge.prototype.update=function(message){var d=Math.sqrt(Math.pow(this.x2-this.x1,2)+Math.pow(this.y2-this.y1,2));var r1=this.r1/d;var r2=(d-this.r2)/d;var x3=r1*this.x2+(1-r1)*this.x1;var y3=r1*this.y2+(1-r1)*this.y1;var x4=r2*this.x2+(1-r2)*this.x1;var y4=r2*this.y2+(1-r2)*this.y1;var line=this.paper.path(["M",x3,y3,"L",x4,y4]);if(typeof this.lineAttr==="function")this.lineAttr(line,this);else line.attr(this.lineAttr);var a=this.x1-
this.x2;var b=this.y1-this.y2;var cX=(this.x1+this.x2)/2;var cY=(this.y1+this.y2)/2;var textLabel=this.paper.text(cX,cY,this.label);if(typeof this.edgeLabelAttr==="function")this.edgeLabelAttr(textLabel,this);else textLabel.attr(this.edgeLabelAttr);var dX=this.x2-this.x1;var dY=this.y2-this.y1;var angle=Math.atan2(dY,dX)*180/Math.PI;if(angle>90)textLabel.transform("t-6,-6r"+(angle+180));else textLabel.transform("t6,-6r"+angle);return true};var getObjectNode=function(message,id){for(var i=0;i<message.length;i++)if(message[i].id===
id)return message[i];return null};var PaintDelegate=function(model){this._model=model;this.handleError=function(Error){model.messenger.error.publish(Error)};return this};PaintDelegate.prototype.update=function(message){var settings=new sm.type.Config;this._model.system.get.config(settings);var json=message.value;if(typeof json==="undefined")return false;if(sm.typeMask(json,{length:true,sort:"function"})!==null)sm.error(new Error("Cannot determine the JSON type; expecting an array (or comparable object) of node objects but received "+
json),this);var paper=new sm.type.NamedValue("sm.raphaeljs","paper",null);this._model.get.publish(paper);paper.value.clear();var edges=[];for(var i=0;i<json.length;i++){var node=new Node(json[i],paper.value,settings.shapeAttr||{},settings.shapeLabelAttr||{});for(var j=0;j<node.edges.length;j++){var objectNode=getObjectNode(json,node.edges[j].id);if(objectNode!==null&&typeof objectNode.x!="undefined"&&typeof objectNode.y!=="undefined"){var edge=new Edge(node,objectNode,j,paper.value,settings.lineAttr||
{},settings.edgeLabelAttr||{});this._model.connect.publish(edge)}}this._model.insert.publish(node)}};var activator=function(model){var delegate=new PaintDelegate(model);model.paintNodes.subscribe(function(message){return delegate});model.connect.subscribe(function(message){return message});model.insert.subscribe(function(message){return message})};ontology.registerActivator(activator,["sm.channels","sm.raphaeljs"]);try{sm.ontology.extendedBy(ontology)}catch(error){sm.error(new Error("Could not extend the smallmachine.ontology property with the 'sm.nodes' ontology: "+
error.message+"\n"+error.stack))}})(smallmachine);(function(sm,$,raphael){var ontology=new sm.Ontology("sm.flowchart");ontology.addTerm("paint");ontology.addTerm("get");var TOP_MARGIN=50;var SIBLING_MARGIN=40;var SECTOR_MARGIN=80;var GROUP_MARGIN=40;var FIXED_EDGE_LENGTH=false;var Sector=function(previousSector,layoutWidth,layoutHeight,parentId){if(typeof previousSector==="undefined"){this.y=TOP_MARGIN;this.previousSector={y:0,height:0}}else{this.previousSector=previousSector;this.y=this.previousSector.y+this.previousSector.height+SECTOR_MARGIN}this.height=
0;this.x=layoutWidth*0.5;this.width=0;this.layoutWidth=layoutWidth;this.lastNodeGroup=null;this.nodeGroups=0;this.nodes=[];return this};Sector.prototype.add=function(node,nodeGroup){var nodeWidth=parseFloat(node.width);if(this.lastNodeGroup===null)this.lastNodeGroup=nodeGroup;else if(this.lastNodeGroup!=nodeGroup){this.nodeGroups++;this.lastNodeGroup=nodeGroup}this.width=this.width+SIBLING_MARGIN+nodeWidth;var nodeHeight=parseFloat(node.height);this.height=this.height<nodeHeight?nodeHeight:this.height;
this.x=this.x-SIBLING_MARGIN*0.5-nodeWidth*0.5;if(!FIXED_EDGE_LENGTH){var maxEdgeLabelLength=0;for(var i=0;i<node.edges.length;i++)if(node.edges[i].label.length>maxEdgeLabelLength)maxEdgeLabelLength=node.edges[i].label.length;if(maxEdgeLabelLength>6){var newHeight=this.height+(maxEdgeLabelLength-6)*10;if(newHeight>this.height)this.height=newHeight}}this.nodes.push({node:node,nodeGroup:nodeGroup})};Sector.prototype.finalize=function(newWidth){if(typeof newWidth==="undefined"||newWidth<0)newWidth=0;
var widthAdjustment=newWidth*0.5,lastNodeGroup=null,groupLevel=0;for(var i=0;i<this.nodes.length;i++){if(lastNodeGroup===null)lastNodeGroup=this.nodes[i].nodeGroup;else if(this.nodes[i].nodeGroup!=lastNodeGroup){groupLevel++;lastNodeGroup=this.nodes[i].nodeGroup}var adjustLeft=SIBLING_MARGIN*i+GROUP_MARGIN*groupLevel;this.nodes[i].node.x=this.x+adjustLeft+this.nodes[i].node.width*i+widthAdjustment;this.nodes[i].node.y=this.y}};var Layout=function(paper){this.paper=paper;this.width=parseFloat(paper.width);
this.height=parseFloat(paper.height);this.finalWidth=this.width;this.finalHeight=this.height;this.sectors=[];return this};Layout.prototype.addToSector=function(node,sectorId,parentId){var sector=this.sectors[sectorId];if(typeof sector==="undefined"){sector=new Sector(this.sectors[sectorId-1],this.width,this.height,parentId);this.sectors[sectorId]=sector}sector.add(node,parentId)};Layout.prototype.finalize=function(){for(var i=0;i<this.sectors.length;i++){this.sectors[i].width=this.sectors[i].width+
this.sectors[i].nodeGroups*GROUP_MARGIN;if(this.sectors[i].width>this.finalWidth)this.finalWidth=this.sectors[i].width}for(var i=0;i<this.sectors.length;i++)this.sectors[i].finalize(this.finalWidth-this.width)};var format=function(nodes,root,layout){var nodeIndex={};var sectorId=0;var rootNode=nodes[0];for(var i=0;i<nodes.length;i++){nodeIndex[nodes[i].id]=i;if(nodes[i].id===root)rootNode=nodes[i]}setNodeCoords(rootNode,nodes,nodeIndex,layout,sectorId,rootNode.id);layout.finalize()};var setNodeCoords=
function(current,nodes,index,layout,sectorId,parentId){layout.addToSector(current,sectorId++,parentId);for(var i=0;i<current.edges.length;i++){var id=current.edges[i].id;var nodeIndex=index[id];var next=nodes[nodeIndex];setNodeCoords(next,nodes,index,layout,sectorId,current.id)}};var activator=function(model){model.paint.subscribe(function(message){if(sm.typeMask(message.value,{length:true,sort:"function"})===null)return function(mesage){var json=message.value;var root=new sm.type.NamedValue("sm.flowchart",
"root",null);model.get.publish(root);var paper=new sm.type.NamedValue("sm.raphaeljs","paper",null);model.get.publish(paper);var layout=new Layout(paper.value);format(json,root.value,layout);paper.value.setSize(layout.finalWidth*1.05,layout.finalHeight*1.05);return false}})};ontology.registerActivator(activator,["sm.channels","sm.nodes","sm.raphaeljs"]);try{sm.ontology.extendedBy(ontology)}catch(error){sm.error(new Error("Could not extend the smallmachine.ontology property with the 'sm.nodes' ontology: "+
error.message+"\n"+error.stack))}})(smallmachine,jQuery,Raphael);(function(sm,raphael){var TITLE="sm.raphaeljs";var ontology=new sm.Ontology(TITLE);ontology.addTerm("set");var activator=function(model){var percentagePattern=/^(\d+)%?$/;var svgHelper=function(elementId,width,height,asyncResult){var element=document.getElementById(elementId+"");if(typeof element==="undefined"||!element)throw new Error("The specified element ID could not be found: "+elementId);var w=window,d=document,e=d.documentElement,g=d.getElementsByTagName("body")[0],x=w.innerWidth||e.clientWidth||
g.clientWidth,y=w.innerHeight||e.clientHeight||g.clientHeight;var validWidth=width;if(width===null)validWidth=element.offsetWidth||x;var validWidthMatch=percentagePattern.exec(validWidth+"");if(!validWidthMatch)throw new Error("The specified value for width is invalid (number, percentage or null allowed): "+width);if(typeof validWidth.indexOf==="function"&&validWidth.indexOf("%")>0){var elementWidth=element.offsetWidth||x;validWidth=elementWidth*100/parseFloat(validWidthMatch[0])}var validHeight=
height;if(height==null)validHeight=element.offsetHeight||y;var validHeightMatch=percentagePattern.exec(validHeight+"");if(!validHeightMatch)throw new Error("The specified value for height is invalid (number, percentage or null allowed): "+height);if(typeof validHeight.indexOf==="function"&&validHeight.indexOf("%")>0){var elementHeight=element.offsetHeight||y;validHeight=elementHeight*parseFloat(validHeightMatch[0])/100}var paper=raphael(elementId,validWidth,validHeight);return new sm.type.NamedValue(TITLE,
"paper",paper)};if(typeof model.set.addHelper==="function")model.set.addHelper("svg",svgHelper)};ontology.registerActivator(activator,["sm.channels"]);try{sm.ontology.extendedBy(ontology)}catch(error){throw new Error("Could not extend the smallmachine.ontology property with the 'sm.raphaeljs' ontology: "+error.message+"\n"+error.stack);}})(smallmachine,Raphael);(function(sm,sammy){var ontology=new sm.Ontology("sm.sammyjs");ontology.addTerm("initialize");var Sammy=function(id,callback){this._id=id;this._callback=callback;return this};Sammy.prototype.getType=function(){return"[object Sammy]"};Sammy.prototype.ofType=function(type){return type==="Sammy"||typeof type.getType==="function"&&type.getType()===this.getType()};sm.type.extendedBy(Sammy,"Sammy");var sammyInitializerDelegate={update:function(message){if(typeof message.ofType==="function"&&message.ofType("Sammy"))return function(message){sammy("#"+
message._id,message._callback).run("#/")};return false}};var activator=function(model){model.initialize.subscribe({update:function(message){return sammyInitializerDelegate}})};ontology.registerActivator(activator,["sm.channels"]);try{sm.ontology.extendedBy(ontology)}catch(error){throw new Error("Could not extend the smallmachine.ontology property with the 'sm.sammyjs' ontology: "+error.message+"\n"+error.stack);}})(smallmachine,Sammy);
