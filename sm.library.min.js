var smallmachine=function(e){"function"!==typeof Object.getPrototypeOf&&(Object.getPrototypeOf="object"===typeof"test".__proto__?function(b){return b.__proto__}:function(b){return b.constructor.prototype});var a=function(b,f){for(var c=0;c<f.dependencies.length;c++){for(var l=!1,e=0;e<b.length;e++)if(f.dependencies[c]==b[e].title){l=!0;break}if(!l)return f.dependencies[c]}return null};e=function(b,f){"undefined"===typeof b&&e.error(Error("Missing required parameter for smallmachine constructor: one or more instances of type [object Ontology]"));
for(var c=[].concat(b),l="",d=0;d<c.length;d++)"function"!==typeof c[d].ofType||!c[d].ofType("Ontology")?"undefined"!==typeof e.ontology[c[d]]&&(l=l+c[d]+",",c[d]=e.ontology[c[d]]):l+=c[d].title;l=new e.Ontology(l.substring(0,l.length-1));for(d=0;d<c.length;d++){for(var h in c[d])c[d].hasOwnProperty(h)&&"function"===typeof c[d][h].ofType&&c[d][h].ofType("Proxy")&&l.addTerm(c[d][h]._term._value);for(var g=0;g<c[d]._inferencer._rules.length;g++)l._inferencer._rules.push(c[d]._inferencer._rules[g]);
for(g=0;g<c[d]._activators.length;g++){var k=a(c,c[d]._activators[g]);null!==k&&e.error(Error("Cannot wire-in ontology with missing activator dependency on '"+k+"'"));l.registerActivator(c[d]._activators[g]);l._activators.sort(function(b,c){if(b.title==c.title)return 0;for(var f=0;f<b.dependencies.length;f++)if(c.title==b.dependencies[f])return 1;for(f=0;f<c.dependencies.length;f++)if(b.title==c.dependencies[f])return-1;return 0})}}return l.getModel(f)};e.alsoBehavesLike=function(b,f){("undefined"===
typeof b||"undefined"===typeof f)&&e.error(Error("Cannot mixin with an undefined object"));for(var c in f)if(f.hasOwnProperty(c)&&!(0==c.indexOf("_")||"initializer"===c))if("undefined"!==typeof b[c]){if("undefined"!==typeof f[c].prototype){if("undefined"!==typeof f[c].prototype.initializer&&!0==f[c].prototype.initializer)continue;var d="undefined"!==typeof f[c].prototype.virtual?f[c].prototype.virtual:!1}var a="undefined"!==typeof b[c].prototype?b[c].prototype.virtual:!1;if(!a||!d)a&&(b[c]=f[c])}else b[c]=
f[c];"undefined"!==typeof f.prototype&&("undefined"===typeof b.prototype&&(b.prototype={}),e.alsoBehavesLike(b.prototype,f.prototype))};e.error=function(b,f){if("undefined"!==typeof f&&"function"===typeof f.handleError)f.handleError(b);else if("function"===typeof e.handleError)e.handleError(b);else throw b;};e.CONCEPT="concept";e.RELATIONSHIP="relationship";var n=function(b,f){this._term=b;this._rules=f._rules;return this};n.prototype.getType=function(){return"[object Proxy]"};n.prototype.ofType=
function(b){return"Proxy"===b||"function"===typeof b.getType&&b.getType()===this.getType()};var m=function(){return this};m.prototype.relate=function(b){"undefined"===typeof this._relatesTo&&(this._relatesTo=[]);for(var f=!1,c=0;c<this._relatesTo.length;c++)if(this._relatesTo[c]._id==b._id){f=!0;break}f||this._relatesTo.push(b)};m.prototype.getType=function(){return"[object Term]"};m.prototype.ofType=function(b){return"Term"===b||"function"===typeof b.getType&&b.getType()===this.getType()};e.Behavior=
function(b){this.title=b;return this};e.Ontology=function(b){this.title=b;this._inferencer=new d;this._activators=[];this._term=function(b){this._id=function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(b){var f=16*Math.random()|0;return("x"==b?f:f&3|8).toString(16)})}();"undefined"!==typeof b._value&&"undefined"!==typeof b._type?(this._value=b._value,this._type=b._type):(this._value=b,this._type=null);return this};return this};e.Ontology.prototype.getType=function(){return"[object Ontology]"};
e.Ontology.prototype.addTerm=function(b){if("undefined"!==typeof this[b])return this;var f=this._term;f.prototype.relate=m.prototype.relate;f.prototype.getType=m.prototype.getType;f.prototype.ofType=m.prototype.ofType;f=new f(b);this[b]=new n(f,this._inferencer);return this};e.Ontology.prototype.registerActivator=function(b,f){"undefined"===typeof f&&(f=[]);"function"!==typeof b&&"function"===typeof b.getType&&"[object Activator]"===b.getType()?this._activators.push(b):this._activators.push({fn:b,
title:this.title,dependencies:f,getType:function(){return"[object Activator]"}})};e.Ontology.prototype.getModel=function(b){var f=new function(b){return this},c=[];if("undefined"!==typeof b){c=c.concat(b);for(b=0;b<c.length;b++)if("undefined"!==typeof c[b].prototype&&!0===c[b].prototype.initializer)c[b](f)}for(var d in this)if(this.hasOwnProperty(d)&&!("undefined"===typeof this[d]||"undefined"===this[d]._term)&&0!==d.indexOf("_"))if("undefined"!==typeof this[d]._term){f[d]=this[d]._term;for(b=0;b<
c.length;b++)e.alsoBehavesLike(Object.getPrototypeOf(f[d]),c[b].prototype)}else f[d]=this[d];this._inferencer._rules.sort(function(b,c){return b._priority-c._priority});for(b=0;b<this._inferencer._rules.length;b++)c=this._inferencer._rules[b],c._fn.apply(f,c._args);for(b=0;b<this._activators.length;b++)this._activators[b].fn(f);return f};var d=function(){this._term={_value:null};this._rules=[];return this},h=function(b,d,c){this._fn=d;this._args=c;this._priority=b;return this};d.prototype.isA=function(b){this._rules.push(new h(1,
k,[this._term._value,b._term._value]));return this};d.prototype.relatesTo=function(b,d){this._rules.push(new h(10,g,[this._term._value,b._term._value,d._term._value]));return this};d.prototype.hasDomain=function(b){this._rules.push(new h(3,p,[this._term._value,b._term._value]));return this};d.prototype.hasRange=function(b){this._rules.push(new h(2,q,[this._term._value,b._term._value]));return this};e.alsoBehavesLike(n,d);var g=function(b,d,c){b=this[b];var l=this[d],a=this[c];l._type===e.CONCEPT?
e.error(Error("Cannot define a relationship with a concept type: "+l._value)):null===l._type&&(l._type=e.RELATIONSHIP);a._type===e.RELATIONSHIP?e.error(Error("Cannot create a relationship with a relationship type: "+a._value)):null===a._type&&(a._type=e.CONCEPT);b._type===e.RELATIONSHIP?e.error(Error("Cannot create a relationship from a relationship type: "+b._value)):null===b._type&&(b._type=e.CONCEPT);"undefined"===typeof b[d]&&(b[d]=new b.constructor(l));"undefined"===typeof b[d][c]&&(b[d][c]=
a);"undefined"===typeof b[c]&&(b[c]=a);a.relate(b[d]);for(var h in a)a.hasOwnProperty(h)&&(a[h].getType&&"[object Term]"===a[h].getType())&&("undefined"===typeof b[d][h]&&(b[d][h]=a[h]),"undefined"===typeof b[h]&&(b[h]=a[h]),a[h].relate(b[d]))},k=function(b,d){var c=this[b],a=this[d];a._type===e.RELATIONSHIP?e.error(Error("Cannot apply isA to a relationship type: "+a._value)):null===a._type&&(a._type=e.CONCEPT);c._type===e.RELATIONSHIP?e.error(Error("Cannot apply isA to a relationship type: "+c._value)):
null===c._type&&(c._type=e.CONCEPT);"undefined"===typeof a[b]&&(a[b]=c)},q=function(b,d){var c=this[b],a=this[d];a._type===e.RELATIONSHIP?e.error(Error("Cannot apply hasRange to a relationship type: "+a._value)):null===a._type&&(a._type=e.CONCEPT);c._type===e.CONCEPT?e.error(Error("Cannot assign hasRange from a concept type: "+c._value)):null===c._type&&(c._type=e.RELATIONSHIP);"undefined"===typeof c[d]&&(c[d]=a);a.relate(c);for(var h in a)if(a.hasOwnProperty(h)&&a[h].getType&&"[object Term]"===a[h].getType()){var g=
a[h]._value;"undefined"===typeof c[g]&&(c[g]=a[h]);a[h].relate(c)}},p=function(b,d){var c=this[b],a=this[d];a._type===e.RELATIONSIP?e.error(Error("Cannot apply hasRange to a relationship type: "+a._value)):null===a._type&&(a._type=e.CONCEPT);c._type===e.CONCEPT?e.error(Error("Cannot assign hasRange from a concept type: "+c._value)):null===c._type&&(c._type=e.RELATIONSHIP);"undefined"===typeof a[b]&&(a[b]=c)};e.typeMask=function(b,d){var c=[],a;for(a in d)d.hasOwnProperty(a)&&(!0===d[a]?"undefined"===
typeof b[a]&&c.push(a):"undefinedf"!==typeof b[a]&&typeof b[a]!==d[a]&&c.push(a));return 0===c.length?null:c};return e}(smallmachine||{});(function(e){var a=new e.Ontology("sm.properties");a.addTerm("property");a.addTerm("type");a.addTerm("ontology");a.addTerm("behavior");a.addTerm("hasMemberType");a.addTerm("hasMember");a.addTerm("Ontology");a.addTerm("Behavior");a.addTerm("Constructor");a.addTerm("Null");a.ontology.isA(a.property);a.behavior.isA(a.property);a.Ontology.isA(a.type);a.Behavior.isA(a.type);a.Constructor.isA(a.type);a.Null.isA(a.type);a.ontology.relatesTo(a.hasMemberType,a.Ontology);a.behavior.relatesTo(a.hasMemberType,
a.Behavior);a.ontology.relatesTo(a.hasMember,a.Null);a.behavior.relatesTo(a.hasMember,a.Null);var n=function(){return this};n.prototype.extendedBy=function(d,a){if("undefined"!==typeof a&&"function"===typeof d)"undefined"!==typeof this[a]?e.alsoBehavesLike(this[a],d):this[a]=d,"function"!==typeof this[a].prototype.getType&&(this[a].prototype.getType=function(){return"[object "+a+"]"}),"function"!==typeof this[a].prototype.ofType&&(this[a].prototype.ofType=function(b){return"function"===typeof b.getType?
this.getType()===b.getType():this.getType()==="[object "+b+"]"});else{var g=a||d.title;"undefined"===typeof g&&e.error(Error("Cannot call extendedBy on the core ontology with an object that is missing the 'title' property without specifying a 'typeName'"));if("undefined"!==typeof this[g])e.alsoBehavesLike(this[g],d);else{var k=this.hasMemberType;("undefined"===typeof k||"undefined"===typeof k.getType)&&e.error(Error("The specified concept does not have a valid 'hasMemberType' relationship with another concept"));
var m=e[this._value][k._value];"undefined"===typeof m&&e.error(Error("The specified type does not exist in the core object model: "+k._value));"function"!==typeof d.getType&&e.error(Error("The specified model is missing the getType function: "+g));var k=d.getType(),n=!1,b;for(b in m)if(m.hasOwnProperty(b)&&"undefined"!==typeof this[b].getType&&"[object "+b+"]"===k){this.hasMember[g]=d;this[g]=d;n=!0;break}n||e.error(Error("Did not find an allowed model type for: "+k))}}};var m=function(){this.title=
"Null";return this};m.prototype.getType=function(){return"[object Null]"};m.prototype.ofType=function(d){return null===d||"null"===d||"Null"===d?!0:!1};e.alsoBehavesLike(e,a.getModel(n));e.ontology.extendedBy(new m);e.behavior.extendedBy(new m);a=function(d){this._channel=d;return this};a.prototype.publish=function(d,a){this._channel.publish(d,a);return this};e.type.extendedBy(a,"AsyncResult");e.type.extendedBy(function(d,a,g){"undefined"===typeof a&&e.error(Error("Parameter 'key' is required when instantiating the sm.NamedValue type"));
this.namespace=d;this.key=a;this.value=g;return this},"NamedValue");a=function(){this.title="NamedValueCollection";this._collection={};return this};a.prototype.exists=function(d,a){var g=d;null===e.typeMask(d,{namespace:!0,key:!0})&&(g=d.namespace,a=d.key);return"undefined"!==typeof this._collection[g]&&"undefined"!==typeof this._collection[g][a]};a.prototype.add=function(a,h,g){var k=a.namespace||a,m=a.key||h;"undefined"!==typeof this._collection[k]&&"undefined"!==this._collection[k][m]&&e.error(Error("Cannot add a new entry to the collection (already exists): ["+
k+"]"+m));this.modify(a,h,g);return this};a.prototype.modify=function(a,h,g){var k=a.namespace||a;h=a.key||h;a=a.value||g;"undefined"===typeof h&&e.error(Error("Must supply a valid key"));"undefined"===typeof a&&e.error(Error("Must supply a valid value"));"undefined"===typeof this._collection[k]&&(this._collection[k]={});this._collection[k][h]=a;return this};a.prototype.remove=function(a,e){if(!("undefined"===typeof this._collection[a]||"undefined"===typeof this._collection[a][e]))return delete this._collection[a][e],
this};a.prototype.getValue=function(a,e){var g=a.namespace||a,k=a.key||e;if(!("undefined"===typeof this._collection[g]||"undefined"===this._collection[g][k]))return g=this._collection[g][k],"undefined"!==typeof g&&("function"===typeof a.setValue?a.setValue(g):"undefined"!==typeof a.value&&(a.value=g)),g};a.prototype.ofType=function(a){return"NamedValueCollection"===a||"function"===typeof a.getType&&a.getType()===this.getType()};e.type.extendedBy(a,"NamedValueCollection")})(smallmachine);
