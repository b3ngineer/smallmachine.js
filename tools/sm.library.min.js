var smallmachine=function(c){"function"!==typeof Object.getPrototypeOf&&(Object.getPrototypeOf="object"===typeof"test".__proto__?function(e){return e.__proto__}:function(e){return e.constructor.prototype});var b=function(e,p){for(var d=0;d<p.dependencies.length;d++){for(var c=!1,a=0;a<e.length;a++)if(p.dependencies[d]==e[a].title){c=!0;break}if(!c)return p.dependencies[d]}return null};c=function(e,p){"undefined"===typeof e&&c.error(Error("Missing required parameter for smallmachine constructor: one or more instances of type [object Ontology]"));
for(var d=[].concat(e),f="",a=0;a<d.length;a++)"function"!==typeof d[a].ofType||!d[a].ofType("Ontology")?"undefined"!==typeof c.ontology[d[a]]&&(f=f+d[a]+",",d[a]=c.ontology[d[a]]):f+=d[a].title;f=new c.Ontology(f.substring(0,f.length-1));for(a=0;a<d.length;a++){for(var h in d[a])d[a].hasOwnProperty(h)&&"function"===typeof d[a][h].ofType&&d[a][h].ofType("Proxy")&&f.addTerm(d[a][h]._term._value);for(var g=0;g<d[a]._inferencer._rules.length;g++)f._inferencer._rules.push(d[a]._inferencer._rules[g]);
for(g=0;g<d[a]._activators.length;g++){var k=b(d,d[a]._activators[g]);null!==k&&c.error(Error("Cannot wire-in ontology with missing activator dependency on '"+k+"'"));f.registerActivator(d[a]._activators[g]);f._activators.sort(function(e,d){if(e.title==d.title)return 0;for(var a=0;a<e.dependencies.length;a++)if(d.title==e.dependencies[a])return 1;for(a=0;a<d.dependencies.length;a++)if(e.title==d.dependencies[a])return-1;return 0})}}return f.getModel(p)};c.alsoBehavesLike=function(e,a){("undefined"===
typeof e||"undefined"===typeof a)&&c.error(Error("Cannot mixin with an undefined object"));for(var d in a)if(a.hasOwnProperty(d)&&!(0==d.indexOf("_")||"initializer"===d))if("undefined"!==typeof e[d]){if("undefined"!==typeof a[d].prototype){if("undefined"!==typeof a[d].prototype.initializer&&!0==a[d].prototype.initializer)continue;var f="undefined"!==typeof a[d].prototype.virtual?a[d].prototype.virtual:!1}var b="undefined"!==typeof e[d].prototype?e[d].prototype.virtual:!1;if(!b||!f)b&&(e[d]=a[d])}else e[d]=
a[d];"undefined"!==typeof a.prototype&&("undefined"===typeof e.prototype&&(e.prototype={}),c.alsoBehavesLike(e.prototype,a.prototype))};c.error=function(e,a){if("undefined"!==typeof a&&"function"===typeof a.handleError)a.handleError(e);else if("function"===typeof c.handleError)c.handleError(e);else throw e;};var m=function(e){var a=16*Math.random()|0;return("x"==e?a:a&3|8).toString(16)};c.getGuid=function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,m)};c.CONCEPT="concept";c.RELATIONSHIP=
"relationship";var l=function(e,a){this._term=e;this._rules=a._rules;return this};l.prototype.getType=function(){return"[object Proxy]"};l.prototype.ofType=function(e){return"Proxy"===e||"function"===typeof e.getType&&e.getType()===this.getType()};var a=function(){return this};a.prototype.relate=function(e){"undefined"===typeof this._relatesTo&&(this._relatesTo=[]);for(var a=!1,d=0;d<this._relatesTo.length;d++)if(this._relatesTo[d]._id==e._id){a=!0;break}a||this._relatesTo.push(e)};a.prototype.getType=
function(){return"[object Term]"};a.prototype.ofType=function(e){return"Term"===e||"function"===typeof e.getType&&e.getType()===this.getType()};c.Behavior=function(e){this.title=e;return this};c.Ontology=function(e){this.title=e;this._inferencer=new h;this._activators=[];this._term=function(e){this._id=function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(e){var a=16*Math.random()|0;return("x"==e?a:a&3|8).toString(16)})}();"undefined"!==typeof e._value&&"undefined"!==typeof e._type?
(this._value=e._value,this._type=e._type):(this._value=e,this._type=null);return this};return this};c.Ontology.prototype.getType=function(){return"[object Ontology]"};c.Ontology.prototype.addTerm=function(e){if("undefined"!==typeof this[e])return this;var c=this._term;c.prototype.relate=a.prototype.relate;c.prototype.getType=a.prototype.getType;c.prototype.ofType=a.prototype.ofType;c=new c(e);this[e]=new l(c,this._inferencer);return this};c.Ontology.prototype.registerActivator=function(e,a){"undefined"===
typeof a&&(a=[]);"function"!==typeof e&&"function"===typeof e.getType&&"[object Activator]"===e.getType()?this._activators.push(e):this._activators.push({fn:e,title:this.title,dependencies:a,getType:function(){return"[object Activator]"}})};c.Ontology.prototype.getModel=function(e){var a=new function(a){return this},d=[];if("undefined"!==typeof e){d=d.concat(e);for(e=0;e<d.length;e++)if("undefined"===typeof d[e]&&c.error("One or more [behaviors] arguments were supplied to the smallmachine constructor that are 'undefined'; error creating object model"),
"undefined"!==typeof d[e].prototype&&!0===d[e].prototype.initializer)d[e](a)}for(var f in this)if(this.hasOwnProperty(f)&&!("undefined"===typeof this[f]||"undefined"===this[f]._term)&&0!==f.indexOf("_"))if("undefined"!==typeof this[f]._term){a[f]=this[f]._term;for(e=0;e<d.length;e++)c.alsoBehavesLike(Object.getPrototypeOf(a[f]),d[e].prototype)}else a[f]=this[f];this._inferencer._rules.sort(function(a,e){return a._priority-e._priority});for(e=0;e<this._inferencer._rules.length;e++)d=this._inferencer._rules[e],
d._fn.apply(a,d._args);for(e=0;e<this._activators.length;e++)this._activators[e].fn(a);return a};var h=function(){this._term={_value:null};this._rules=[];return this},g=function(a,c,d){this._fn=c;this._args=d;this._priority=a;return this};h.prototype.isA=function(a){this._rules.push(new g(1,q,[this._term._value,a._term._value]));return this};h.prototype.relatesTo=function(a,c){this._rules.push(new g(10,k,[this._term._value,a._term._value,c._term._value]));return this};h.prototype.hasDomain=function(a){this._rules.push(new g(3,
n,[this._term._value,a._term._value]));return this};h.prototype.hasRange=function(a){this._rules.push(new g(2,r,[this._term._value,a._term._value]));return this};c.alsoBehavesLike(l,h);var k=function(a,b,d){a=this[a];var f=this[b],h=this[d];f._type===c.CONCEPT?c.error(Error("Cannot define a relationship with a concept type: "+f._value)):null===f._type&&(f._type=c.RELATIONSHIP);h._type===c.RELATIONSHIP?c.error(Error("Cannot create a relationship with a relationship type: "+h._value)):null===h._type&&
(h._type=c.CONCEPT);a._type===c.RELATIONSHIP?c.error(Error("Cannot create a relationship from a relationship type: "+a._value)):null===a._type&&(a._type=c.CONCEPT);"undefined"===typeof a[b]&&(a[b]=new a.constructor(f));"undefined"===typeof a[b][d]&&(a[b][d]=h);"undefined"===typeof a[d]&&(a[d]=h);h.relate(a[b]);for(var g in h)h.hasOwnProperty(g)&&(h[g].getType&&"[object Term]"===h[g].getType())&&("undefined"===typeof a[b][g]&&(a[b][g]=h[g]),"undefined"===typeof a[g]&&(a[g]=h[g]),h[g].relate(a[b]))},
q=function(a,b){var d=this[a],f=this[b];f._type===c.RELATIONSHIP?c.error(Error("Cannot apply isA to a relationship type: "+f._value)):null===f._type&&(f._type=c.CONCEPT);d._type===c.RELATIONSHIP?c.error(Error("Cannot apply isA to a relationship type: "+d._value)):null===d._type&&(d._type=c.CONCEPT);"undefined"===typeof f[a]&&(f[a]=d)},r=function(a,b){var d=this[a],f=this[b];f._type===c.RELATIONSHIP?c.error(Error("Cannot apply hasRange to a relationship type: "+f._value)):null===f._type&&(f._type=
c.CONCEPT);d._type===c.CONCEPT?c.error(Error("Cannot assign hasRange from a concept type: "+d._value)):null===d._type&&(d._type=c.RELATIONSHIP);"undefined"===typeof d[b]&&(d[b]=f);f.relate(d);for(var h in f)if(f.hasOwnProperty(h)&&f[h].getType&&"[object Term]"===f[h].getType()){var g=f[h]._value;"undefined"===typeof d[g]&&(d[g]=f[h]);f[h].relate(d)}},n=function(a,b){var d=this[a],f=this[b];f._type===c.RELATIONSIP?c.error(Error("Cannot apply hasRange to a relationship type: "+f._value)):null===f._type&&
(f._type=c.CONCEPT);d._type===c.CONCEPT?c.error(Error("Cannot assign hasRange from a concept type: "+d._value)):null===d._type&&(d._type=c.RELATIONSHIP);"undefined"===typeof f[a]&&(f[a]=d)};c.typeMask=function(a,c){var d=[],b;for(b in c)c.hasOwnProperty(b)&&("undefined"===typeof a||"undefined"===typeof a[b]?d.push(b):"undefined"!==typeof a[b]&&typeof a[b]!==c[b]&&!0!==c[b]&&d.push(b));return 0===d.length?null:d};return c}(smallmachine||{});(function(c){var b=new c.Ontology("sm.properties");b.addTerm("property");b.addTerm("type");b.addTerm("ontology");b.addTerm("behavior");b.addTerm("hasMemberType");b.addTerm("hasMember");b.addTerm("Ontology");b.addTerm("Behavior");b.addTerm("Constructor");b.addTerm("Null");b.ontology.isA(b.property);b.behavior.isA(b.property);b.Ontology.isA(b.type);b.Behavior.isA(b.type);b.Constructor.isA(b.type);b.Null.isA(b.type);b.ontology.relatesTo(b.hasMemberType,b.Ontology);b.behavior.relatesTo(b.hasMemberType,
b.Behavior);b.ontology.relatesTo(b.hasMember,b.Null);b.behavior.relatesTo(b.hasMember,b.Null);var m=function(){return this};m.prototype.extendedBy=function(a,b){if("undefined"!==typeof b&&"function"===typeof a)"undefined"!==typeof this[b]?c.alsoBehavesLike(this[b],a):this[b]=a,"function"!==typeof this[b].prototype.getType&&(this[b].prototype.getType=function(){return"[object "+b+"]"}),"function"!==typeof this[b].prototype.ofType&&(this[b].prototype.ofType=function(a){return"function"===typeof a.getType?
this.getType()===a.getType():this.getType()==="[object "+a+"]"});else{var g=b||a.title;"undefined"===typeof g&&c.error(Error("Cannot call extendedBy on the core ontology with an object that is missing the 'title' property without specifying a 'typeName'"));if("undefined"!==typeof this[g])c.alsoBehavesLike(this[g],a);else{var k=this.hasMemberType;("undefined"===typeof k||"undefined"===typeof k.getType)&&c.error(Error("The specified concept does not have a valid 'hasMemberType' relationship with another concept"));
var l=c[this._value][k._value];"undefined"===typeof l&&c.error(Error("The specified type does not exist in the core object model: "+k._value));"function"!==typeof a.getType&&c.error(Error("The specified model is missing the getType function: "+g));var k=a.getType(),m=!1,n;for(n in l)if(l.hasOwnProperty(n)&&"undefined"!==typeof this[n].getType&&"[object "+n+"]"===k){this.hasMember[g]=a;this[g]=a;m=!0;break}m||c.error(Error("Did not find an allowed model type for: "+k))}}};var l=function(){this.title=
"Null";return this};l.prototype.getType=function(){return"[object Null]"};l.prototype.ofType=function(a){return null===a||"null"===a||"Null"===a?!0:!1};c.alsoBehavesLike(c,b.getModel(m));c.ontology.extendedBy(new l);c.behavior.extendedBy(new l);b=function(a){this._channel=a;return this};b.prototype.publish=function(a,c){this._channel.publish(a,c);return this};c.type.extendedBy(b,"AsyncResult");b=function(a,b,g){"undefined"===typeof b&&c.error(Error("Parameter 'key' is required when instantiating the sm.NamedValue type"));
this.namespace=a;this.key=b;this.value=g;return this};b.prototype.adapt=function(a,b){this.namespace=a;if("undefined"!==typeof b)for(var g=[].concat(b),k=0;k<g.length;k++)c.alsoBehavesLike(this,g[k]);return this};c.type.extendedBy(b,"NamedValue");b=function(){this.title="NamedValueCollection";this._collection={};return this};b.prototype.exists=function(a,b){var g=a;null===c.typeMask(a,{namespace:!0,key:!0})&&(g=a.namespace,b=a.key);return"undefined"!==typeof this._collection[g]&&"undefined"!==typeof this._collection[g][b]};
b.prototype.add=function(a,b,g){var k=a.namespace||a,l=a.key||b;"undefined"!==typeof this._collection[k]&&"undefined"!==this._collection[k][l]&&c.error(Error("Cannot add a new entry to the collection (already exists): ["+k+"]"+l));this.modify(a,b,g);return this};b.prototype.modify=function(a,b,g){var k=a.namespace||a;b=a.key||b;a=a.value||g;"undefined"===typeof b&&c.error(Error("Must supply a valid key"));"undefined"===typeof a&&c.error(Error("Must supply a valid value"));"undefined"===typeof this._collection[k]&&
(this._collection[k]={});this._collection[k][b]=a;return this};b.prototype.remove=function(a,b){if(!("undefined"===typeof this._collection[a]||"undefined"===typeof this._collection[a][b]))return delete this._collection[a][b],this};b.prototype.getValue=function(a,b){var c=a.namespace||a,k=a.key||b;if(!("undefined"===typeof this._collection[c]||"undefined"===this._collection[c][k]))return c=this._collection[c][k],"undefined"!==typeof c&&("function"===typeof a.setValue?a.setValue(c):"undefined"!==typeof a.value&&
(a.value=c)),c};b.prototype.ofType=function(a){return"NamedValueCollection"===a||"function"===typeof a.getType&&a.getType()===this.getType()};c.type.extendedBy(b,"NamedValueCollection")})(smallmachine);
