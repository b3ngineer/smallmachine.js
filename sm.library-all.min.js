var smallmachine=function(d){function b(g,s){for(var a=0;a<s.dependencies.length;a++){for(var d=!1,c=0;c<g.length;c++)if(s.dependencies[a]==g[c].namespace){d=!0;break}if(!d)return s.dependencies[a]}return null}function l(g,a){this._term=g;this._rules=a._rules;return this}function m(){return this}function k(){return this}function n(g){this.namespace=g;this._inferencer=new h;this._activators=[];this.Term=function(g){this._id=function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(g){var a=
16*Math.random()|0;return("x"==g?a:a&3|8).toString(16)})}();"undefined"!==typeof g._value&&"undefined"!==typeof g._type?(this._value=g._value,this._type=g._type):(this._value=g,this._type=null);return this};return this}function h(){this._term={_value:null};this._rules=[];return this}function a(g,a,q){g=this[g];var c=this[a],f=this[q];c._type===d.CONCEPT?d.error(Error("Cannot define a relationship with a concept type: "+c._value)):null===c._type&&(c._type=d.RELATIONSHIP);f._type===d.RELATIONSHIP?d.error(Error("Cannot create a relationship with a relationship type: "+
f._value)):null===f._type&&(f._type=d.CONCEPT);g._type===d.RELATIONSHIP?d.error(Error("Cannot create a relationship from a relationship type: "+g._value)):null===g._type&&(g._type=d.CONCEPT);"undefined"===typeof g[a]&&(g[a]=new g.constructor(c));"undefined"===typeof g[a][q]&&(g[a][q]=f);"undefined"===typeof g[q]&&(g[q]=f);f.relate(g[a]);for(var e in f)f.hasOwnProperty(e)&&"function"===typeof f[e].relate&&("undefined"===typeof g[a][e]&&(g[a][e]=f[e]),"undefined"===typeof g[e]&&(g[e]=f[e]),f[e].relate(g[a]))}
function c(g,a){var f=this[g],c=this[a];c._type===d.RELATIONSHIP?d.error(Error("Cannot apply isA to a relationship type: "+c._value)):null===c._type&&(c._type=d.CONCEPT);f._type===d.RELATIONSHIP?d.error(Error("Cannot apply isA to a relationship type: "+f._value)):null===f._type&&(f._type=d.CONCEPT);"undefined"===typeof c[g]&&(c[g]=f)}function e(g,a){var f=this[g],c=this[a];c._type===d.RELATIONSHIP?d.error(Error("Cannot apply hasRange to a relationship type: "+c._value)):null===c._type&&(c._type=d.CONCEPT);
f._type===d.CONCEPT?d.error(Error("Cannot assign hasRange from a concept type: "+f._value)):null===f._type&&(f._type=d.RELATIONSHIP);"undefined"===typeof f[a]&&(f[a]=c);c.relate(f);for(var e in c)if(c.hasOwnProperty(e)&&"function"===typeof c[e].relate){var b=c[e]._value||null;null!==b&&("undefined"===typeof f[b]&&(f[b]=c[e]),c[e].relate(f))}}function p(g,a){var f=this[g],c=this[a];c._type===d.RELATIONSIP?d.error(Error("Cannot apply hasRange to a relationship type: "+c._value)):null===c._type&&(c._type=
d.CONCEPT);f._type===d.CONCEPT?d.error(Error("Cannot assign hasRange from a concept type: "+f._value)):null===f._type&&(f._type=d.RELATIONSHIP);"undefined"===typeof c[g]&&(c[g]=f)}"function"!==typeof Object.getPrototypeOf&&(Object.getPrototypeOf="object"===typeof"test".__proto__?function(g){return g.__proto__}:function(g){return g.constructor.prototype});d=function(g,a){"undefined"===typeof g&&d.error(Error("Missing required parameter for smallmachine constructor: one or more instances of type 'Ontology'"));
for(var c=[].concat(g),f="",e=0;e<c.length;e++)"undefined"===typeof c[e]&&d.error(Error("Element "+e+" of the ontologies argument passed to the smallmachine constructor is undefined")),"undefined"===typeof c[e].namespace?"undefined"!==typeof d.ontology[c[e]]&&(f=f+c[e]+",",c[e]=d.ontology[c[e]]):f=f+c[e].namespace+",";f=new n(f.substring(0,f.length-1));for(e=0;e<c.length;e++){for(var m in c[e])c[e].hasOwnProperty(m)&&"undefined"!==typeof c[e][m]._name&&"Proxy"==c[e][m]._name&&f.addTerm(c[e][m]._term._value);
for(var p=0;p<c[e]._inferencer._rules.length;p++)f._inferencer._rules.push(c[e]._inferencer._rules[p]);for(p=0;p<c[e]._activators.length;p++){var h=b(c,c[e]._activators[p]);null!==h&&d.error(Error("Cannot wire-in ontology with missing activator dependency on '"+h+"'"));f.registerActivator(c[e]._activators[p]);f._activators.sort(function(g,c){if(g.namespace==c.namespace)return 0;for(var a=0;a<g.dependencies.length;a++)if(c.namespace==g.dependencies[a])return 1;for(a=0;a<c.dependencies.length;a++)if(g.namespace==
c.dependencies[a])return-1;return 0})}}return f.getModel(a)};d.alsoBehavesLike=function(g,c){("undefined"===typeof g||"undefined"===typeof c)&&d.error(Error("Cannot mixin with an undefined object"));for(var a in c)if(c.hasOwnProperty(a)&&!(0==a.indexOf("_")||"initializer"===a))if("undefined"!==typeof g[a]){if("undefined"!==typeof c[a].prototype){if("undefined"!==typeof c[a].prototype.initializer&&!0==c[a].prototype.initializer)continue;var f="undefined"!==typeof c[a].prototype.virtual?c[a].prototype.virtual:
!1}var e="undefined"!==typeof g[a].prototype?g[a].prototype.virtual:!1;if(!e||!f)e&&(g[a]=c[a])}else g[a]=c[a];"undefined"!==typeof c.prototype&&("undefined"===typeof g.prototype&&(g.prototype={}),d.alsoBehavesLike(g.prototype,c.prototype))};d.error=function(c,a){if("undefined"!==typeof a&&"function"===typeof a.handleError)a.handleError(c);else if("function"===typeof d.handleError)d.handleError(c);else throw c;};var r=function(c){var a=16*Math.random()|0;return("x"==c?a:a&3|8).toString(16)};d.getGuid=
function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,r)};d.CONCEPT="concept";d.RELATIONSHIP="relationship";l.prototype._name="Proxy";m.prototype.relate=function(c){"undefined"===typeof this._relatesTo&&(this._relatesTo=[]);for(var a=!1,f=0;f<this._relatesTo.length;f++)if(this._relatesTo[f]._id==c._id){a=!0;break}a||this._relatesTo.push(c)};k.prototype._name="Behavior";d.Behavior=k;n.prototype._name="Ontology";n.prototype.addTerm=function(c){if("undefined"!==typeof this[c])return this;
var a=this.Term;a.prototype.relate=m.prototype.relate;a=new a(c);this[c]=new l(a,this._inferencer);return this};n.prototype.registerActivator=function(a,c){"undefined"===typeof c&&(c=[]);null===d.typeMask(a,{fn:"function",namespace:!0,dependencies:!0})?this._activators.push(a):this._activators.push({fn:a,namespace:this.namespace,dependencies:c})};n.prototype.getModel=function(a){var c=new function(){return this},f=[];if("undefined"!==typeof a){f=f.concat(a);for(a=0;a<f.length;a++)if("undefined"===
typeof f[a]&&d.error("One or more [behaviors] arguments were supplied to the smallmachine constructor that are 'undefined'; error creating object model"),"undefined"!==typeof f[a].prototype&&!0===f[a].prototype.initializer)f[a](c)}for(var e in this)if(this.hasOwnProperty(e)&&!("undefined"===typeof this[e]||"undefined"===this[e]._term)&&0!==e.indexOf("_"))if("undefined"!==typeof this[e]._term){c[e]=this[e]._term;for(a=0;a<f.length;a++)d.alsoBehavesLike(Object.getPrototypeOf(c[e]),f[a].prototype)}else c[e]=
this[e];this._inferencer._rules.sort(function(a,c){return a._priority-c._priority});for(a=0;a<this._inferencer._rules.length;a++)f=this._inferencer._rules[a],f._fn.apply(c,f._args);for(a=0;a<this._activators.length;a++)this._activators[a].fn(c);return c};d.Ontology=n;var f=function(a,c,f){this._fn=c;this._args=f;this._priority=a;return this};h.prototype.isA=function(a){this._rules.push(new f(1,c,[this._term._value,a._term._value]));return this};h.prototype.relatesTo=function(c,e){this._rules.push(new f(10,
a,[this._term._value,c._term._value,e._term._value]));return this};h.prototype.hasDomain=function(a){this._rules.push(new f(3,p,[this._term._value,a._term._value]));return this};h.prototype.hasRange=function(a){this._rules.push(new f(2,e,[this._term._value,a._term._value]));return this};d.alsoBehavesLike(l,h);d.typeMask=function(a,c){var f=[],e;for(e in c)c.hasOwnProperty(e)&&("undefined"===typeof a||"undefined"===typeof a[e]?f.push(e):"undefined"!==typeof a[e]&&typeof a[e]!==c[e]&&!0!==c[e]&&f.push(e));
return 0===f.length?null:f};return d}(smallmachine||{});(function(d){function b(){return this}function l(){return this}function m(a){this._channel=a;return this}function k(a,c,e){"undefined"===typeof c&&d.error(Error("Parameter 'key' is required when instantiating the sm.NamedValue type"));this.namespace=a;this.key=c;this.value=e;return this}function n(){this._collection={};return this}var h=new d.Ontology("sm.properties");h.addTerm("property");h.addTerm("type");h.addTerm("ontology");h.addTerm("behavior");h.addTerm("hasMemberType");h.addTerm("hasMember");
h.addTerm("Ontology");h.addTerm("Behavior");h.addTerm("Constructor");h.addTerm("Null");h.ontology.isA(h.property);h.behavior.isA(h.property);h.Ontology.isA(h.type);h.Behavior.isA(h.type);h.Constructor.isA(h.type);h.Null.isA(h.type);h.ontology.relatesTo(h.hasMemberType,h.Ontology);h.behavior.relatesTo(h.hasMemberType,h.Behavior);h.ontology.relatesTo(h.hasMember,h.Null);h.behavior.relatesTo(h.hasMember,h.Null);b.prototype.extendedBy=function(a,c){var e=this.hasMemberType;"undefined"===typeof c&&("undefined"===
e?c=a._name:"undefined"!==typeof a.prototype&&(c=a.prototype._name));if("undefined"!==typeof c&&"function"===typeof a)"undefined"!==typeof this[c]?d.alsoBehavesLike(this[c],a):this[c]=a,"undefined"===typeof this[c]._name&&(this[c]._name=c);else{var b=c||a.namespace||a._name;"undefined"===typeof b&&d.error(Error("Cannot call extendedBy on the core ontology with an object that is missing the 'namepsace' and '_name' properties without specifying a 'typeName'"));if("undefined"!==typeof this[b])d.alsoBehavesLike(this[b],
a);else{var m=d[this._value][e._value];"undefined"===typeof m&&d.error(Error("The specified type does not exist in the core object model: "+e._value));var e=a._name||a.constructor.name,f=!1,g;for(g in m)if(m.hasOwnProperty(g)&&0!==g.indexOf("_")&&g===e){this.hasMember[b]=a;this[b]=a;f=!0;break}f||d.error(Error("Did not find an allowed model type for: "+e))}}};l.prototype._name="Null";d.alsoBehavesLike(d,h.getModel(b));d.ontology.extendedBy(new l);d.behavior.extendedBy(new l);m.prototype._name="AsyncResult";
m.prototype.publish=function(a,c){this._channel.publish(a,c);return this};d.type.extendedBy(m);k.prototype.adapt=function(a,c){this.namespace=a;if("undefined"!==typeof c)for(var e=[].concat(c),b=0;b<e.length;b++)d.alsoBehavesLike(this,e[b]);return this};k.prototype._name="NamedValue";d.type.extendedBy(k);n.prototype._name="NamedValueCollection";n.prototype.exists=function(a,c){var e=a;null===d.typeMask(a,{namespace:!0,key:!0})&&(e=a.namespace,c=a.key);return"undefined"!==typeof this._collection[e]&&
"undefined"!==typeof this._collection[e][c]};n.prototype.add=function(a,c,e){var b=a.namespace||a,m=a.key||c;"undefined"!==typeof this._collection[b]&&"undefined"!==this._collection[b][m]&&d.error(Error("Cannot add a new entry to the collection (already exists): ["+b+"]"+m));this.modify(a,c,e);return this};n.prototype.modify=function(a,c,e){var b=a.namespace||a;c=a.key||c;a=a.value||e;"undefined"===typeof c&&d.error(Error("Must supply a valid key"));"undefined"===typeof a&&d.error(Error("Must supply a valid value"));
"undefined"===typeof this._collection[b]&&(this._collection[b]={});this._collection[b][c]=a;return this};n.prototype.remove=function(a,c){if(!("undefined"===typeof this._collection[a]||"undefined"===typeof this._collection[a][c]))return delete this._collection[a][c],this};n.prototype.getValue=function(a,c){var e=a.namespace||a,d=a.key||c;if(!("undefined"===typeof this._collection[e]||"undefined"===this._collection[e][d]))return e=this._collection[e][d],"undefined"!==typeof e&&("function"===typeof a.setValue?
a.setValue(e):"undefined"!==typeof a.value&&(a.value=e)),e};d.type.extendedBy(n)})(smallmachine);(function(d){var b=new d.Ontology("sm.channels");b.addTerm("thing");b.addTerm("user");b.addTerm("system");b.addTerm("action");b.addTerm("click");b.addTerm("doubleClick");b.addTerm("keyPress");b.addTerm("task");b.addTerm("initialize");b.addTerm("insert");b.addTerm("remove");b.addTerm("get");b.addTerm("set");b.addTerm("messenger");b.addTerm("success");b.addTerm("error");b.addTerm("performs");b.addTerm("reactsTo");b.user.isA(b.thing);b.user.relatesTo(b.performs,b.action);b.system.isA(b.thing);b.system.relatesTo(b.performs,
b.task);b.action.isA(b.thing);b.task.isA(b.thing);b.messenger.isA(b.thing);b.click.isA(b.action);b.doubleClick.isA(b.action);b.keyPress.isA(b.action);b.get.isA(b.task);b.set.isA(b.task);b.success.isA(b.messenger);b.error.isA(b.messenger);b.initialize.isA(b.task);b.insert.isA(b.task);b.remove.isA(b.task);b.performs.hasRange(b.action).hasRange(b.task);b.reactsTo.hasRange(b.action).hasDomain(b.system);b.registerActivator(function(b){function l(a,e){if("undefined"!==typeof jQuery)try{jQuery.ajax({dataType:"json",
url:a,type:"GET",success:function(f,g,h){b.messenger.success.publish(g);e.publish(new d.type.NamedValue("sm.channels",a,f))},error:function(a,c,e){d.error(Error(e))}})}catch(h){d.error(Error(h))}else{var k=window.XMLHttpRequest?new XMLHttpRequest:new ActiveXObject("MSXML2.XMLHTTP.3.0");k.onprogress=function(){};k.onerror={};k.onreadystatechange=function(){4>k.readyState||(200==k.status?(b.messenger.success.publish(k.statusText),e.publish(new d.type.NamedValue("sm.channels",a,JSON.parse(k.responseText)))):
d.error(Error(k.statusText)))};k.open("GET",a,!0);k.setRequestHeader("X-Requested-With","XMLHttpRequest");k.setRequestHeader("Content-type","application/json");k.send(null)}return e}var n={update:function(a){return"undefined"!==typeof a.key&&"undefined"!==typeof a.namespace?function(a){b.memory.modify(a)}:!1}};d.alsoBehavesLike(b,{memory:new d.type.NamedValueCollection});b.set.subscribe({update:function(a){return n}});var h={update:function(a){return"undefined"!==typeof a.key&&"undefined"!==typeof a.namespace?
function(a){b.memory.getValue(a)}:!1}};b.get.subscribe({update:function(a){return h}});"function"===typeof b.initialize.addHelper&&b.initialize.addHelper("json",l);"function"===typeof b.set.addHelper&&b.set.addHelper("config",function(a){return new d.type.NamedValue("sm.channels","config",a)});if("function"===typeof b.get.addHelper){b.get.addHelper("json",l);var a=function(){this.namespace="sm.channels";this.key="config";return this};a.prototype._name="Config";a.prototype.setValue=function(a){d.alsoBehavesLike(this,
a)};d.type.extendedBy(a);b.get.addHelper("config",function(a){return a})}});try{d.ontology.extendedBy(b)}catch(l){d.error(Error("Could not extend the smallmachine.ontology property with the 'sm.channels' ontology: "+l.message+"\n"+l.stack))}})(smallmachine);(function(d){function b(b,d){this._value=b;this._type=d;return this}b.prototype._name="Channel";b.prototype.forward=function(b,d){null!=this._value&&(d[this._value]=!0);for(var k in this)if(this.hasOwnProperty(k)&&!("function"===typeof this[k]||0===k.indexOf("_"))&&!0!==d[k]&&"function"===typeof this[k].publish)d[k]=!0,this[k].publish(b,d);if("undefined"!==typeof this._relatesTo)for(k=0;k<this._relatesTo.length;k++)"undefined"!==typeof this._relatesTo[k]._subscribers&&this.notify(b,this._relatesTo[k]._subscribers)};
b.prototype.unsubscribe=function(b){"undefined"!==typeof this._subscribers&&delete this._subscribers[b]};b.prototype.subscribe=function(b){"undefined"===typeof this._subscribers&&(this._subscribers={});var m=d.getGuid();"function"===typeof b?this._subscribers[m]={update:b,lifetime:1}:("undefined"===typeof b.lifecycle&&(b.lifetime=1),this._subscribers[m]=b);return m};b.prototype.notify=function(b,m){var k=!1,n={},h=0,a=[],c;for(c in m){var e=m[c].update(b);"undefined"!==typeof m[c]&&(0>=m[c].lifetime&&
this.unsubscribe(c),!0===e?k=!0:"function"===typeof e?(a.push(e),k=!0):e&&"function"===typeof e.update&&(n[d.getGuid()]=e,h++))}if(k){c=0===a.length;for(e=0;e<a.length;e++)!1===!a[e](b)&&(c=!0);!1===c&&(k=!1)}!1==k&&0<h&&this.notify(b,n)};b.prototype.publish=function(b,m){m=m||{};if("function"===typeof b&&(b=b(new d.type.AsyncResult(this)),"undefined"!==typeof b&&"undefined"!==typeof b._channel&&"function"===typeof b.publish))return this;if("undefined"===typeof this._subscribers)return this.forward(b,
m),this;this.notify(b,this._subscribers);this.forward(b,m);return this};b.prototype.addHelper=function(d,m){var k=b.prototype.publish,n=this;this[d]=function(){for(var b=[],a=0;a<arguments.length;a++)b.push(arguments[a]);return k.apply(n,[function(a){b.push(a);return m.apply(n,b)}])};return this};d.behavior.extendedBy(b)})(smallmachine);(function(d,b){function l(d){"undefined"!==typeof b.fn&&b.extend({sm:d});return this}l.prototype._name="Extension";l.prototype.initializer=!0;d.behavior.extendedBy(l)})(smallmachine,jQuery||{});(function(d){function b(){this.length=0;this._min=this._max=-1;return this}function l(){return this}b.prototype.add=function(b,k){"undefined"===typeof this[b]?(0<this._max&&this._max<this.length+1&&d.error(Error("The maximum number of items already exists in this collection (max "+this._max+")")),this[b]=k,this.length++):d.error(Error("Cannot add an item to a collection when it's key has already present: "+b))};b.prototype.exists=function(b){return"undefined"!==typeof this[b]};b.prototype.remove=
function(b){"undefined"!==typeof this[b]?(delete this[b],this.length--):d.error(Error("An item with the specified key has not been added: "+b))};l.prototype._name="Restrictions";l.prototype.max=function(d){"undefined"===typeof this._collection&&(this._collection=new b);this._collection._max=d};l.prototype.add=function(d,k){"undefined"===typeof this._collection&&(this._collection=new b);this._collection.add(d,k)};l.prototype.min=function(d){"undefined"===typeof this._collection&&(this._collection=
new b);this._collection._min=d};d.behavior.extendedBy(l)})(smallmachine);(function(d){function b(a,c){c.y=parseFloat(a.y);c.x=parseFloat(a.x);c.width=parseFloat(a.width);c.height=parseFloat(a.height);return this}function l(a){new b(a,this);return this}function m(a){new b(a,this);return this}function k(a){new b(a,this);return this}function n(a){new b(a,this);return this}function h(a,c,b,e){this.shape=new p[a.shape||"ellipse"](a);this.id=a.id||d.getGuid();this.edges=a.edges||[];this.label=a.label||this.id;this.paper=c;this.shapeAttr=b;this.shapeLabelAttr=e;this.data={};
return this}function a(a,c,b,e,d,h){this.id1=a.id;this.id2=c.id;this.r1=a.shape.width/2;this.r2=c.shape.width/2;this.x1=a.shape.x;this.y1=a.shape.y;this.x2=c.shape.x;this.y2=c.shape.y;this.label=a.edges[b].label||"";this.paper=e;this.lineAttr=d;this.edgeLabelAttr=h;this.data={};return this}function c(a){this._model=a;this.handleError=function(c){a.messenger.error.publish(c)};return this}var e=new d.Ontology("sm.nodes");e.addTerm("task");e.addTerm("insert");e.addTerm("connect");e.addTerm("set");e.addTerm("get");
e.addTerm("paint");e.addTerm("paintNodes");e.paint.isA(e.task);e.insert.isA(e.task);e.connect.isA(e.task);e.set.isA(e.task);e.get.isA(e.task);e.paintNodes.isA(e.paint);l.prototype.draw=function(a){console.log("ellipse");return a.ellipse(this.x,this.y,this.width/2,this.height/2)};m.prototype.draw=function(a){return a.rect(this.x-this.width/2,this.y-this.height/2,this.width,this.height)};k.prototype.draw=function(a){var c=this.x-this.width/2,b=this.y,e=this.y-this.height/2,d=this.x+this.width/2,h=this.y+
this.height/2;console.log("diamond");return a.path(["M",c,b,"L",this.x,e,"L",d,this.y,"L",this.x,h,"L",c,b])};n.prototype.draw=function(a){var c=this.x-this.width/2,b=this.y+this.height/2,e=this.y-this.height/2,d=this.x+this.width/2,h=this.y+this.height/2;console.log("triangle");return a.path(["M",c,b,"L",this.x,e,"L",d,h,"L",c,b])};var p={ellipse:l,rectangle:m,diamond:k,triangle:n};h.prototype.update=function(a){a=this.shape.draw(this.paper);a.id=this.id;"function"===typeof this.shapeAttr?this.shapeAttr(a,
this):a.attr(this.shapeAttr);a=this.paper.text(this.shape.x,this.shape.y,this.label);"function"===typeof this.shapeLabelAttr?this.shapeLabelAttr(a,this):a.attr(this.shapeLabelAttr);return!0};a.prototype.update=function(a){a=Math.sqrt(Math.pow(this.x2-this.x1,2)+Math.pow(this.y2-this.y1,2));var c=this.r1/a,b=(a-this.r2)/a;a=c*this.x2+(1-c)*this.x1;var c=c*this.y2+(1-c)*this.y1,e=b*this.x2+(1-b)*this.x1,b=b*this.y2+(1-b)*this.y1;console.log("Edge:line %s, %s -> %s, %s",a,c,e,b);a=this.paper.path(["M",
a,c,"L",e,b]);"function"===typeof this.lineAttr?this.lineAttr(a,this):a.attr(this.lineAttr);a=(this.x1+this.x2)/2;b=(this.y1+this.y2)/2;console.log("Edge:text");a=this.paper.text(a,b,this.label);"function"===typeof this.edgeLabelAttr?this.edgeLabelAttr(a,this):a.attr(this.edgeLabelAttr);b=180*Math.atan2(this.y2-this.y1,this.x2-this.x1)/Math.PI;90<b?a.transform("t-6,-6r"+(b+180)):a.transform("t6,-6r"+b);return!0};c.prototype.update=function(c){var b=new d.type.Config;this._model.system.get.config(b);
c=c.value;if("undefined"===typeof c)return!1;null!==d.typeMask(c,{length:!0,sort:"function"})&&d.error(Error("Cannot determine the JSON type; expecting an array (or comparable object) of node objects but received "+c),this);var e=new d.type.NamedValue("sm.raphaeljs","paper",null);this._model.get.publish(e);e.value.clear();for(var k=0;k<c.length;k++){for(var p=new h(c[k],e.value,b.shapeAttr||{},b.shapeLabelAttr||{}),m=0;m<p.edges.length;m++){var l;a:{l=c;for(var n=p.edges[m].id,r=0;r<l.length;r++)if(l[r].id===
n){l=new h(l[r]);break a}l=null}null!==l&&("undefined"!=typeof l.shape.x&&"undefined"!==typeof l.shape.y)&&(l=new a(p,l,m,e.value,b.lineAttr||{},b.edgeLabelAttr||{}),this._model.connect.publish(l))}this._model.insert.publish(p)}};e.registerActivator(function(a){var b=new c(a);a.paintNodes.subscribe(function(a){return b});a.connect.subscribe(function(a){return a});a.insert.subscribe(function(a){return a})},["sm.channels","sm.raphaeljs"]);try{d.ontology.extendedBy(e)}catch(r){d.error(Error("Could not extend the smallmachine.ontology property with the 'sm.nodes' ontology: "+
r.message+"\n"+r.stack))}})(smallmachine);(function(d,b,l){b=new d.Ontology("sm.flowchart");b.addTerm("paint");b.addTerm("get");var m=function(a,c,b,d){"undefined"===typeof a?(this.y=50,this.previousSector={y:0,height:0}):(this.previousSector=a,this.y=this.previousSector.y+this.previousSector.height+80);this.height=0;this.x=0.5*c;this.width=0;this.layoutWidth=c;this.lastNodeGroup=null;this.nodeGroups=0;this.nodes=[];return this};m.prototype.add=function(a,c){var b=parseFloat(a.width);null===this.lastNodeGroup?this.lastNodeGroup=c:this.lastNodeGroup!=
c&&(this.nodeGroups++,this.lastNodeGroup=c);this.width=this.width+40+b;var d=parseFloat(a.height);this.height=this.height<d?d:this.height;this.x=this.x-20-0.5*b;for(d=b=0;d<a.edges.length;d++)a.edges[d].label.length>b&&(b=a.edges[d].label.length);6<b&&(b=this.height+10*(b-6),b>this.height&&(this.height=b));this.nodes.push({node:a,nodeGroup:c})};m.prototype.finalize=function(a){if("undefined"===typeof a||0>a)a=0;a*=0.5;for(var c=null,b=0,d=0;d<this.nodes.length;d++)null===c?c=this.nodes[d].nodeGroup:
this.nodes[d].nodeGroup!=c&&(b++,c=this.nodes[d].nodeGroup),this.nodes[d].node.x=this.x+(40*d+40*b)+this.nodes[d].node.width*d+a,this.nodes[d].node.y=this.y};var k=function(a){this.paper=a;this.width=parseFloat(a.width);this.height=parseFloat(a.height);this.finalWidth=this.width;this.finalHeight=this.height;this.sectors=[];return this};k.prototype.addToSector=function(a,c,b){var d=this.sectors[c];"undefined"===typeof d&&(d=new m(this.sectors[c-1],this.width,this.height,b),this.sectors[c]=d);d.add(a,
b)};k.prototype.finalize=function(){for(var a=0;a<this.sectors.length;a++)this.sectors[a].width+=40*this.sectors[a].nodeGroups,this.sectors[a].width>this.finalWidth&&(this.finalWidth=this.sectors[a].width);for(a=0;a<this.sectors.length;a++)this.sectors[a].finalize(this.finalWidth-this.width)};var n=function(a,c,b,d,h,f){d.addToSector(a,h++,f);for(f=0;f<a.edges.length;f++){var g=b[a.edges[f].id];"undefined"!==typeof g&&n(c[g],c,b,d,h,a.id)}};b.registerActivator(function(a){a.paint.subscribe(function(c){if(null===
d.typeMask(c.value,{length:!0,sort:"function"}))return function(b){b=c.value;var h=new d.type.NamedValue("sm.flowchart","root",null);a.get.publish(h);var m=new d.type.NamedValue("sm.raphaeljs","paper",null);a.get.publish(m);for(var f=new k(m.value),h=h.value,g={},l=b[0],q=0;q<b.length;q++)g[b[q].id]=q,b[q].id===h&&(l=b[q]);"undefined"===typeof l&&d.error(Error("Could not determine the root node for the given node list (as specified): "+h));n(l,b,g,f,0,l.id);f.finalize();m.value.setSize(1.05*f.finalWidth,
1.05*f.finalHeight);return!1}})},["sm.channels","sm.nodes","sm.raphaeljs"]);try{d.ontology.extendedBy(b)}catch(h){d.error(Error("Could not extend the smallmachine.ontology property with the 'sm.nodes' ontology: "+h.message+"\n"+h.stack))}})(smallmachine,jQuery,Raphael);(function(d,b){var l=new d.Ontology("sm.raphaeljs");l.addTerm("set");l.registerActivator(function(k){var m=/^(\d+)%?$/,h=function(a,c,e,h){h=document.getElementById(a+"");if("undefined"===typeof h||!h)throw Error("The specified element ID could not be found: "+a);var k=window,f=document,g=f.documentElement,l=f.getElementsByTagName("body")[0],f=k.innerWidth||g.clientWidth||l.clientWidth,k=k.innerHeight||g.clientHeight||l.clientHeight,g=c;null===c&&(g=h.offsetWidth||f);l=m.exec(g+"");if(!l)throw Error("The specified value for width is invalid (number, percentage or null allowed): "+
c);"function"===typeof g.indexOf&&0<g.indexOf("%")&&(g=100*(h.offsetWidth||f)/parseFloat(l[0]));c=e;null==e&&(c=h.offsetHeight||k);f=m.exec(c+"");if(!f)throw Error("The specified value for height is invalid (number, percentage or null allowed): "+e);"function"===typeof c.indexOf&&0<c.indexOf("%")&&(c=(h.offsetHeight||k)*parseFloat(f[0])/100);a=b(a,g,c);return new d.type.NamedValue("sm.raphaeljs","paper",a)};"function"===typeof k.set.addHelper&&k.set.addHelper("svg",h)},["sm.channels"]);try{d.ontology.extendedBy(l)}catch(m){throw Error("Could not extend the smallmachine.ontology property with the 'sm.raphaeljs' ontology: "+
m.message+"\n"+m.stack);}})(smallmachine,Raphael);(function(d,b){var l=new d.Ontology("sm.sammyjs");l.addTerm("initialize");var m=function(b,a,c){this._id=b;this._callback=a;this._runArg=c||"#/";return this};m.prototype._name="Sammy";d.type.extendedBy(m);var k={update:function(h){return null===d.typeMask(h,{_id:!0,_callback:!0,_runArg:!0})?function(a){b("#"+a._id,a._callback).run(a._runArg)}:!1}};l.registerActivator(function(b){b.initialize.subscribe({update:function(a){return k}})},["sm.channels"]);try{d.ontology.extendedBy(l)}catch(n){throw Error("Could not extend the smallmachine.ontology property with the 'sm.sammyjs' ontology: "+
n.message+"\n"+n.stack);}})(smallmachine,Sammy);
