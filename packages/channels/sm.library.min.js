var smallmachine=function(d){"function"!==typeof Object.getPrototypeOf&&(Object.getPrototypeOf="object"===typeof"test".__proto__?function(a){return a.__proto__}:function(a){return a.constructor.prototype});var a=function(a,b){for(var c=0;c<b.dependencies.length;c++){for(var g=!1,f=0;f<a.length;f++)if(b.dependencies[c]==a[f].title){g=!0;break}if(!g)return b.dependencies[c]}return null};d=function(m,b){if("undefined"===typeof m)throw Error("Missing required parameter for smallmachine constructor: one or more instances of type [object Ontology]");
for(var c=[].concat(m),g="",f=0;f<c.length;f++)"function"!==typeof c[f].ofType||!c[f].ofType("Ontology")?"undefined"!==typeof d.ontology[c[f]]&&(g=g+c[f]+",",c[f]=d.ontology[c[f]]):g+=c[f].title;g=new d.Ontology(g.substring(0,g.length-1));for(f=0;f<c.length;f++){for(var k in c[f])c[f].hasOwnProperty(k)&&"function"===typeof c[f][k].ofType&&c[f][k].ofType("Proxy")&&g.addTerm(c[f][k]._term._value);for(var e=0;e<c[f]._inferencer._rules.length;e++)g._inferencer._rules.push(c[f]._inferencer._rules[e]);
for(e=0;e<c[f]._activators.length;e++){var h=a(c,c[f]._activators[e]);if(null!==h)throw Error("Cannot wire-in ontology with missing activator dependency on '"+h+"'");g.registerActivator(c[f]._activators[e]);g._activators.sort(function(a,m){if(a.title==m.title)return 0;for(var c=0;c<a.dependencies.length;c++)if(m.title==a.dependencies[c])return 1;for(c=0;c<m.dependencies.length;c++)if(a.title==m.dependencies[c])return-1;return 0})}}return g.getModel(b)};d.alsoBehavesLike=function(a,b){if("undefined"===
typeof a||"undefined"===typeof b)throw Error("Cannot mixin with an undefined object");for(var c in b)if(b.hasOwnProperty(c)&&0!=c.indexOf("_"))if("undefined"!==typeof a[c]){var g="undefined"!==typeof a[c].prototype?a[c].prototype.virtual:!1,f="undefined"!==typeof b[c].prototype?b[c].prototype.virtual:!1;if(!g||!f)g&&(a[c]=b[c])}else a[c]=b[c];"undefined"!==typeof b.prototype&&("undefined"===typeof a.prototype&&(a.prototype={}),d.alsoBehavesLike(a.prototype,b.prototype))};d.CONCEPT="concept";d.RELATIONSHIP=
"relationship";var l=function(a,b){this._term=a;this._rules=b._rules;return this};l.prototype.getType=function(){return"[object Proxy]"};l.prototype.ofType=function(a){return"Proxy"===a||"function"===typeof a.getType&&a.getType()===this.getType()};var h=function(){return this};h.prototype.relate=function(a){"undefined"===typeof this._relatesTo&&(this._relatesTo=[]);for(var b=!1,c=0;c<this._relatesTo.length;c++)if(this._relatesTo[c]._id==a._id){b=!0;break}b||this._relatesTo.push(a)};h.prototype.getType=
function(){return"[object Term]"};h.prototype.ofType=function(a){return"Term"===a||"function"===typeof a.getType&&a.getType()===this.getType()};d.Behavior=function(a){this.title=a;return this};d.Ontology=function(a){this.title=a;this._inferencer=new b;this._activators=[];this._term=function(a){this._id=function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(a){var b=16*Math.random()|0;return("x"==a?b:b&3|8).toString(16)})}();"undefined"!==typeof a._value&&"undefined"!==typeof a._type?
(this._value=a._value,this._type=a._type):(this._value=a,this._type=null);return this};return this};d.Ontology.prototype.getType=function(){return"[object Ontology]"};d.Ontology.prototype.addTerm=function(a){if("undefined"!==typeof this[a])return this;var b=this._term;b.prototype.relate=h.prototype.relate;b.prototype.getType=h.prototype.getType;b.prototype.ofType=h.prototype.ofType;b=new b(a);this[a]=new l(b,this._inferencer);return this};d.Ontology.prototype.registerActivator=function(a,b){"undefined"===
typeof b&&(b=[]);"function"!==typeof a&&"function"===typeof a.getType&&"[object Activator]"===a.getType()?this._activators.push(a):this._activators.push({fn:a,title:this.title,dependencies:b,getType:function(){return"[object Activator]"}})};d.Ontology.prototype.getModel=function(a){var b=new function(a){return this},c;for(c in this)if(this.hasOwnProperty(c)&&!("undefined"===typeof this[c]||"undefined"===this[c]._term)&&0!==c.indexOf("_"))if("undefined"!==typeof this[c]._term){if(b[c]=this[c]._term,
"undefined"!==typeof a)for(var g=[].concat(a),f=0;f<g.length;f++)d.alsoBehavesLike(Object.getPrototypeOf(b[c]),g[f].prototype)}else b[c]=this[c];this._inferencer._rules.sort(function(a,b){return a._priority-b._priority});for(f=0;f<this._inferencer._rules.length;f++)a=this._inferencer._rules[f],a._fn.apply(b,a._args);for(f=0;f<this._activators.length;f++)this._activators[f].fn(b);return b};var b=function(){this._term={_value:null};this._rules=[];return this},k=function(a,b,c){this._fn=b;this._args=
c;this._priority=a;return this};b.prototype.isA=function(a){this._rules.push(new k(1,e,[this._term._value,a._term._value]));return this};b.prototype.relatesTo=function(a,b){this._rules.push(new k(10,p,[this._term._value,a._term._value,b._term._value]));return this};b.prototype.hasDomain=function(a){this._rules.push(new k(3,q,[this._term._value,a._term._value]));return this};b.prototype.hasRange=function(a){this._rules.push(new k(2,n,[this._term._value,a._term._value]));return this};d.alsoBehavesLike(l,
b);var p=function(a,b,c){a=this[a];var g=this[b],f=this[c];if(g._type===d.CONCEPT)throw Error("Cannot define a relationship with a concept type: "+g._value);null===g._type&&(g._type=d.RELATIONSHIP);if(f._type===d.RELATIONSHIP)throw Error("Cannot create a relationship with a relationship type: "+f._value);null===f._type&&(f._type=d.CONCEPT);if(a._type===d.RELATIONSHIP)throw Error("Cannot create a relationship from a relationship type: "+a._value);null===a._type&&(a._type=d.CONCEPT);"undefined"===typeof a[b]&&
(a[b]=new a.constructor(g));"undefined"===typeof a[b][c]&&(a[b][c]=f);"undefined"===typeof a[c]&&(a[c]=f);f.relate(a[b]);for(var e in f)f.hasOwnProperty(e)&&(f[e].getType&&"[object Term]"===f[e].getType())&&("undefined"===typeof a[b][e]&&(a[b][e]=f[e]),"undefined"===typeof a[e]&&(a[e]=f[e]),f[e].relate(a[b]))},e=function(a,b){var c=this[a],g=this[b];if(g._type===d.RELATIONSHIP)throw Error("Cannot apply isA to a relationship type: "+g._value);null===g._type&&(g._type=d.CONCEPT);if(c._type===d.RELATIONSHIP)throw Error("Cannot apply isA to a relationship type: "+
c._value);null===c._type&&(c._type=d.CONCEPT);"undefined"===typeof g[a]&&(g[a]=c)},n=function(a,b){var c=this[a],g=this[b];if(g._type===d.RELATIONSHIP)throw Error("Cannot apply hasRange to a relationship type: "+g._value);null===g._type&&(g._type=d.CONCEPT);if(c._type===d.CONCEPT)throw Error("Cannot assign hasRange from a concept type: "+c._value);null===c._type&&(c._type=d.RELATIONSHIP);"undefined"===typeof c[b]&&(c[b]=g);g.relate(c);for(var e in g)if(g.hasOwnProperty(e)&&g[e].getType&&"[object Term]"===
g[e].getType()){var k=g[e]._value;"undefined"===typeof c[k]&&(c[k]=g[e]);g[e].relate(c)}},q=function(a,b){var c=this[a],e=this[b];if(e._type===d.RELATIONSIP)throw Error("Cannot apply hasRange to a relationship type: "+e._value);null===e._type&&(e._type=d.CONCEPT);if(c._type===d.CONCEPT)throw Error("Cannot assign hasRange from a concept type: "+c._value);null===c._type&&(c._type=d.RELATIONSHIP);"undefined"===typeof e[a]&&(e[a]=c)};d.typeMask=function(a,b){var c=[],e;for(e in b)b.hasOwnProperty(e)&&
(!0===b[e]?"undefined"===typeof a[e]&&c.push(e):"undefinedf"!==typeof a[e]&&typeof a[e]!==b[e]&&c.push(e));return 0===c.length?null:c};return d}(smallmachine||{});(function(d){var a=new d.Ontology("sm.properties");a.addTerm("property");a.addTerm("type");a.addTerm("ontology");a.addTerm("behavior");a.addTerm("hasMemberType");a.addTerm("hasMember");a.addTerm("Ontology");a.addTerm("Behavior");a.addTerm("Constructor");a.addTerm("Null");a.ontology.isA(a.property);a.behavior.isA(a.property);a.Ontology.isA(a.type);a.Behavior.isA(a.type);a.Constructor.isA(a.type);a.Null.isA(a.type);a.ontology.relatesTo(a.hasMemberType,a.Ontology);a.behavior.relatesTo(a.hasMemberType,
a.Behavior);a.ontology.relatesTo(a.hasMember,a.Null);a.behavior.relatesTo(a.hasMember,a.Null);var l=function(){return this};l.prototype.extendedBy=function(a,k){if("undefined"!==typeof k&&"function"===typeof a)"undefined"!==typeof this[k]?d.alsoBehavesLike(this[k],a):this[k]=a,"function"!==typeof this[k].prototype.getType&&(this[k].prototype.getType=function(){return"[object "+k+"]"}),"function"!==typeof this[k].prototype.ofType&&(this[k].prototype.ofType=function(a){return"function"===typeof a.getType?
this.getType()===a.getType():this.getType()==="[object "+a+"]"});else{var h=k||a.title;if("undefined"===typeof h)throw Error("Cannot call extendedBy on the core ontology with an object that is missing the 'title' property without specifying a 'typeName'");if("undefined"!==typeof this[h])d.alsoBehavesLike(this[h],a);else{var e=this.hasMemberType;if("undefined"===typeof e||"undefined"===typeof e.getType)throw Error("The specified concept does not have a valid 'hasMemberType' relationship with another concept");
var l=d[this._value][e._value];if("undefined"===typeof l)throw Error("The specified type does not exist in the core object model: "+e._value);if("function"!==typeof a.getType)throw Error("The specified model is missing the getType function: "+h);var e=a.getType(),q=!1,m;for(m in l)if(l.hasOwnProperty(m)&&"undefined"!==typeof this[m].getType&&"[object "+m+"]"===e){this.hasMember[h]=a;this[h]=a;q=!0;break}if(!q)throw Error("Did not find an allowed model type for: "+e);}}};var h=function(){this.title=
"Null";return this};h.prototype.getType=function(){return"[object Null]"};h.prototype.ofType=function(a){return null===a||"null"===a||"Null"===a?!0:!1};d.alsoBehavesLike(d,a.getModel(l));d.ontology.extendedBy(new h);d.behavior.extendedBy(new h);a=function(a){this._channel=a;return this};a.prototype.publish=function(a,d){this._channel.publish(a,d);return this};d.type.extendedBy(a,"AsyncResult");d.type.extendedBy(function(a,d,h){if("undefined"===typeof d)throw Error("Parameter 'key' is required when instantiating the sm.NamedValue type");
this.namespace=a;this.key=d;this.value=h;return this},"NamedValue");a=function(){this.title="NamedValueCollection";this._collection={};return this};a.prototype.exists=function(a,d){var h=a;"function"===typeof a.ofType&&a.ofType("NamedValue")&&(h=a.namespace,d=a.key);return"undefined"!==typeof this._collection[h]&&"undefined"!==typeof this._collection[h][d]};a.prototype.add=function(a,d,h){var e=a.namespace||a,l=a.key||d;if("undefined"!==typeof this._collection[e]&&"undefined"!==this._collection[e][l])throw Error("Cannot add a new entry to the collection (already exists): ["+
e+"]"+l);this.modify(a,d,h);return this};a.prototype.modify=function(a,d,h){var e=a.namespace||a;d=a.key||d;a=a.value||h;if("undefined"===typeof d)throw Error("Must supply a valid key");if("undefined"===typeof a)throw Error("Must supply a valid value");"undefined"===typeof this._collection[e]&&(this._collection[e]={});this._collection[e][d]=a;return this};a.prototype.remove=function(a,d){if(!("undefined"===typeof this._collection[a]||"undefined"===typeof this._collection[a][d]))return delete this._collection[a][d],
this};a.prototype.getValue=function(a,d){var h=a.namespace||a,e=a.key||d;if(!("undefined"===typeof this._collection[h]||"undefined"===this._collection[h][e]))return h=this._collection[h][e],"function"===typeof a.ofType&&a.ofType("NamedValue")&&"undefined"!==typeof h&&(a.value=h),h};a.prototype.ofType=function(a){return"NamedValueCollection"===a||"function"===typeof a.getType&&a.getType()===this.getType()};d.type.extendedBy(a,"NamedValueCollection")})(smallmachine);(function(d){var a=new d.Ontology("sm.channels");a.addTerm("thing");a.addTerm("user");a.addTerm("system");a.addTerm("action");a.addTerm("click");a.addTerm("doubleClick");a.addTerm("keyPress");a.addTerm("task");a.addTerm("initialize");a.addTerm("insert");a.addTerm("remove");a.addTerm("get");a.addTerm("set");a.addTerm("messenger");a.addTerm("success");a.addTerm("error");a.addTerm("performs");a.addTerm("reactsTo");a.user.isA(a.thing);a.user.relatesTo(a.performs,a.action);a.system.isA(a.thing);a.system.relatesTo(a.performs,
a.task);a.action.isA(a.thing);a.task.isA(a.thing);a.messenger.isA(a.thing);a.click.isA(a.action);a.doubleClick.isA(a.action);a.keyPress.isA(a.action);a.get.isA(a.task);a.set.isA(a.task);a.success.isA(a.messenger);a.error.isA(a.messenger);a.initialize.isA(a.task);a.insert.isA(a.task);a.remove.isA(a.task);a.performs.hasRange(a.action).hasRange(a.task);a.reactsTo.hasRange(a.action).hasDomain(a.system);a.registerActivator(function(a){var b=function(b,d){if("undefined"!==typeof jQuery)try{jQuery.ajax({dataType:"json",
url:b,type:"GET",success:function(b,c,e){a.messenger.success.publish(c);d.publish(b)},error:function(b,c,e){a.messenger.error.publish(e)}})}catch(l){a.messenger.error.publish(l)}else{var k=window.XMLHttpRequest?new XMLHttpRequest:new ActiveXObject("MSXML2.XMLHTTP.3.0");k.onprogress=function(){};k.onerror={};k.onreadystatechange=function(){4>k.readyState||(200==k.status?(a.messenger.success.publish(k.statusText),d.publish(JSON.parse(k.responseText))):a.messenger.error.publish(k.statusText))};k.open("GET",
b,!0);k.setRequestHeader("X-Requested-With","XMLHttpRequest");k.setRequestHeader("Content-type","application/json");k.send(null)}return d};"function"===typeof a.initialize.addHelper&&a.initialize.addHelper("json",b);var l={update:function(b){return"function"===typeof b.ofType&&b.ofType("NamedValue")?function(b){a.memory.modify(b)}:!1}};d.alsoBehavesLike(a,{memory:new d.type.NamedValueCollection});a.set.subscribe({update:function(a){return l}});var p={update:function(b){return"function"===typeof b.ofType&&
b.ofType("NamedValue")?function(b){a.memory.getValue(b)}:!1}};a.get.subscribe({update:function(a){return p}})});try{d.ontology.extendedBy(a)}catch(l){throw Error("Could not extend the smallmachine.ontology property with the 'sm.channels' ontology: "+l.message+"\n"+l.stack);}})(smallmachine);(function(d){var a=function(a,d){this._value=a;this._type=d;return this};a.prototype.forward=function(a,d){null!=this._value&&(d[this._value]=!0);for(var b in this)if(this.hasOwnProperty(b)&&!("function"===typeof this[b]||0===b.indexOf("_"))&&!0!==d[b]&&"function"===typeof this[b].publish)d[b]=!0,this[b].publish(a,d);if("undefined"!==typeof this._relatesTo)for(b=0;b<this._relatesTo.length;b++)"undefined"!==typeof this._relatesTo[b]._subscribers&&this.notify(a,this._relatesTo[b]._subscribers)};a.prototype.subscribe=
function(a){"undefined"===typeof this._subscribers&&(this._subscribers=[]);if("function"===typeof a)return this._subscribers.push({update:a}),this;this._subscribers.push(a);return this};a.prototype.notify=function(a,d){for(var b=!1,k=[],p=[],e=0;e<d.length;e++){var n=d[e].update(a);!0===n?b=!0:"function"===typeof n?(p.push(n),b=!0):"object"===typeof n&&"function"===typeof n.update&&k.push(n)}if(b)for(e=0;e<p.length;e++)p[e](a);else 0<k.length&&this.notify(a,k)};a.prototype.publish=function(a,h){h=
h||{};if("function"===typeof a&&(a=a(new d.type.AsyncResult(this)),"undefined"!==typeof a&&"function"===typeof a.getType&&"[object AsyncResult]"===a.getType()))return this;if("undefined"===typeof this._subscribers)return this.forward(a,h),this;this.notify(a,this._subscribers);this.forward(a,h);return this};a.prototype.addHelper=function(d,h){var b=a.prototype.publish,k=this;this[d]=function(){for(var a=[],d=0;d<arguments.length;d++)a.push(arguments[d]);return b.apply(k,[function(b){a.push(b);return h.apply(k,
a)}])};return this};a.prototype.getType=function(){return"[object Channel]"};a.prototype.ofType=function(a){return"Channel"===a||"function"===typeof a.getType&&a.getType()===this.getType()};d.behavior.extendedBy(a,"Channel")})(smallmachine);
